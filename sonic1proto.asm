; +-------------------------------------------------------------------------+
; |      This file was generated by The Interactive Disassembler (IDA)      |
; |           Copyright (c) 2018 Hex-Rays, <support@hex-rays.com>           |
; |                      License info: 48-3015-72F4-DD                      |
; |                       Octavian Dima, personal use                       |
; |                 File dumped by Buckaroo. Released by drx.               |
; |                          Dump method: Retrode 2.                        |
; +-------------------------------------------------------------------------+
;
; +-------------------------------------------------------------------------+
; | Since this prototype is going for more of a Hivebrain look, I'm going to|
; | make sure that that happens. So things will be changed to make it more  |
; | Hivebrain supportive.                                                   |
; |                                                                         |
; | Modified by Beta Filter. Originally made by AlexField and Iso Kilo.     |
; +-------------------------------------------------------------------------+
;
; ===========================================================================

Padding = 0 ; Set it to 0 to disable padding


stopZ80 macro
	move.w	#$100,($A11100).l

@loop:  btst	#$0,($A11100).l
        bne.s    @loop
        endm

; ===========================================================================

StartOfRom:
Vectors:	dc.l $FFFE00, EntryPoint, BusError, AddressError
                dc.l IllegalInstr, ZeroDivide, ChkInstr, TrapvInstr
                dc.l PrivilegeViol, Trace, Line1010Emu, Line1111Emu
                dc.l ErrorExcept, ErrorExcept, ErrorExcept, ErrorExcept
                dc.l ErrorExcept, ErrorExcept, ErrorExcept, ErrorExcept
                dc.l ErrorExcept, ErrorExcept, ErrorExcept, ErrorExcept
                dc.l ErrorExcept, ErrorTrap, ErrorTrap, ErrorTrap
                dc.l PalToCRAM, ErrorTrap, loc_B10, ErrorTrap
                dc.l ErrorTrap, ErrorTrap, ErrorTrap, ErrorTrap
                dc.l ErrorTrap, ErrorTrap, ErrorTrap, ErrorTrap
                dc.l ErrorTrap, ErrorTrap, ErrorTrap, ErrorTrap
                dc.l ErrorTrap, ErrorTrap, ErrorTrap, ErrorTrap
                dc.l ErrorTrap, ErrorTrap, ErrorTrap, ErrorTrap
                dc.l ErrorTrap, ErrorTrap, ErrorTrap, ErrorTrap
                dc.l ErrorTrap, ErrorTrap, ErrorTrap, ErrorTrap
                dc.l ErrorTrap, ErrorTrap, ErrorTrap, ErrorTrap
Console:        dc.b 'SEGA MEGA DRIVE ' ; Hardware system ID
Date:           dc.b '(C)SEGA 1991.APR' ; Release date
Title_Local:    dc.b 'SONIC THE               HEDGEHOG                ' ; Domestic name
Title_Int:      dc.b 'SONIC THE               HEDGEHOG                ' ; International name
Serial:         dc.b 'GM 00001009-00'   ; Serial/version number
Checksum:       dc.w 0
                dc.b 'J               ' ; I/O support
RomStartLoc:    dc.l StartOfRom         ; ROM start
RomEndLoc:      dc.l EndOfRom           ; ROM end
RamStartLoc:    dc.l $FF0000            ; RAM start
RamEndLoc:      dc.l $FFFFFF            ; RAM end
SRAMSupport:    dc.l $20202020          ; change to $5241E020 to create	SRAM
                dc.l $20202020          ; SRAM start
                dc.l $20202020          ; SRAM end
Notes:          dc.b '                                                    '
Region:         dc.b 'JU              ' ; Region

; ---------------------------------------------------------------------------

ErrorTrap:
                nop
                nop
                bra.s   ErrorTrap
; ---------------------------------------------------------------------------

EntryPoint:
                tst.l   ($A10008).l

loc_20C:
                bne.w   GameProgram
                tst.w   ($A1000C).l
                bne.s   loc_20C
                lea     SetupValues(pc),a5
                movem.l (a5)+,d5-a4
                move.w  -$1100(a1),d0
                andi.w  #$F,d0
                beq.s   loc_232
                move.l  #'SEGA',$2F00(a1)

loc_232:
                move.w  (a4),d0
                moveq   #0,d0
                movea.l d0,a6
                move.l a6,usp
                moveq   #$17,d1

loc_23C:
                move.b  (a5)+,d5
                move.w  d5,(a4)
                add.w   d7,d5
                dbf     d1,loc_23C

loc_246:
                move.l  #$40000080,(a4)
                move.w  d0,(a3)

loc_24E:
                move.w  d7,(a1)
                move.w  d7,(a2)

loc_252:
                btst    d0,(a1)
                bne.s   loc_252
                moveq   #$27,d2

loc_258:
                move.b  (a5)+,(a0)+
                dbf     d2,loc_258
                move.w  d0,(a2)
                move.w  d0,(a1)
                move.w  d7,(a2)

loc_264:
                move.l  d0,-(a6)
                dbf     d6,loc_264
                move.l  #$81048F02,(a4)
                move.l  #$C0000000,(a4)
                moveq   #$1F,d3

loc_278:
                move.l  d0,(a3)
                dbf     d3,loc_278
                move.l  #$40000010,(a4)
                moveq   #$13,d4

loc_286:
                move.l  d0,(a3)
                dbf     d4,loc_286
                moveq   #3,d5

loc_28E:
                move.b  (a5)+,$10(a3)
                dbf     d5,loc_28E
                move.w  d0,(a2)

loc_298:
                movem.l (a6),d0-a6
                move    #$2700,sr
                bra.s   GameProgram
; ---------------------------------------------------------------------------
SetupValues:    dc.l $8000
                dc.l $3FFF
                dc.l $100

                dc.l $A00000
                dc.l $A11100
                dc.l $A11200
                dc.l $C00000
                dc.l $C00004

                dc.b 4, $14, $30, $3C ; VDP Initialisation Values
                dc.b 7, $6C, 0, 0
                dc.b 0, 0, $FF, 0
                dc.b $81, $37, 0, 1
                dc.b 1, 0, 0, $FF
                dc.b $FF, 0, 0, $80

                dc.b $AF, 1, $D7, $1F, $11, $29, 0, $21, $28, 0 ; Z80 instructions
                dc.b $F9, $77, $ED, $B0, $DD, $E1, $FD, $E1, $ED
                dc.b $47, $ED, $4F, 8, $D9, $F1, $C1, $D1, $E1, 8
                dc.b $D9, $F1, $D1, $E1, $F9, $F3, $ED, $56, $36
                dc.b $E9, $E9

                dc.b $9F, $BF, $DF, $FF ; values for PSG channel volumes
; ---------------------------------------------------------------------------

GameProgram:
                btst    #6,($A1000D).l
                beq.s   CheckSumCheck
                cmpi.l  #'init',($FFFFFFFC).w
                beq.w   GameInit

CheckSumCheck:
                movea.l #ErrorTrap,a0
                movea.l #RomEndLoc,a1
                move.l  (a1),d0
                moveq   #0,d1

loc_32C:
                add.w   (a0)+,d1
                cmp.l   a0,d0
                bcc.s   loc_32C
                movea.l #Checksum,a1
                cmp.w   (a1),d1
                nop
                nop
                lea     ($FFFFFE00).w,a6
                moveq   #0,d7
                move.w  #$7F,d6

loc_348:
                move.l  d7,(a6)+
                dbf     d6,loc_348
                move.b  ($A10001).l,d0
                andi.b  #$C0,d0
                move.b  d0,($FFFFFFF8).w
                move.w  #1,($FFFFFFE0).w
                move.l  #'init',($FFFFFFFC).w

GameInit:
                lea     ($FF0000).l,a6
                moveq   #0,d7
                move.w  #$3F7F,d6

GameClrRAM:
                move.l  d7,(a6)+
                dbf     d6,GameClrRAM
                bsr.w   VDPSetupGame
                bsr.w   SoundDriverLoad
                bsr.w   JoypadInit
                move.b  #0,($FFFFF600).w

GameLoop:
                move.b  ($FFFFF600).w,d0
                andi.w  #$1C,d0
                jsr     GameModeArray(pc,d0.w)
                bra.s   GameLoop
; ---------------------------------------------------------------------------

GameModeArray:
                bra.w   SegaScreen
; ---------------------------------------------------------------------------
                bra.w   TitleScreen
; ---------------------------------------------------------------------------
                bra.w   Level
; ---------------------------------------------------------------------------
                bra.w   Level
; ---------------------------------------------------------------------------
                bra.w   SpecialStage
; ---------------------------------------------------------------------------
                rts
; ---------------------------------------------------------------------------

CheckSumError:
                bsr.w   VDPSetupGame
                move.l  #$C0000000,($C00004).l
                moveq   #$3F,d7

ChecksumFillPal:
                move.w  #$E,($C00000).l
                dbf     d7,ChecksumFillPal

ChecksumLoop:
                bra.s   ChecksumLoop
; ---------------------------------------------------------------------------

BusError:
                move.b  #2,($FFFFFC44).w
                bra.s   loc_434
; ---------------------------------------------------------------------------

AddressError:
                move.b  #4,($FFFFFC44).w
                bra.s   loc_434
; ---------------------------------------------------------------------------

IllegalInstr:
                move.b  #6,($FFFFFC44).w
                addq.l  #2,2(sp)
                bra.s   loc_45C
; ---------------------------------------------------------------------------

ZeroDivide:
                move.b  #8,($FFFFFC44).w
                bra.s   loc_45C
; ---------------------------------------------------------------------------

ChkInstr:
                move.b  #$A,($FFFFFC44).w
                bra.s   loc_45C
; ---------------------------------------------------------------------------

TrapvInstr:
                move.b  #$C,($FFFFFC44).w
                bra.s   loc_45C
; ---------------------------------------------------------------------------

PrivilegeViol:
                move.b  #$E,($FFFFFC44).w
                bra.s   loc_45C
; ---------------------------------------------------------------------------

Trace:
                move.b  #$10,($FFFFFC44).w
                bra.s   loc_45C
; ---------------------------------------------------------------------------

Line1010Emu:
                move.b  #$12,($FFFFFC44).w
                addq.l  #2,2(sp)
                bra.s   loc_45C
; ---------------------------------------------------------------------------

Line1111Emu:
                move.b  #$14,($FFFFFC44).w
                addq.l  #2,2(sp)
                bra.s   loc_45C
; ---------------------------------------------------------------------------

ErrorExcept:
                move.b  #0,($FFFFFC44).w
                bra.s   loc_45C
; ---------------------------------------------------------------------------

loc_434:
                move    #$2700,sr
                addq.w  #2,sp
                move.l  (sp)+,($FFFFFC40).w
                addq.w  #2,sp
                movem.l d0-a7,($FFFFFC00).w
                bsr.w   ShowErrorMessage
                move.l  2(sp),d0
                bsr.w   sub_5B4
                move.l  ($FFFFFC40).w,d0
                bsr.w   sub_5B4
                bra.s   loc_472
; ---------------------------------------------------------------------------

loc_45C:
                move    #$2700,sr
                movem.l d0-a7,($FFFFFC00).w
                bsr.w   ShowErrorMessage
                move.l  2(sp),d0
                bsr.w   sub_5B4

loc_472:
                bsr.w   ErrorPressC
                movem.l ($FFFFFC00).w,d0-a7
                move    #$2300,sr
                rte

; =============== S U B R O U T I N E =======================================


ShowErrorMessage:
                lea     ($C00000).l,a6
                move.l  #$78000003,($C00004).l
                lea     (Art_Text).l,a0
                move.w  #$27F,d1

LoadErrorGraphics:
                move.w  (a0)+,(a6)
                dbf     d1,LoadErrorGraphics
                moveq   #0,d0
                move.b  ($FFFFFC44).w,d0
                move.w  ErrorText(pc,d0.w),d0
                lea     ErrorText(pc,d0.w),a0
                move.l  #$46040003,($C00004).l
                moveq   #$12,d1

ErrorLetterLoop:
                moveq   #0,d0
                move.b  (a0)+,d0
                addi.w  #$790,d0
                move.w  d0,(a6)
                dbf     d1,ErrorLetterLoop
                rts
; End of function ShowErrorMessage

; ---------------------------------------------------------------------------
ErrorText:	dc.w asc_4E8-ErrorText,	asc_4FB-ErrorText 
		dc.w asc_50E-ErrorText,	asc_521-ErrorText
		dc.w asc_534-ErrorText,	asc_547-ErrorText
		dc.w asc_55A-ErrorText,	asc_56D-ErrorText
		dc.w asc_580-ErrorText,	asc_593-ErrorText
		dc.w asc_5A6-ErrorText
asc_4E8:	dc.b 'ERROR EXCEPTION    '
asc_4FB:	dc.b 'BUS ERROR          '
asc_50E:	dc.b 'ADDRESS ERROR      '
asc_521:	dc.b 'ILLEGAL INSTRUCTION'
asc_534:	dc.b '@ERO DIVIDE        '
asc_547:	dc.b 'CHK INSTRUCTION    '
asc_55A:	dc.b 'TRAPV INSTRUCTION  '
asc_56D:	dc.b 'PRIVILEGE VIOLATION'
asc_580:	dc.b 'TRACE              '
asc_593:	dc.b 'LINE 1010 EMULATOR '
asc_5A6:	dc.b 'LINE 1111 EMULATOR '
		even

; =============== S U B R O U T I N E =======================================


sub_5B4:
                move.w  #$7CA,(a6)
                moveq   #7,d2

loc_5BA:
                rol.l   #4,d0
                bsr.s   sub_5C4
                dbf     d2,loc_5BA
                rts
; End of function sub_5B4


; =============== S U B R O U T I N E =======================================


sub_5C4:
                move.w  d0,d1
                andi.w  #$F,d1
                cmpi.w  #$A,d1
                bcs.s   loc_5D2
                addq.w  #7,d1

loc_5D2:
                addi.w  #$7C0,d1
                move.w  d1,(a6)
                rts
; End of function sub_5C4


; =============== S U B R O U T I N E =======================================


ErrorPressC:
                bsr.w   ControllRead
                cmpi.b  #$20,($FFFFF605).w
                bne.w   ErrorPressC
                rts
; End of function ErrorPressC

; ---------------------------------------------------------------------------
Art_Text:       incbin "Art\Uncompressed\Text.bin"
                even
; ---------------------------------------------------------------------------

loc_B10:
                movem.l d0-a6,-(sp)
                tst.b   ($FFFFF62A).w
                beq.s   loc_B58
                move.w  ($C00004).l,d0
                move.l  #$40000010,($C00004).l
                move.l  ($FFFFF616).w,($C00000).l
                btst    #6,($FFFFFFF8).w
                beq.s   loc_B3C
                move.w  #$700,d0

loc_B38:
                dbf     d0,loc_B38

loc_B3C:
                move.b  ($FFFFF62A).w,d0
                move.b  #0,($FFFFF62A).w
                move.w  #1,($FFFFF648).w

loc_B4C:
                andi.w  #$3E,d0
                move.w  VBla_Index(pc,d0.w),d0
                jsr     VBla_Index(pc,d0.w)

loc_B58:
                addq.l  #1,($FFFFFE0C).w
                jsr     (UpdateMusic).l
                movem.l (sp)+,d0-a6
                rte
; ---------------------------------------------------------------------------

locret_B68:
                rts
; ---------------------------------------------------------------------------
VBla_Index:     dc.w locret_B68-VBla_Index
                dc.w code_b7e-VBla_Index
                dc.w code_b90-VBla_Index
                dc.w code_baa-VBla_Index
                dc.w code_bba-VBla_Index
                dc.w code_cbc-VBla_Index
                dc.w code_d88-VBla_Index
                dc.w code_e58-VBla_Index
                dc.w code_bb0-VBla_Index
                dc.w code_e70-VBla_Index
; ---------------------------------------------------------------------------

code_b7e:
                bsr.w   sub_E78
                tst.w   ($FFFFF614).w
                beq.w   locret_B8E
                subq.w  #1,($FFFFF614).w

locret_B8E:
                rts
; ---------------------------------------------------------------------------

code_b90:
                bsr.w   sub_E78
                bsr.w   LoadTilesAsYouMove_BGOnly
                bsr.w   sub_1438
                tst.w   ($FFFFF614).w
                beq.w   locret_BA8
                subq.w  #1,($FFFFF614).w

locret_BA8:
                rts
; ---------------------------------------------------------------------------

code_baa:
                bsr.w   sub_E78
                rts
; ---------------------------------------------------------------------------

code_bb0:
                cmpi.b  #$10,($FFFFF600).w
                beq.w   code_cbc

code_bba:
                bsr.w   ControllRead
		stopZ80
                lea     ($C00004).l,a5
                move.l  #$94009340,(a5)
                move.l  #$96FD9580,(a5)
                move.w  #$977F,(a5)
                move.w  #$C000,(a5)
                move.w  #$80,($FFFFF644).w
                move.w  ($FFFFF644).w,(a5)
                lea     ($C00004).l,a5
                move.l  #$940193C0,(a5)
                move.l  #$96E69500,(a5)
                move.w  #$977F,(a5)
                move.w  #$7C00,(a5)
                move.w  #$83,($FFFFF644).w
                move.w  ($FFFFF644).w,(a5)
                move.w  #$8407,(a5)
                move.w  ($FFFFF624).w,(a5)
                move.w  ($FFFFF61E).w,($FFFFF622).w
                lea     ($C00004).l,a5
                move.l  #$94019340,(a5)
                move.l  #$96FC9500,(a5)
                move.w  #$977F,(a5)
                move.w  #$7800,(a5)
                move.w  #$83,($FFFFF644).w
                move.w  ($FFFFF644).w,(a5)
                tst.b   ($FFFFF767).w
                beq.s   loc_C7A
                lea     ($C00004).l,a5
                move.l  #$94019370,(a5)
                move.l  #$96E49500,(a5)
                move.w  #$977F,(a5)
                move.w  #$7000,(a5)
                move.w  #$83,($FFFFF644).w
                move.w  ($FFFFF644).w,(a5)
                move.b  #0,($FFFFF767).w

loc_C7A:
		move.w	#$0,($A11100).l
                bsr.w   LoadTilesAsYouMove
                jsr     (loc_1128C).l

loc_C8C:
                jsr     (sub_1167A).l
                bsr.w   sub_1454
                moveq   #0,d0
                move.b  ($FFFFF628).w,d0
                move.b  ($FFFFF629).w,d1
                cmp.b   d0,d1
                bcc.s   loc_CA8
                move.b  d0,($FFFFF629).w

loc_CA8:
                move.b  #0,($FFFFF628).w
                tst.w   ($FFFFF614).w
                beq.w   locret_CBA
                subq.w  #1,($FFFFF614).w

locret_CBA:
                rts
; ---------------------------------------------------------------------------

code_cbc:
                bsr.w   ControllRead
		stopZ80
                lea     ($C00004).l,a5
                move.l  #$94009340,(a5)
                move.l  #$96FD9580,(a5)
                move.w  #$977F,(a5)
                move.w  #$C000,(a5)
                move.w  #$80,($FFFFF644).w
                move.w  ($FFFFF644).w,(a5)
                lea     ($C00004).l,a5
                move.l  #$94019340,(a5)
                move.l  #$96FC9500,(a5)

loc_D08:
                move.w  #$977F,(a5)
                move.w  #$7800,(a5)
                move.w  #$83,($FFFFF644).w
                move.w  ($FFFFF644).w,(a5)
                lea     ($C00004).l,a5
                move.l  #$940193C0,(a5)
                move.l  #$96E69500,(a5)
                move.w  #$977F,(a5)
                move.w  #$7C00,(a5)
                move.w  #$83,($FFFFF644).w
                move.w  ($FFFFF644).w,(a5)
		move.w	#$0,($A11100).l
                bsr.w   sub_3730
                tst.b   ($FFFFF767).w
                beq.s   loc_D7A
                lea     ($C00004).l,a5
                move.l  #$94019370,(a5)
                move.l  #$96E49500,(a5)
                move.w  #$977F,(a5)
                move.w  #$7000,(a5)
                move.w  #$83,($FFFFF644).w
                move.w  ($FFFFF644).w,(a5)
                move.b  #0,($FFFFF767).w

loc_D7A:
                tst.w   ($FFFFF614).w
                beq.w   locret_D86
                subq.w  #1,($FFFFF614).w

locret_D86:
                rts
; ---------------------------------------------------------------------------

code_d88:
                bsr.w   ControllRead
		stopZ80
                lea     ($C00004).l,a5
                move.l  #$94009340,(a5)
                move.l  #$96FD9580,(a5)
                move.w  #$977F,(a5)
                move.w  #$C000,(a5)
                move.w  #$80,($FFFFF644).w
                move.w  ($FFFFF644).w,(a5)
                lea     ($C00004).l,a5
                move.l  #$94019340,(a5)
                move.l  #$96FC9500,(a5)
                move.w  #$977F,(a5)
                move.w  #$7800,(a5)
                move.w  #$83,($FFFFF644).w
                move.w  ($FFFFF644).w,(a5)
                lea     ($C00004).l,a5
                move.l  #$940193C0,(a5)
                move.l  #$96E69500,(a5)
                move.w  #$977F,(a5)
                move.w  #$7C00,(a5)
                move.w  #$83,($FFFFF644).w
                move.w  ($FFFFF644).w,(a5)
                tst.b   ($FFFFF767).w
                beq.s   loc_E3A
                lea     ($C00004).l,a5
                move.l  #$94019370,(a5)
                move.l  #$96E49500,(a5)
                move.w  #$977F,(a5)
                move.w  #$7000,(a5)
                move.w  #$83,($FFFFF644).w
                move.w  ($FFFFF644).w,(a5)
                move.b  #0,($FFFFF767).w

loc_E3A:
		move.w	#$0,($A11100).l
                bsr.w   LoadTilesAsYouMove
                jsr     (loc_1128C).l
                jsr     (sub_1167A).l
                bsr.w   sub_1438
                rts
; ---------------------------------------------------------------------------

code_e58:
                bsr.w   sub_E78
                bsr.w   RunObjects
                bsr.w   BuildSprites
                addq.b  #1,($FFFFF628).w
                move.b  #$E,($FFFFF62A).w
                rts
; ---------------------------------------------------------------------------

code_e70:
                bsr.w   sub_E78
                bra.w   sub_1438

; =============== S U B R O U T I N E =======================================


sub_E78:
                bsr.w   ControllRead
		stopZ80
                lea     ($C00004).l,a5
                move.l  #$94009340,(a5)
                move.l  #$96FD9580,(a5)
                move.w  #$977F,(a5)
                move.w  #$C000,(a5)
                move.w  #$80,($FFFFF644).w
                move.w  ($FFFFF644).w,(a5)
                lea     ($C00004).l,a5
                move.l  #$94019340,(a5)
                move.l  #$96FC9500,(a5)
                move.w  #$977F,(a5)
                move.w  #$7800,(a5)
                move.w  #$83,($FFFFF644).w
                move.w  ($FFFFF644).w,(a5)
                lea     ($C00004).l,a5
                move.l  #$940193C0,(a5)
                move.l  #$96E69500,(a5)
                move.w  #$977F,(a5)
                move.w  #$7C00,(a5)
                move.w  #$83,($FFFFF644).w
                move.w  ($FFFFF644).w,(a5)
		move.w	#$0,($A11100).l
                rts
; End of function sub_E78


; =============== S U B R O U T I N E =======================================


PalToCRAM:
                tst.w   ($FFFFF648).w
                beq.s   locret_F3A
                move.l  a5,-(sp)
                lea     ($C00004).l,a5
                move.l  #$94009340,(a5)
                move.l  #$96FD95C0,(a5)
                move.w  #$977F,(a5)
                move.w  #$C000,(a5)
                move.w  #$80,($FFFFF644).w
                move.w  ($FFFFF644).w,(a5)
                movem.l (sp)+,a5
                move.w  #0,($FFFFF648).w

locret_F3A:
                rte
; End of function HBlank

; ---------------------------------------------------------------------------
                tst.w   ($FFFFF648).w
                beq.s   locret_F7E
                movem.l d0/a0/a5,-(sp)
                move.w  #0,($FFFFF648).w

loc_F4C:
                move.w  #$8405,($C00004).l
                move.w  #$857C,($C00004).l
                move.l  #$78000003,($C00004).l
                lea     ($FFFFF800).w,a0
                lea     ($C00000).l,a5
                move.w  #$9F,d0

loc_F74:
                move.l  (a0)+,(a5)
                dbf     d0,loc_F74
                movem.l (sp)+,d0/a0/a5

locret_F7E:
                rte

; =============== S U B R O U T I N E =======================================


JoypadInit:
		stopZ80
                moveq   #$40,d0
                move.b  d0,($A10009).l
                move.b  d0,($A1000B).l
                move.b  d0,($A1000D).l
		move.w	#$0,($A11100).l
                rts
; End of function JoypadInit

; ReadJoypads:

; =============== S U B R O U T I N E =======================================


ControllRead:
		stopZ80
                lea     ($FFFFF604).w,a0
                lea     ($A10003).l,a1
                bsr.s   sub_FDC
                addq.w  #2,a1
                bsr.s   sub_FDC
		move.w	#$0,($A11100).l
                rts
; End of function ControllRead


; =============== S U B R O U T I N E =======================================


sub_FDC:
                move.b  #0,(a1)
                nop
                nop
                move.b  (a1),d0
                lsl.b   #2,d0
                andi.b  #$C0,d0
                move.b  #$40,(a1)
                nop
                nop
                move.b  (a1),d1
                andi.b  #$3F,d1
                or.b    d1,d0
                not.b   d0
                move.b  (a0),d1
                eor.b   d0,d1
                move.b  d0,(a0)+
                and.b   d0,d1
                move.b  d1,(a0)+
                rts
; End of function sub_FDC


; =============== S U B R O U T I N E =======================================


VDPSetupGame:
                lea     ($C00004).l,a0
                lea     ($C00000).l,a1
                lea     (VDPSetupArray).l,a2
                moveq   #$12,d7

VDP_Loop:
                move.w  (a2)+,(a0)
                dbf     d7,VDP_Loop
                move.w  (VDPSetupArray+2).l,d0
                move.w  d0,($FFFFF60C).w
                moveq   #0,d0
                move.l  #$C0000000,($C00004).l
                move.w  #$3F,d7

VDP_ClrCRAM:
                move.w  d0,(a1)
                dbf     d7,VDP_ClrCRAM
                clr.l   ($FFFFF616).w
                clr.l   ($FFFFF61A).w
                move.l  d1,-(sp)
                lea     ($C00004).l,a5
                move.w  #$8F01,(a5)
                move.l  #$94FF93FF,(a5)
                move.w  #$9780,(a5)
                move.l  #$40000080,(a5)
                move.w  #0,($C00000).l

loc_1070:
                move.w  (a5),d1
                btst    #1,d1
                bne.s   loc_1070
                move.w  #$8F02,(a5)
                move.l  (sp)+,d1
                rts
; End of function VDPSetupGame

; ---------------------------------------------------------------------------
VDPSetupArray:  dc.w $8004
                dc.w $8134, $8230
                dc.w $8328, $8407
                dc.w $857C, $8600
                dc.w $8700, $8800
                dc.w $8900, $8A00
                dc.w $8B00, $8C81
                dc.w $8D3F, $8E00
                dc.w $8F02, $9001
                dc.w $9100, $9200

; =============== S U B R O U T I N E =======================================


ClearScreen:
                lea     ($C00004).l,a5
                move.w  #$8F01,(a5)
                move.l  #$940F93FF,(a5)
                move.w  #$9780,(a5)
                move.l  #$40000083,(a5)
                move.w  #0,($C00000).l

loc_10C8:
                move.w  (a5),d1
                btst    #1,d1
                bne.s   loc_10C8
                move.w  #$8F02,(a5)
                lea     ($C00004).l,a5
                move.w  #$8F01,(a5)
                move.l  #$940F93FF,(a5)
                move.w  #$9780,(a5)
                move.l  #$60000083,(a5)
                move.w  #0,($C00000).l

loc_10F6:
                move.w  (a5),d1
                btst    #1,d1
                bne.s   loc_10F6
                move.w  #$8F02,(a5)
                move.l  #0,($FFFFF616).w
                move.l  #0,($FFFFF61A).w
                lea     ($FFFFF800).w,a1
                moveq   #0,d0
                move.w  #$A0,d1

loc_111C:
                move.l  d0,(a1)+
                dbf     d1,loc_111C
                lea     ($FFFFCC00).w,a1
                moveq   #0,d0
                move.w  #$100,d1

loc_112C:
                move.l  d0,(a1)+
                dbf     d1,loc_112C
                rts
; End of function ClearScreen


; =============== S U B R O U T I N E =======================================


SoundDriverLoad:
                nop
                move.w  #$100,($A11100).l
                move.w  #$100,($A11200).l
                lea     (SoundDriver).l,a0
                lea     ($A00000).l,a1
                move.w  #$1C5B,d0

SoundDriverLoad_Loop:
                move.b  (a0)+,(a1)+
                dbf     d0,SoundDriverLoad_Loop
                moveq   #0,d0
                lea     ($A01FF8).l,a1
                move.b  d0,(a1)+
                move.b  #$80,(a1)+
                move.b  #7,(a1)+
                move.b  #$80,(a1)+
                move.b  d0,(a1)+
                move.b  d0,(a1)+
                move.b  d0,(a1)+
                move.b  d0,(a1)+
                move.w  #0,($A11200).l
                nop
                nop
                nop
                nop
                move.w  #$100,($A11200).l
		move.w	#$0,($A11100).l
                rts
; End of function SoundDriverLoad

; ---------------------------------------------------------------------------
                dc.b   3
                dc.b   0
                dc.b   0
                dc.b $14
                dc.b   0
                dc.b   0
                dc.b   0
                dc.b   0

; =============== S U B R O U T I N E =======================================


PlaySound:
                move.b  d0,($FFFFF00A).w
                rts
; End of function PlaySound


; =============== S U B R O U T I N E =======================================


PlaySound_Special:
                move.b  d0,($FFFFF00B).w
                rts
; End of function PlaySound_Special

; ---------------------------------------------------------------------------

PlaySound_Unk:
                move.b  d0,($FFFFF00C).w
                rts
; PauseGame:

; =============== S U B R O U T I N E =======================================


Pause:
                nop
                tst.b   ($FFFFFE12).w
                beq.s   Unpause
                tst.w   ($FFFFF63A).w
                bne.s   EnablePauseState
                btst    #7,($FFFFF605).w
                beq.s   Pause_Return

EnablePauseState:
                move.w  #$FFFF,($FFFFF63A).w

loc_11D2:
                move.b  #$10,($FFFFF62A).w
                bsr.w   WaitForVint
                btst    #6,($FFFFF605).w
                beq.s   Pause_ChkBC
                move.b  #4,($FFFFF600).w
                nop
                bra.s   Unpause
; ---------------------------------------------------------------------------

Pause_ChkBC:
                btst    #4,($FFFFF604).w
                bne.s   Pause_SlowMo
                btst    #5,($FFFFF605).w
                bne.s   Pause_SlowMo

Pause_ChkStart:
                btst    #7,($FFFFF605).w
                beq.s   loc_11D2

Unpause:
                move.w  #0,($FFFFF63A).w

Pause_Return:
                rts
; End of function Pause

; ---------------------------------------------------------------------------

Pause_SlowMo:
                move.w  #1,($FFFFF63A).w
                rts

; =============== S U B R O U T I N E =======================================


ShowVDPGraphics:
                lea     ($C00000).l,a6
                move.l  #$800000,d4

loc_1222:
                move.l  d0,4(a6)
                move.w  d1,d3

loc_1228:
                move.w  (a1)+,(a6)
                dbf     d3,loc_1228
                add.l   d4,d0
                dbf     d2,loc_1222
                rts
; End of function ShowVDPGraphics

; ---------------------------------------------------------------------------
; Nemesis Decompression
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

NemDec:
                movem.l d0-a1/a3-a5,-(sp)
                lea     (NemDec_WriteAndStay).l,a3
                lea     ($C00000).l,a4
                bra.s   loc_1252

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; Not actually used in this game, though
; NemDecToRAM:
                movem.l d0-a1/a3-a5,-(sp)
                lea     (NemDec_WriteAndAdvance).l,a3

loc_1252:
                lea     ($FFFFAA00).w,a1
                move.w  (a0)+,d2
                lsl.w   #1,d2
                bcc.s   loc_1260
                adda.w  #$A,a3

loc_1260:
                lsl.w   #2,d2
                movea.w d2,a5
                moveq   #8,d3
                moveq   #0,d2
                moveq   #0,d4
                bsr.w   NemDecPrepare
                move.b  (a0)+,d5
                asl.w   #8,d5
                move.b  (a0)+,d5
                move.w  #$10,d6
                bsr.s   NemDecRun
                movem.l (sp)+,d0-a1/a3-a5
                rts
; End of function NemDec


; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

NemDecRun:
                move.w  d6,d7
                subq.w  #8,d7
                move.w  d5,d1
                lsr.w   d7,d1
                cmpi.b  #$FC,d1
                bcc.s   loc_12CC
                andi.w  #$FF,d1
                add.w   d1,d1
                move.b  (a1,d1.w),d0
                ext.w   d0
                sub.w   d0,d6
                cmpi.w  #9,d6

loc_12A0:
                bcc.s   loc_12A8
                addq.w  #8,d6
                asl.w   #8,d5
                move.b  (a0)+,d5

loc_12A8:
                move.b  1(a1,d1.w),d1
                move.w  d1,d0
                andi.w  #$F,d1
                andi.w  #$F0,d0

loc_12B6:
                lsr.w   #4,d0

loc_12B8:
                lsl.l   #4,d4
                or.b    d1,d4
                subq.w  #1,d3
                bne.s   NemDec_WriteIter_Part2
                jmp     (a3)
; ===========================================================================
NemDec_WriteIter:
                moveq   #0,d4
                moveq   #8,d3
; loc_12C6:
NemDec_WriteIter_Part2:
                dbf     d0,loc_12B8
                bra.s   NemDecRun
; ===========================================================================

loc_12CC:
                subq.w  #6,d6
                cmpi.w  #9,d6
                bcc.s   loc_12DA
                addq.w  #8,d6
                asl.w   #8,d5
                move.b  (a0)+,d5

loc_12DA:
                subq.w  #7,d6
                move.w  d5,d1
                lsr.w   d6,d1
                move.w  d1,d0
                andi.w  #$F,d1
                andi.w  #$70,d0 
                cmpi.w  #9,d6
                bcc.s   loc_12B6
                addq.w  #8,d6
                asl.w   #8,d5
                move.b  (a0)+,d5
                bra.s   loc_12B6
; End of function NemDecRun

; ===========================================================================
; sub_12F8:
NemDec_WriteAndStay:
                move.l  d4,(a4)
                subq.w  #1,a5
                move.w  a5,d4
                bne.s   NemDec_WriteIter
                rts
; End of function NemDec_WriteAndStay

; ---------------------------------------------------------------------------

NemDec_WriteAndStay_XOR:
                eor.l   d4,d2
                move.l  d2,(a4)
                subq.w  #1,a5
                move.w  a5,d4
                bne.s   NemDec_WriteIter
                rts
; ---------------------------------------------------------------------------
; loc_130E:
NemDec_WriteAndAdvance:
                move.l  d4,(a4)+
                subq.w  #1,a5
                move.w  a5,d4
                bne.s   NemDec_WriteIter
                rts
; ---------------------------------------------------------------------------

NemDec_WriteAndAdvance_XOR:
                eor.l   d4,d2
                move.l  d2,(a4)+
                subq.w  #1,a5
                move.w  a5,d4
                bne.s   NemDec_WriteIter
                rts


; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
; Part of the Nemesis decompressor
; sub_1324:
NemDecPrepare:
                move.b  (a0)+,d0

loc_1326:
                cmpi.b  #$FF,d0
                bne.s   loc_132E
                rts
; ---------------------------------------------------------------------------

loc_132E:
                move.w  d0,d7

loc_1330:
                move.b  (a0)+,d0
                cmpi.b  #$80,d0
                bcc.s   loc_1326
                move.b  d0,d1
                andi.w  #$F,d7
                andi.w  #$70,d1
                or.w    d1,d7
                andi.w  #$F,d0
                move.b  d0,d1
                lsl.w   #8,d1
                or.w    d1,d7
                moveq   #8,d1
                sub.w   d0,d1
                bne.s   loc_135E
                move.b  (a0)+,d0
                add.w   d0,d0
                move.w  d7,(a1,d0.w)
                bra.s   loc_1330
; ---------------------------------------------------------------------------

loc_135E:
                move.b  (a0)+,d0
                lsl.w   d1,d0
                add.w   d0,d0
                moveq   #1,d5
                lsl.w   d1,d5
                subq.w  #1,d5

loc_136A:
                move.w  d7,(a1,d0.w)
                addq.w  #2,d0
                dbf     d5,loc_136A
                bra.s   loc_1330
; End of function NemDecPrepare

; ---------------------------------------------------------------------------
; END OF NEMESIS DECOMPRESSOR
; ---------------------------------------------------------------------------



; =============== S U B R O U T I N E =======================================


LoadPLCs:
                movem.l a1-a2,-(sp)
                lea     (Pattern_Load_Cues).l,a1
                add.w   d0,d0
                move.w  (a1,d0.w),d0
                lea     (a1,d0.w),a1
                lea     ($FFFFF680).w,a2

loc_138E:
                tst.l   (a2)
                beq.s   loc_1396
                addq.w  #6,a2
                bra.s   loc_138E
; ---------------------------------------------------------------------------

loc_1396:
                move.w  (a1)+,d0
                bmi.s   loc_13A2

loc_139A:
                move.l  (a1)+,(a2)+
                move.w  (a1)+,(a2)+
                dbf     d0,loc_139A

loc_13A2:
                movem.l (sp)+,a1-a2
                rts
; End of function LoadPLCs


; =============== S U B R O U T I N E =======================================


LoadPLC2:
                movem.l a1-a2,-(sp)
                lea     (Pattern_Load_Cues).l,a1
                add.w   d0,d0
                move.w  (a1,d0.w),d0
                lea     (a1,d0.w),a1
                bsr.s   ClearPLC
                lea     ($FFFFF680).w,a2
                move.w  (a1)+,d0
                bmi.s   loc_13CE

loc_13C6:
                move.l  (a1)+,(a2)+
                move.w  (a1)+,(a2)+
                dbf     d0,loc_13C6

loc_13CE:
                movem.l (sp)+,a1-a2
                rts
; End of function LoadPLC2


; =============== S U B R O U T I N E =======================================


ClearPLC:
                lea     ($FFFFF680).w,a2
                moveq   #$1F,d0

loc_13DA:
                clr.l   (a2)+
                dbf     d0,loc_13DA
                rts
; End of function ClearPLC


; =============== S U B R O U T I N E =======================================


RunPLC_RAM:
                tst.l   ($FFFFF680).w
                beq.s   locret_1436
                tst.w   ($FFFFF6F8).w
                bne.s   locret_1436
                movea.l ($FFFFF680).w,a0
                lea     (NemDec_WriteAndStay).l,a3
                lea     ($FFFFAA00).w,a1
                move.w  (a0)+,d2
                bpl.s   loc_1404
                adda.w  #$A,a3

loc_1404:
                andi.w  #$7FFF,d2
                move.w  d2,($FFFFF6F8).w
                bsr.w   NemDecPrepare
                move.b  (a0)+,d5
                asl.w   #8,d5
                move.b  (a0)+,d5
                moveq   #$10,d6
                moveq   #0,d0
                move.l  a0,($FFFFF680).w
                move.l  a3,($FFFFF6E0).w
                move.l  d0,($FFFFF6E4).w
                move.l  d0,($FFFFF6E8).w
                move.l  d0,($FFFFF6EC).w
                move.l  d5,($FFFFF6F0).w
                move.l  d6,($FFFFF6F4).w

locret_1436:
                rts
; End of function RunPLC_RAM


; =============== S U B R O U T I N E =======================================


sub_1438:
                tst.w   ($FFFFF6F8).w
                beq.w   locret_14D0
                move.w  #9,($FFFFF6FA).w
                moveq   #0,d0
                move.w  ($FFFFF684).w,d0
                addi.w  #$120,($FFFFF684).w
                bra.s   loc_146C
; End of function sub_1438


; =============== S U B R O U T I N E =======================================


sub_1454:
                tst.w   ($FFFFF6F8).w
                beq.s   locret_14D0
                move.w  #3,($FFFFF6FA).w
                moveq   #0,d0
                move.w  ($FFFFF684).w,d0
                addi.w  #$60,($FFFFF684).w 

loc_146C:
                lea     ($C00004).l,a4
                lsl.l   #2,d0
                lsr.w   #2,d0
                ori.w   #$4000,d0
                swap    d0
                move.l  d0,(a4)
                subq.w  #4,a4
                movea.l ($FFFFF680).w,a0
                movea.l ($FFFFF6E0).w,a3
                move.l  ($FFFFF6E4).w,d0
                move.l  ($FFFFF6E8).w,d1
                move.l  ($FFFFF6EC).w,d2
                move.l  ($FFFFF6F0).w,d5
                move.l  ($FFFFF6F4).w,d6
                lea     ($FFFFAA00).w,a1

loc_14A0:
                movea.w #8,a5
                bsr.w   NemDec_WriteIter
                subq.w  #1,($FFFFF6F8).w
                beq.s   loc_14D2
                subq.w  #1,($FFFFF6FA).w
                bne.s   loc_14A0
                move.l  a0,($FFFFF680).w
                move.l  a3,($FFFFF6E0).w
                move.l  d0,($FFFFF6E4).w
                move.l  d1,($FFFFF6E8).w
                move.l  d2,($FFFFF6EC).w
                move.l  d5,($FFFFF6F0).w
                move.l  d6,($FFFFF6F4).w

locret_14D0:
                rts
; ---------------------------------------------------------------------------

loc_14D2:
                lea     ($FFFFF680).w,a0
                moveq   #$15,d0

loc_14D8:
                move.l  6(a0),(a0)+
                dbf     d0,loc_14D8
                rts
; End of function sub_1454


; =============== S U B R O U T I N E =======================================


RunPLC_ROM:
                lea     (Pattern_Load_Cues).l,a1
                add.w   d0,d0
                move.w  (a1,d0.w),d0
                lea     (a1,d0.w),a1
                move.w  (a1)+,d1

loc_14F4:
                movea.l (a1)+,a0
                moveq   #0,d0
                move.w  (a1)+,d0
                lsl.l   #2,d0
                lsr.w   #2,d0
                ori.w   #$4000,d0
                swap    d0
                move.l  d0,($C00004).l
                bsr.w   NemDec
                dbf     d1,loc_14F4
                rts
; End of function RunPLC_ROM

; EniDec:

; =============== S U B R O U T I N E =======================================


EnigmaDecompress:
                movem.l d0-d7/a1-a5,-(sp)
                movea.w d0,a3
                move.b  (a0)+,d0
                ext.w   d0
                movea.w d0,a5
                move.b  (a0)+,d4
                lsl.b   #3,d4
                movea.w (a0)+,a2
                adda.w  a3,a2
                movea.w (a0)+,a4
                adda.w  a3,a4
                move.b  (a0)+,d5
                asl.w   #8,d5
                move.b  (a0)+,d5
                moveq   #$10,d6
                moveq   #7,d0
                move.w  d6,d7
                sub.w   d0,d7
                move.w  d5,d1
                lsr.w   d7,d1
                andi.w  #$7F,d1
                move.w  d1,d2
                cmpi.w  #$40,d1
                bcc.s   loc_154E
                moveq   #6,d0
                lsr.w   #1,d2

loc_154E:
                bsr.w   sub_1682
                andi.w  #$F,d2
                lsr.w   #4,d1
                add.w   d1,d1
                jmp     unk_15AA(pc,d1.w)
; End of function EnigmaDecompress

; ---------------------------------------------------------------------------
                dc.b $32
                dc.b $CA
                dc.b $52
                dc.b $4A
                dc.b $51
                dc.b $CA
                dc.b $FF
                dc.b $FA
                dc.b $60
                dc.b $CC
                dc.b $32
                dc.b $CC
                dc.b $51
                dc.b $CA
                dc.b $FF
                dc.b $FC
                dc.b $60
                dc.b $C4
                dc.b $61
                dc.b   0
                dc.b   0
                dc.b $60
                dc.b $32
                dc.b $C1
                dc.b $51
                dc.b $CA
                dc.b $FF
                dc.b $FC
                dc.b $60
                dc.b $B8
                dc.b $61
                dc.b   0
                dc.b   0
                dc.b $54
                dc.b $32
                dc.b $C1
                dc.b $52
                dc.b $41
                dc.b $51
                dc.b $CA
                dc.b $FF
                dc.b $FA
                dc.b $60 
                dc.b $AA
                dc.b $61
                dc.b   0
                dc.b   0
                dc.b $46
                dc.b $32
                dc.b $C1
                dc.b $53
                dc.b $41
                dc.b $51
                dc.b $CA
                dc.b $FF
                dc.b $FA
                dc.b $60 
                dc.b $9C
                dc.b  $C
                dc.b $42
                dc.b   0
                dc.b  $F
                dc.b $67
                dc.b $1C
                dc.b $61
                dc.b   0
                dc.b   0
                dc.b $32
                dc.b $32
                dc.b $C1
                dc.b $51
                dc.b $CA
                dc.b $FF
                dc.b $F8
                dc.b $60 
                dc.b $8A

unk_15AA:       include "Unknown/Unk_15AA.asm"

; =============== S U B R O U T I N E =======================================


sub_1682:
                sub.w   d0,d6
                cmpi.w  #9,d6
                bcc.s   locret_1690
                addq.w  #8,d6
                asl.w   #8,d5
                move.b  (a0)+,d5

locret_1690:
                rts
; End of function sub_1682


; =============== S U B R O U T I N E =======================================


sub_1692:

var_1           = -1

                subq.l  #2,sp
                move.b  (a0)+,2+var_1(sp)
                move.b  (a0)+,(sp)
                move.w  (sp),d5
                moveq   #$F,d4

loc_169E:
                lsr.w   #1,d5
                move    sr,d6
                dbf     d4,loc_16B0

loc_16A6:
                move.b  (a0)+,2+var_1(sp)
                move.b  (a0)+,(sp)

loc_16AC:
                move.w  (sp),d5
                moveq   #$F,d4

loc_16B0:
                move    d6,ccr
                bcc.s   loc_16B8
                move.b  (a0)+,(a1)+
                bra.s   loc_169E
; ---------------------------------------------------------------------------

loc_16B8:
                moveq   #0,d3
                lsr.w   #1,d5
                move    sr,d6
                dbf     d4,loc_16CC
                move.b  (a0)+,2+var_1(sp)
                move.b  (a0)+,(sp)
                move.w  (sp),d5
                moveq   #$F,d4

loc_16CC:
                move    d6,ccr
                bcs.s   loc_16FC
                lsr.w   #1,d5
                dbf     d4,loc_16E0
                move.b  (a0)+,2+var_1(sp)
                move.b  (a0)+,(sp)
                move.w  (sp),d5
                moveq   #$F,d4

loc_16E0:
                roxl.w  #1,d3
                lsr.w   #1,d5
                dbf     d4,loc_16F2
                move.b  (a0)+,2+var_1(sp)
                move.b  (a0)+,(sp)
                move.w  (sp),d5
                moveq   #$F,d4

loc_16F2:
                roxl.w  #1,d3
                addq.w  #1,d3
                moveq   #$FFFFFFFF,d2
                move.b  (a0)+,d2
                bra.s   loc_1712
; ---------------------------------------------------------------------------

loc_16FC:
                move.b  (a0)+,d0
                move.b  (a0)+,d1
                moveq   #$FFFFFFFF,d2
                move.b  d1,d2
                lsl.w   #5,d2
                move.b  d0,d2
                andi.w  #7,d1
                beq.s   loc_171E
                move.b  d1,d3
                addq.w  #1,d3

loc_1712:
                move.b  (a1,d2.w),d0
                move.b  d0,(a1)+
                dbf     d3,loc_1712
                bra.s   loc_169E
; ---------------------------------------------------------------------------

loc_171E:
                move.b  (a0)+,d1
                beq.s   loc_172E
                cmpi.b  #1,d1
                beq.w   loc_169E
                move.b  d1,d3
                bra.s   loc_1712
; ---------------------------------------------------------------------------

loc_172E:
                addq.l  #2,sp
                rts
; End of function sub_1692


; =============== S U B R O U T I N E =======================================


PalCycle_Load:
                moveq   #0,d2
                moveq   #0,d0
                move.b  ($FFFFFE10).w,d0
                add.w   d0,d0
                move.w  PalCycle(pc,d0.w),d0
                jmp     PalCycle(pc,d0.w)
; End of function PalCycle_Load

; ---------------------------------------------------------------------------
PalCycle:       dc.w PalCycle_GHZ-PalCycle
                dc.w PalCycle_LZ-PalCycle
                dc.w PalCycle_MZ-PalCycle
                dc.w PalCycle_SLZ-PalCycle
                dc.w PalCycle_SZ-PalCycle
                dc.w PalCycle_CWZ-PalCycle
                dc.w PalCycle_Ending-PalCycle

; =============== S U B R O U T I N E =======================================


PalCycle_Title:
                lea     (Pal_TitleCyc).l,a0
                bra.s   loc_1760
; ---------------------------------------------------------------------------

PalCycle_GHZ:
                lea     (Pal_GHZCyc).l,a0

loc_1760:
                subq.w  #1,($FFFFF634).w
                bpl.s   locret_1786
                move.w  #5,($FFFFF634).w
                move.w  ($FFFFF632).w,d0
                addq.w  #1,($FFFFF632).w
                andi.w  #3,d0
                lsl.w   #3,d0
                lea     ($FFFFFB50).w,a1
                move.l  (a0,d0.w),(a1)+
                move.l  4(a0,d0.w),(a1)

locret_1786:
                rts
; End of function PalCycle_Title

; ---------------------------------------------------------------------------

PalCycle_LZ:
                rts
; ---------------------------------------------------------------------------

PalCycle_Unused:
                subq.w  #1,($FFFFF634).w
                bpl.s   locret_17B8
                move.w  #5,($FFFFF634).w
                move.w  ($FFFFF632).w,d0
                addq.w  #1,($FFFFF632).w
                andi.w  #3,d0
                lsl.w   #3,d0
                lea     (Pal_UnusedCyc).l,a0
                adda.w  d0,a0
                lea     ($FFFFFB6E).w,a1
                move.w  (a0)+,(a1)+
                addq.w  #8,a1
                move.w  (a0)+,(a1)+
                move.l  (a0)+,(a1)+

locret_17B8:
                rts
; ---------------------------------------------------------------------------

PalCycle_MZ:
                rts
; ---------------------------------------------------------------------------

PalCycle_SLZ:
                subq.w  #1,($FFFFF634).w
                bpl.s   locret_17F6
                move.w  #$F,($FFFFF634).w
                move.w  ($FFFFF632).w,d0
                addq.w  #1,d0
                cmpi.w  #6,d0
                bcs.s   loc_17D6
                moveq   #0,d0

loc_17D6:
                move.w  d0,($FFFFF632).w
                move.w  d0,d1
                add.w   d1,d1
                add.w   d1,d0
                add.w   d0,d0
                lea     (Pal_SLZCyc).l,a0
                lea     ($FFFFFB56).w,a1
                move.w  (a0,d0.w),(a1)
                move.l  2(a0,d0.w),4(a1)

locret_17F6:
                rts
; ---------------------------------------------------------------------------

PalCycle_SZ:
                subq.w  #1,($FFFFF634).w
                bpl.s   locret_1846
                move.w  #5,($FFFFF634).w
                move.w  ($FFFFF632).w,d0
                move.w  d0,d1
                addq.w  #1,($FFFFF632).w
                andi.w  #3,d0
                lsl.w   #3,d0
                lea     (Pal_SZCyc1).l,a0
                lea     ($FFFFFB6E).w,a1
                move.l  (a0,d0.w),(a1)+
                move.l  4(a0,d0.w),(a1)
                andi.w  #3,d1
                move.w  d1,d0
                add.w   d1,d1
                add.w   d0,d1
                add.w   d1,d1
                lea     (Pal_SZCyc2).l,a0
                lea     ($FFFFFB76).w,a1
                move.l  (a0,d1.w),(a1)
                move.w  4(a0,d1.w),6(a1)

locret_1846:
                rts
; ---------------------------------------------------------------------------

PalCycle_CWZ:
                rts
; ---------------------------------------------------------------------------

PalCycle_Ending:
                rts
; ---------------------------------------------------------------------------
Pal_TitleCyc: incbin "Palettes/c_title.bin"
Pal_GHZCyc: incbin "Palettes/c_ghz.bin"
Pal_UnusedCyc:  dc.b $C, $E6, 6, $80, 8, $A2, $A, $C4
                dc.b $A, $C4, $C, $E6, 6, $80, 8, $A2
                dc.b 8, $A2, $A, $C4, $C, $E6, 6, $80
                dc.b 6, $80, 8, $A2, $A, $C4, $C, $E6
                dc.b $E, $EE, 0, 8, 0, $E, 0, $4E
                dc.b 0, $8E, 0, $EE, 0, $EE, $E, $EE
                dc.b 0, 8, 0, $E, 0, $4E, 0, $8E
                dc.b 0, $8E, 0, $EE, $E, $EE, 0, 8
                dc.b 0, $E, 0, $4E, 0, $4E, 0, $8E
                dc.b 0, $EE, $E, $EE, 0, 8, 0, $E
                dc.b 0, $E, 0, $4E, 0, $8E, 0, $EE
                dc.b $E, $EE, 0, 8, 0, 8, 0, $E
                dc.b 0, $4E, 0, $8E, 0, $EE, $E, $EE
Pal_SLZCyc: incbin "Palettes/c_slz.bin"
Pal_SZCyc1: incbin "Palettes/c_sz_1.bin"
Pal_SZCyc2: incbin "Palettes/c_sz_2.bin"

; =============== S U B R O U T I N E =======================================


sub_1950:
                move.w  #$3F,($FFFFF626).w

loc_1956:
                moveq   #0,d0
                lea     ($FFFFFB00).w,a0
                move.b  ($FFFFF626).w,d0
                adda.w  d0,a0
                moveq   #0,d1
                move.b  ($FFFFF627).w,d0

loc_1968:
                move.w  d1,(a0)+
                dbf     d0,loc_1968
                move.w  #$14,d4

loc_1972:
                move.b  #$12,($FFFFF62A).w
                bsr.w   WaitForVint
                bsr.s   sub_1988
                bsr.w   RunPLC_RAM
                dbf     d4,loc_1972
                rts
; End of function sub_1950


; =============== S U B R O U T I N E =======================================


sub_1988:
                moveq   #0,d0
                lea     ($FFFFFB00).w,a0
                lea     ($FFFFFB80).w,a1
                move.b  ($FFFFF626).w,d0
                adda.w  d0,a0
                adda.w  d0,a1
                move.b  ($FFFFF627).w,d0

loc_199E:
                bsr.s   sub_19A6
                dbf     d0,loc_199E
                rts
; End of function sub_1988


; =============== S U B R O U T I N E =======================================


sub_19A6:
                move.w  (a1)+,d2
                move.w  (a0),d3
                cmp.w   d2,d3
                beq.s   loc_19CE
                move.w  d3,d1
                addi.w  #$200,d1
                cmp.w   d2,d1
                bhi.s   loc_19BC
                move.w  d1,(a0)+
                rts
; ---------------------------------------------------------------------------

loc_19BC:
                move.w  d3,d1
                addi.w  #$20,d1
                cmp.w   d2,d1
                bhi.s   loc_19CA
                move.w  d1,(a0)+
                rts
; ---------------------------------------------------------------------------

loc_19CA:
                addq.w  #2,(a0)+
                rts
; ---------------------------------------------------------------------------

loc_19CE:
                addq.w  #2,a0
                rts
; End of function sub_19A6


; =============== S U B R O U T I N E =======================================


Pal_FadeFrom:
                move.w  #$3F,($FFFFF626).w
                move.w  #$14,d4

loc_19DC:
                move.b  #$12,($FFFFF62A).w
                bsr.w   WaitForVint
                bsr.s   sub_19F2
                bsr.w   RunPLC_RAM
                dbf     d4,loc_19DC
                rts
; End of function Pal_FadeFrom


; =============== S U B R O U T I N E =======================================


sub_19F2:
                moveq   #0,d0
                lea     ($FFFFFB00).w,a0
                move.b  ($FFFFF626).w,d0
                adda.w  d0,a0
                move.b  ($FFFFF627).w,d0

loc_1A02:
                bsr.s   sub_1A0A
                dbf     d0,loc_1A02
                rts
; End of function sub_19F2


; =============== S U B R O U T I N E =======================================


sub_1A0A:
                move.w  (a0),d2
                beq.s   loc_1A36
                move.w  d2,d1
                andi.w  #$E,d1
                beq.s   loc_1A1A
                subq.w  #2,(a0)+
                rts
; ---------------------------------------------------------------------------

loc_1A1A:
                move.w  d2,d1
                andi.w  #$E0,d1
                beq.s   loc_1A28
                subi.w  #$20,(a0)+
                rts
; ---------------------------------------------------------------------------

loc_1A28:
                move.w  d2,d1
                andi.w  #$E00,d1
                beq.s   loc_1A36
                subi.w  #$200,(a0)+
                rts
; ---------------------------------------------------------------------------

loc_1A36:
                addq.w  #2,a0
                rts
; End of function sub_1A0A


; =============== S U B R O U T I N E =======================================


PalCycle_Sega:
                subq.w  #1,($FFFFF634).w
                bpl.s   locret_1A68
                move.w  #3,($FFFFF634).w
                move.w  ($FFFFF632).w,d0
                bmi.s   locret_1A68
                subq.w  #2,($FFFFF632).w
                lea     (unk_1A6A).l,a0
                lea     ($FFFFFB04).w,a1
                adda.w  d0,a0
                move.l  (a0)+,(a1)+
                move.l  (a0)+,(a1)+
                move.l  (a0)+,(a1)+
                move.l  (a0)+,(a1)+
                move.l  (a0)+,(a1)+
                move.w  (a0)+,(a1)+

locret_1A68:
                rts
; End of function PalCycle_Sega

; ---------------------------------------------------------------------------
unk_1A6A:       include "Palettes/c_sega.asm"

; =============== S U B R O U T I N E =======================================


PalLoad1:
                lea     (PalPointers).l,a1
                lsl.w   #3,d0
                adda.w  d0,a1
                movea.l (a1)+,a2
                movea.w (a1)+,a3
                adda.w  #$80,a3
                move.w  (a1)+,d7

loc_1ABC:
                move.l  (a2)+,(a3)+
                dbf     d7,loc_1ABC
                rts
; End of function PalLoad1


; =============== S U B R O U T I N E =======================================


PalLoad2:
                lea     (PalPointers).l,a1
                lsl.w   #3,d0
                adda.w  d0,a1
                movea.l (a1)+,a2
                movea.w (a1)+,a3
                move.w  (a1)+,d7

loc_1AD4:
                move.l  (a2)+,(a3)+
                dbf     d7,loc_1AD4
                rts
; End of function PalLoad2

; ---------------------------------------------------------------------------
PalPointers:    dc.l Pal_Sega
                dc.w $FB00
                dc.w $1F
                dc.l Pal_Title
                dc.w $FB00
                dc.w $1F
                dc.l Pal_LevelSel
                dc.w $FB00
                dc.w $1F
                dc.l Pal_Sonic
                dc.w $FB00
                dc.w 7
                dc.l Pal_GHZ
                dc.w $FB20
                dc.w $17
                dc.l Pal_LZ
                dc.w $FB20
                dc.w $17
                dc.l Pal_MZ
                dc.w $FB20
                dc.w $17
                dc.l Pal_SLZ
                dc.w $FB20
                dc.w $17
                dc.l Pal_SZ
                dc.w $FB20
                dc.w $17
                dc.l Pal_CWZ
                dc.w $FB20
                dc.w $17
                dc.l Pal_Special
                dc.w $FB00
                dc.w $1F
                dc.l word_1D9C
                dc.w $FB00
                dc.w $1F
Pal_Sega: include "Palettes/sega.asm"
Pal_Title: incbin "Palettes/title.bin"
Pal_LevelSel: incbin "Palettes/levelsel.bin"
Pal_Sonic: incbin "Palettes/sonic.bin"
Pal_GHZ: incbin "Palettes/ghz.bin"
Pal_LZ: incbin "Palettes/lz.bin"
word_1D9C: include "Palettes/unused.asm"
Pal_MZ: incbin "Palettes/mz.bin"
Pal_SLZ: incbin "Palettes/slz.bin"
Pal_SZ: incbin "Palettes/sz.bin"
Pal_CWZ: incbin "Palettes/cwz.bin"
Pal_Special:    dc.w $400, 0, $822, $A44, $C66, $E88, $EEE, $AAA, $888, $444, $8AE, $46A, $E, 8, 4, $EE
                dc.w $400, 0, $24, $68, $AC, $2EE, $EEE, $AAA, $888, $444, $AE4, $6A2, $EE, $88, $44, 0
                dc.w $400, 0, $204, $628, $A4C, $C6E, $ECE, $800, $C42, $E86, $ECA, $EEC, 0, $EE0, $AA0, $440
                dc.w $400, 0, $60, $A0, $C6, $EA, $AEC, $EEA, $EE0, $AA0, $880, $660, $440, $EE0, $AA0, $440

; ---------------------------------------------------------------------------
; Subroutine to perform vertical synchronization
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

WaitForVint:
                move    #$2300,sr

loc_2020:
                tst.b   ($FFFFF62A).w
                bne.s   loc_2020
                rts
; End of function WaitForVint

; ---------------------------------------------------------------------------
; Subroutine to generate a pseudo-random number in d0
; d0 = (RNG & $FFFF0000) | ((RNG*41 & $FFFF) + ((RNG*41 & $FFFF0000) >> 16))
; RNG = ((RNG*41 + ((RNG*41 & $FFFF) << 16)) & $FFFF0000) | (RNG*41 & $FFFF)
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; sub_2028:
RandomNumber:
                move.l  ($FFFFF636).w,d1
                bne.s   loc_2034
                move.l  #$2A6D365A,d1

loc_2034:
                move.l  d1,d0
                asl.l   #2,d1
                add.l   d0,d1
                asl.l   #3,d1
                add.l   d0,d1
                move.w  d1,d0
                swap    d1
                add.w   d1,d0
                move.w  d0,d1
                swap    d1
                move.l  d1,($FFFFF636).w
                rts
; End of function RandomNumber


; ---------------------------------------------------------------------------
; Subroutine to calculate sine and cosine of an angle
; d0 = input byte = angle (360 degrees == 256)
; d0 = output word = 255 * sine(angle)
; d1 = output word = 255 * cosine(angle)
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; sub_204E:
CalcSine:
                andi.w  #$FF,d0
                add.w   d0,d0
                addi.w  #$80,d0
                move.w  byte_2066(pc,d0.w),d1
                subi.w  #$80,d0
                move.w  byte_2066(pc,d0.w),d0
                rts
; End of function CalcSine

; ---------------------------------------------------------------------------
byte_2066:      include "Misc/Sinewave.asm"
; ---------------------------------------------------------------------------
                movem.l d1-d2,-(sp)
                move.w  d0,d1
                swap    d1
                moveq   #0,d0
                move.w  d0,d1
                moveq   #7,d2

loc_22F4:
                rol.l   #2,d1
                add.w   d0,d0
                addq.w  #1,d0
                sub.w   d0,d1
                bcc.s   loc_230E
                add.w   d0,d1
                subq.w  #1,d0
                dbf     d2,loc_22F4
                lsr.w   #1,d0
                movem.l (sp)+,d1-d2
                rts
; ---------------------------------------------------------------------------

loc_230E:
                addq.w  #1,d0
                dbf     d2,loc_22F4
                lsr.w   #1,d0
                movem.l (sp)+,d1-d2
                rts

; ---------------------------------------------------------------------------
; Subroutine to calculate arctangent of y/x
; d1 = input x
; d2 = input y
; d0 = output angle (360 degrees == 256)
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; sub_231C:
CalcAngle:
                movem.l d3-d4,-(sp)
                moveq   #0,d3
                moveq   #0,d4
                move.w  d1,d3
                move.w  d2,d4
                or.w    d3,d4
                beq.s   CalcAngle_Zero
                move.w  d2,d4
                tst.w   d3
                bpl.w   loc_2336
                neg.w   d3

loc_2336:
                tst.w   d4
                bpl.w   loc_233E
                neg.w   d4

loc_233E:
                cmp.w   d3,d4
                bcc.w   loc_2350
                lsl.l   #8,d4
                divu.w  d3,d4
                moveq   #0,d0
                move.b  byte_2382(pc,d4.w),d0
                bra.s   loc_235A
; ---------------------------------------------------------------------------

loc_2350:
                lsl.l   #8,d3
                divu.w  d4,d3
                moveq   #$40,d0
                sub.b   byte_2382(pc,d3.w),d0

loc_235A:
                tst.w   d1
                bpl.w   loc_2366
                neg.w   d0
                addi.w  #$80,d0

loc_2366:
                tst.w   d2
                bpl.w   loc_2372
                neg.w   d0
                addi.w  #$100,d0

loc_2372:
                movem.l (sp)+,d3-d4
                rts
; ===========================================================================
; loc_2378:
CalcAngle_Zero:
                move.w  #$40,d0
                movem.l (sp)+,d3-d4
                rts
; End of function CalcAngle

; ---------------------------------------------------------------------------
byte_2382:      include "Misc/AngleData.asm"
; ---------------------------------------------------------------------------

SegaScreen:
                move.b  #$E0,d0
                bsr.w   PlaySound_Special
                bsr.w   ClearPLC
                bsr.w   Pal_FadeFrom
                lea     ($C00004).l,a6
                move.w  #$8004,(a6)
                move.w  #$8230,(a6)
                move.w  #$8407,(a6)
                move.w  #$8700,(a6)
                move.w  #$8B00,(a6)
                move.w  ($FFFFF60C).w,d0
                andi.b  #$BF,d0
                move.w  d0,($C00004).l
                bsr.w   ClearScreen
                move.l  #$40000000,($C00004).l
                lea     (Nem_Sega).l,a0
                bsr.w   NemDec
                lea     ($FF0000).l,a1
                lea     (Eni_Sega).l,a0
                move.w  #0,d0
                bsr.w   EnigmaDecompress
                lea     ($FF0000).l,a1
                move.l  #$461C0003,d0
                moveq   #$B,d1
                moveq   #3,d2
                bsr.w   ShowVDPGraphics
                moveq   #0,d0
                bsr.w   PalLoad2
                move.w  #$28,($FFFFF632).w
                move.w  #0,($FFFFF662).w
                move.w  #0,($FFFFF660).w
                move.w  #$B4,($FFFFF614).w
                move.w  ($FFFFF60C).w,d0
                ori.b   #$40,d0 
                move.w  d0,($C00004).l

loc_2528:
                move.b  #2,($FFFFF62A).w
                bsr.w   WaitForVint
                bsr.w   PalCycle_Sega
                tst.w   ($FFFFF614).w
                beq.s   loc_2544
                andi.b  #$80,($FFFFF605).w
                beq.s   loc_2528

loc_2544:
                move.b  #4,($FFFFF600).w
                rts
; ---------------------------------------------------------------------------

TitleScreen:
                bsr.w   ClearPLC
                bsr.w   Pal_FadeFrom
                lea     ($C00004).l,a6
                move.w  #$8004,(a6)
                move.w  #$8230,(a6)
                move.w  #$8407,(a6)
                move.w  #$9001,(a6)
                move.w  #$9200,(a6)
                move.w  #$8B03,(a6)
                move.w  #$8720,(a6)
                move.w  ($FFFFF60C).w,d0
                andi.b  #$BF,d0
                move.w  d0,($C00004).l
                bsr.w   ClearScreen
                lea     ($FFFFD000).w,a1
                moveq   #0,d0
                move.w  #$7FF,d1

loc_2592:
                move.l  d0,(a1)+
                dbf     d1,loc_2592
                move.l  #$40000001,($C00004).l
                lea     (Nem_Title).l,a0
                bsr.w   NemDec
                move.l  #$60000001,($C00004).l
                lea     (Nem_TitleSonic).l,a0
                bsr.w   NemDec
                lea     ($C00000).l,a6
                move.l  #$50000003,4(a6)
                lea     (Art_Text).l,a5
                move.w  #$28F,d1

loc_25D8:
                move.w  (a5)+,(a6)
                dbf     d1,loc_25D8
                lea     (byte_18A62).l,a1
                move.l  #$42060003,d0
                moveq   #$21,d1
                moveq   #$15,d2
                bsr.w   ShowVDPGraphics
                move.w  #0,($FFFFFE08).w
                move.w  #0,($FFFFFFF0).w
                move.w  #0,($FFFFFE10).w
                bsr.w   LevelSizeLoad
                bsr.w   DeformBgLayer
                move.l  #$40000000,($C00004).l
                lea     (Nem_GHZ1).l,a0
                bsr.w   NemDec
                lea     (Blk16_GHZ).l,a0
                lea     ($FFFFB000).w,a4
                move.w  #$5FF,d0

loc_262E:
                move.l  (a0)+,(a4)+
                dbf     d0,loc_262E
                lea     (Blk256_GHZ).l,a0
                lea     ($FF0000).l,a1
                bsr.w   sub_1692
                bsr.w   LevelLayoutLoad
                lea     ($C00004).l,a5
                lea     ($C00000).l,a6
                lea     ($FFFFF708).w,a3
                lea     ($FFFFA440).w,a4
                move.w  #$6000,d2
                bsr.w   DrawInitialBG2
                moveq   #1,d0
                bsr.w   PalLoad1
                move.b  #$8A,d0
                bsr.w   PlaySound_Special
                move.b  #0,($FFFFFFFA).w
                move.w  #$178,($FFFFF614).w
                move.b  #$E,($FFFFD040).w
                move.b  #$F,($FFFFD080).w
                move.b  #$F,($FFFFD0C0).w
                move.b  #2,($FFFFD0DA).w
                moveq   #0,d0
                bsr.w   LoadPLC2
                move.w  ($FFFFF60C).w,d0
                ori.b   #$40,d0
                move.w  d0,($C00004).l
                bsr.w   sub_1950

loc_26AE:
                move.b  #4,($FFFFF62A).w
                bsr.w   WaitForVint
                bsr.w   RunObjects
                bsr.w   DeformBgLayer
                bsr.w   BuildSprites
                bsr.w   PalCycle_Title
                bsr.w   RunPLC_RAM
                move.w  ($FFFFD008).w,d0
                addq.w  #2,d0
                move.w  d0,($FFFFD008).w   ; Move Sonic To The Right
                cmpi.w  #$1C00,d0
                bcs.s   loc_26E4
                move.b  #0,($FFFFF600).w
                rts
; ---------------------------------------------------------------------------

loc_26E4:
                tst.w   ($FFFFF614).w
                beq.w   loc_27F8
                andi.b  #$80,($FFFFF605).w
                beq.w   loc_26AE
                btst    #6,($FFFFF604).w
                beq.w   loc_27AA
                moveq   #2,d0
                bsr.w   PalLoad2
                lea     ($FFFFCC00).w,a1
                moveq   #0,d0
                move.w  #$DF,d1

loc_2710:
                move.l  d0,(a1)+
                dbf     d1,loc_2710
                move.l  d0,($FFFFF616).w
                move    #$2700,sr
                lea     ($C00000).l,a6
                move.l  #$60000003,($C00004).l
                move.w  #$3FF,d1

loc_2732:
                move.l  d0,(a6)
                dbf     d1,loc_2732
                bsr.w   sub_292C

loc_273C:
                move.b  #4,($FFFFF62A).w
                bsr.w   WaitForVint
                bsr.w   sub_28A6
                bsr.w   RunPLC_RAM
                tst.l   ($FFFFF680).w
                bne.s   loc_273C
                andi.b  #$F0,($FFFFF605).w
                beq.s   loc_273C
                move.w  ($FFFFF668).w,d0
                cmpi.w  #$13,d0
                bne.s   loc_2780
                move.w  ($FFFFF66A).w,d0
                addi.w  #$80,d0
                cmpi.w  #$93,d0
                bcs.s   loc_277A
                cmpi.w  #$A0,d0
                bcs.s   loc_273C

loc_277A:
                bsr.w   PlaySound_Special
                bra.s   loc_273C
; ---------------------------------------------------------------------------

loc_2780:
                add.w   d0,d0
                move.w  word_27CE(pc,d0.w),d0
                bmi.s   loc_273C
                cmpi.w  #$700,d0
                bne.s   loc_2796
                move.b  #$10,($FFFFF600).w
                rts
; ---------------------------------------------------------------------------

loc_2796:
                andi.w  #$3FFF,d0
                btst    #4,($FFFFF604).w
                beq.s   loc_27A6
                move.w  #3,d0

loc_27A6:
                move.w  d0,($FFFFFE10).w

loc_27AA:
                move.b  #$C,($FFFFF600).w
                move.b  #3,($FFFFFE12).w
                moveq   #0,d0
                move.w  d0,($FFFFFE20).w
                move.l  d0,($FFFFFE22).w
                move.l  d0,($FFFFFE26).w
                move.b  #$E0,d0
                bsr.w   PlaySound_Special
                rts
; ---------------------------------------------------------------------------
word_27CE:      dc.w 0, 1, 2, $100
                dc.w $101, $102, $200, $201
                dc.w $202, $300, $301, $302
                dc.w $400, $401, $402, $500
                dc.w $501, $8500, $700, $700
                dc.w $8000
; ---------------------------------------------------------------------------

loc_27F8:
                move.w  #$1E,($FFFFF614).w

loc_27FE:
                move.b  #4,($FFFFF62A).w
                bsr.w   WaitForVint
                bsr.w   DeformBgLayer
                bsr.w   PalCycle_Load
                bsr.w   RunPLC_RAM
                move.w  ($FFFFD008).w,d0
                addq.w  #2,d0
                move.w  d0,($FFFFD008).w
                cmpi.w  #$1C00,d0
                bcs.s   loc_282C
                move.b  #0,($FFFFF600).w
                rts
; ---------------------------------------------------------------------------

loc_282C:
                tst.w   ($FFFFF614).w
                bne.w   loc_27FE
                move.b  #$E0,d0
                bsr.w   PlaySound_Special
                move.w  ($FFFFFFF2).w,d0
                andi.w  #7,d0
                add.w   d0,d0
                move.w  word_288E(pc,d0.w),d0
                move.w  d0,($FFFFFE10).w
                addq.w  #1,($FFFFFFF2).w
                cmpi.w  #6,($FFFFFFF2).w
                bcs.s   loc_2860
                move.w  #0,($FFFFFFF2).w

loc_2860:
                move.w  #1,($FFFFFFF0).w
                move.b  #8,($FFFFF600).w
                cmpi.w  #$600,d0
                bne.s   loc_2878
                move.b  #$10,($FFFFF600).w

loc_2878:
                move.b  #3,($FFFFFE12).w
                moveq   #0,d0
                move.w  d0,($FFFFFE20).w
                move.l  d0,($FFFFFE22).w
                move.l  d0,($FFFFFE26).w
                rts
; ---------------------------------------------------------------------------
word_288E:      dc.w 0, $600, $200, $600
                dc.w $400, $600, $300, $600
                dc.w $200, $600, $400, $600

; =============== S U B R O U T I N E =======================================


sub_28A6:
                move.b  ($FFFFF605).w,d1
                andi.b  #3,d1
                bne.s   loc_28B6
                subq.w  #1,($FFFFF666).w
                bpl.s   loc_28F0

loc_28B6:
                move.w  #$B,($FFFFF666).w
                move.b  ($FFFFF604).w,d1
                andi.b  #3,d1
                beq.s   loc_28F0
                move.w  ($FFFFF668).w,d0
                btst    #0,d1
                beq.s   loc_28D6
                subq.w  #1,d0
                bcc.s   loc_28D6
                moveq   #$13,d0

loc_28D6:
                btst    #1,d1
                beq.s   loc_28E6
                addq.w  #1,d0
                cmpi.w  #$14,d0
                bcs.s   loc_28E6
                moveq   #0,d0

loc_28E6:
                move.w  d0,($FFFFF668).w
                bsr.w   sub_292C
                rts
; ---------------------------------------------------------------------------

loc_28F0:
                cmpi.w  #$13,($FFFFF668).w
                bne.s   locret_292A
                move.b  ($FFFFF605).w,d1
                andi.b  #$C,d1
                beq.s   locret_292A
                move.w  ($FFFFF66A).w,d0
                btst    #2,d1
                beq.s   loc_2912
                subq.w  #1,d0
                bcc.s   loc_2912
                moveq   #$4F,d0

loc_2912:
                btst    #3,d1
                beq.s   loc_2922
                addq.w  #1,d0
                cmpi.w  #$50,d0
                bcs.s   loc_2922
                moveq   #0,d0

loc_2922:
                move.w  d0,($FFFFF66A).w
                bsr.w   sub_292C

locret_292A:
                rts
; End of function sub_28A6


; =============== S U B R O U T I N E =======================================


sub_292C:
                lea     (LevelMenuText).l,a1
                lea     ($C00000).l,a6
                move.l  #$62100003,d4	; screen position (text)
                move.w  #$E680,d3	; VRAM setting
                moveq   #$13,d1         ; number of lines of text

loc_2944:
                move.l  d4,4(a6)
                bsr.w   sub_29CC
                addi.l  #$800000,d4
                dbf     d1,loc_2944
                moveq   #0,d0
                move.w  ($FFFFF668).w,d0
                move.w  d0,d1
                move.l  #$62100003,d4
                lsl.w   #7,d0
                swap    d0
                add.l   d0,d4
                lea     (LevelMenuText).l,a1
                lsl.w   #3,d1
                move.w  d1,d0
                add.w   d1,d1
                add.w   d0,d1
                adda.w  d1,a1
                move.w  #$C680,d3
                move.l  d4,4(a6)
                bsr.w   sub_29CC
                move.w  #$E680,d3
                cmpi.w  #$13,($FFFFF668).w
                bne.s   loc_2996
                move.w  #$C680,d3

loc_2996:
                move.l	#$6BB00003,($C00004).l ; screen	position (sound	test)
                move.w  ($FFFFF66A).w,d0
                addi.w  #$80,d0
                move.b  d0,d2
                lsr.b   #4,d0
                bsr.w   sub_29B8
                move.b  d2,d0
                bsr.w   sub_29B8
                rts
; End of function sub_292C


; =============== S U B R O U T I N E =======================================


sub_29B8:
                andi.w  #$F,d0
                cmpi.b  #$A,d0
                bcs.s   loc_29C6
                addi.b  #7,d0

loc_29C6:
                add.w   d3,d0
                move.w  d0,(a6)
                rts
; End of function sub_29B8


; =============== S U B R O U T I N E =======================================


sub_29CC:
                moveq   #$17,d2

loc_29CE:
                moveq   #0,d0
                move.b  (a1)+,d0
                bpl.s   loc_29DE
                move.w  #0,(a6)
                dbf     d2,loc_29CE
                rts
; ---------------------------------------------------------------------------

loc_29DE:
                add.w   d3,d0
                move.w  d0,(a6)
                dbf     d2,loc_29CE
                rts
; End of function sub_29CC

; ---------------------------------------------------------------------------
LevelMenuText:  incbin "Misc/MenuText.bin"
                even
MusicList:      incbin "Misc/musiclist1.bin"
                even
; ===========================================================================
; ---------------------------------------------------------------------------
; Level
; ---------------------------------------------------------------------------
Level:
                move.b  #$E0,d0
                bsr.w   PlaySound_Special
                move.l  #$70000002,($C00004).l
                lea     (Nem_TitleCard).l,a0
                bsr.w   NemDec
                bsr.w   ClearPLC
                moveq   #0,d0
                move.b  ($FFFFFE10).w,d0
                lsl.w   #4,d0
                lea     (MainLoadBlocks).l,a2
                lea     (a2,d0.w),a2
                moveq   #0,d0
                move.b  (a2),d0
                beq.s   loc_2C0A
                bsr.w   LoadPLCs

loc_2C0A:
                moveq   #1,d0
                bsr.w   LoadPLCs
                bsr.w   Pal_FadeFrom
                bsr.w   ClearScreen
                lea     ($C00004).l,a6
                move.w  #$8B03,(a6)
                move.w  #$8230,(a6)
                move.w  #$8407,(a6)
                move.w  #$857C,(a6)
                move.w  #0,($FFFFFFE8).w
                move.w  #$8AAF,($FFFFF624).w
                move.w  #$8004,(a6)
                move.w  #$8720,(a6)
                lea     ($FFFFD000).w,a1
                moveq   #0,d0
                move.w  #$7FF,d1

loc_2C4C:
                move.l  d0,(a1)+
                dbf     d1,loc_2C4C
                lea     ($FFFFF700).w,a1
                moveq   #0,d0
                move.w  #$3F,d1

loc_2C5C:
                move.l  d0,(a1)+
                dbf     d1,loc_2C5C
                lea     ($FFFFFE60).w,a1
                moveq   #0,d0
                move.w  #$27,d1

; loc_2C6C:
Level_PlayBgm:
                move.l  d0,(a1)+
                dbf     d1,Level_PlayBgm
                moveq   #3,d0
                bsr.w   PalLoad2
                moveq   #0,d0
                move.b  ($FFFFFE10).w,d0
                lea     (MusicList).l,a1
                move.b  (a1,d0.w),d0
                bsr.w   PlaySound
                move.b  #$34,($FFFFD080).w

loc_2C92:
                move.b  #$C,($FFFFF62A).w
                bsr.w   WaitForVint
                bsr.w   RunObjects
                bsr.w   BuildSprites
                bsr.w   RunPLC_RAM
                move.w  ($FFFFD108).w,d0
                cmp.w   ($FFFFD130).w,d0
                bne.s   loc_2C92
                tst.l   ($FFFFF680).w
                bne.s   loc_2C92
                bsr.w   Level_unk
                jsr     (sub_117C6).l
                moveq   #3,d0
                bsr.w   PalLoad1
                bsr.w   LevelSizeLoad
                bsr.w   DeformBgLayer
                bsr.w   loadZoneBlockMaps
                bsr.w   sub_31EE
                bsr.w   DrawInitialBG
                jsr     (Level_unk2).l
                move.l  #Col_GHZ,($FFFFF796).w
                cmpi.b  #1,($FFFFFE10).w
                bne.s   loc_2CFA
                move.l  #Col_LZ,($FFFFF796).w

loc_2CFA:
                cmpi.b  #2,($FFFFFE10).w
                bne.s   loc_2D0A
                move.l  #Col_MZ,($FFFFF796).w

loc_2D0A:
                cmpi.b  #3,($FFFFFE10).w
                bne.s   loc_2D1A
                move.l  #Col_SLZ,($FFFFF796).w

loc_2D1A:
                cmpi.b  #4,($FFFFFE10).w
                bne.s   loc_2D2A
                move.l  #Col_SZ,($FFFFF796).w

loc_2D2A:
                cmpi.b  #5,($FFFFFE10).w
                bne.s   loc_2D3A
                move.l  #Col_CWZ,($FFFFF796).w

loc_2D3A:                                  ; Load Sonic object
                move.b  #1,($FFFFD000).w
                move.b  #$21,($FFFFD040).w ; load HUD object
                btst    #6,($FFFFF604).w ; is A held?
                beq.s   loc_2D54 ; if not, branch
                move.b  #1,($FFFFFFFA).w ; enable debug mode

loc_2D54:
                move.w  #0,($FFFFF602).w
                move.w  #0,($FFFFF604).w
                bsr.w   ObjPosLoad
                bsr.w   RunObjects
                bsr.w   BuildSprites
                moveq   #0,d0
                move.w  d0,($FFFFFE20).w
                move.b  d0,($FFFFFE1B).w
                move.l  d0,($FFFFFE22).w
                move.b  d0,($FFFFFE2C).w
                move.b  d0,($FFFFFE2D).w
                move.b  d0,($FFFFFE2E).w
                move.b  d0,($FFFFFE2F).w
                move.w  d0,($FFFFFE08).w
                move.w  d0,($FFFFFE02).w
                move.w  d0,($FFFFFE04).w
                bsr.w   sub_3360
                move.b  #1,($FFFFFE1F).w
                move.b  #1,($FFFFFE1D).w
                move.b  #1,($FFFFFE1E).w
                move.w  #0,($FFFFF790).w
                lea     (Demo_Index).l,a1
                moveq   #0,d0
                move.b  ($FFFFFE10).w,d0
                lsl.w   #2,d0
                movea.l (a1,d0.w),a1
                move.b  1(a1),($FFFFF792).w
                subq.b  #1,($FFFFF792).w
                move.w  #$708,($FFFFF614).w
                move.b  #8,($FFFFF62A).w
                bsr.w   WaitForVint
                move.w  #$202F,($FFFFF626).w
                bsr.w   loc_1956
                addq.b  #2,($FFFFD0A4).w
                addq.b  #4,($FFFFD0E4).w
                addq.b  #4,($FFFFD124).w
                addq.b  #4,($FFFFD164).w

Level_MainLoop:
                bsr.w   Pause
                move.b  #8,($FFFFF62A).w
                bsr.w   WaitForVint
                addq.w  #1,($FFFFFE04).w
                bsr.w   sub_3048
                bsr.w   MoveSonicInDemo
                move.w  ($FFFFF604).w,($FFFFF602).w
                bsr.w   RunObjects
                tst.w   ($FFFFFE08).w
                bne.s   loc_2E2A
                cmpi.b  #6,($FFFFD024).w
                bcc.s   loc_2E2E

loc_2E2A:
                bsr.w   DeformBgLayer

loc_2E2E:
                bsr.w   BuildSprites
                bsr.w   ObjPosLoad
                bsr.w   PalCycle_Load
                bsr.w   RunPLC_RAM
                bsr.w   OscillateNumDo
                bsr.w   ChangeRingFrame
                bsr.w   SignpostArtLoad
                cmpi.b  #8,($FFFFF600).w
                beq.s   Level_ChkDemo
                tst.w   ($FFFFFE02).w
                bne.w   Level
                cmpi.b  #$C,($FFFFF600).w
                beq.w   Level_MainLoop
                rts
; ---------------------------------------------------------------------------

Level_ChkDemo:
                tst.w   ($FFFFFE02).w
                bne.s   Level_EndDemo
                tst.w   ($FFFFF614).w
                beq.s   Level_EndDemo
                cmpi.b  #8,($FFFFF600).w
                beq.w   Level_MainLoop
                move.b  #0,($FFFFF600).w
                rts
; ---------------------------------------------------------------------------

Level_EndDemo:
                cmpi.b  #8,($FFFFF600).w
                bne.s   loc_2E92
                move.b  #0,($FFFFF600).w

loc_2E92:
                move.w  #$3C,($FFFFF614).w
                move.w  #$3F,($FFFFF626).w

loc_2E9E:
                move.b  #8,($FFFFF62A).w
                bsr.w   WaitForVint
                bsr.w   MoveSonicInDemo
                bsr.w   RunObjects
                bsr.w   BuildSprites
                bsr.w   ObjPosLoad
                subq.w  #1,($FFFFF794).w
                bpl.s   loc_2EC8
                move.w  #2,($FFFFF794).w
                bsr.w   sub_19F2

loc_2EC8:
                tst.w   ($FFFFF614).w
                bne.s   loc_2E9E
                rts
; ---------------------------------------------------------------------------
                lea     (sub_2EF4).l,a0
                lea     ($FFFFD400).w,a1
                move.w  #$B,d1

loc_2EDE:
                move.b  #5,(a1)
                move.w  (a0)+,8(a1)
                move.w  (a0)+,$A(a1)
                lea     $40(a1),a1
                dbf     d1,loc_2EDE
                rts

; =============== S U B R O U T I N E =======================================


sub_2EF4:
                bchg    d0,(a0)+
                movep.l $160(a0),d0
                movep.l $168(a0),d0
                movep.l $170(a0),d0
                movep.l $180(a0),d0
                movep.l $188(a0),d0
                movep.l $190(a0),d0
                movep.l $198(a0),d0
                movep.l $158(a0),d0
                ori.l   #$1600098,(a0)+
                bchg    d0,$98(a0)
                bchg    d0,-$68(a0,d0.w)
                lea     (word_2F48).l,a0
                lea     ($FFFFD280).w,a1
                move.w  #$33,d1

loc_2F32:
                move.b  #5,(a1)
                move.w  (a0)+,8(a1)
                move.w  (a0)+,$A(a1)
                lea     $40(a1),a1
                dbf     d1,loc_2F32
                rts
; End of function sub_2EF4

; ---------------------------------------------------------------------------
word_2F48:      dc.w $158, $90
                dc.w $160, $90
                dc.w $168, $90
                dc.w $170, $90
                dc.w $180, $90
                dc.w $188, $90
                dc.w $190, $90
                dc.w $198, $90
                dc.w $158, $A0
                dc.w $160, $A0
                dc.w $168, $A0
                dc.w $170, $A0
                dc.w $180, $A0
                dc.w $188, $A0
                dc.w $190, $A0
                dc.w $198, $A0
                dc.w $158, $A8
                dc.w $160, $A8
                dc.w $168, $A8
                dc.w $170, $A8
                dc.w $180, $A8
                dc.w $188, $A8
                dc.w $190, $A8
                dc.w $198, $A8
                dc.w $158, $B0
                dc.w $160, $B0
                dc.w $168, $B0
                dc.w $170, $B0
                dc.w $180, $B0
                dc.w $188, $B0
                dc.w $190, $B0
                dc.w $198, $B0
                dc.w $158, $B8
                dc.w $160, $B8
                dc.w $168, $B8
                dc.w $170, $B8
                dc.w $180, $B8
                dc.w $188, $B8
                dc.w $190, $B8
                dc.w $198, $B8
                dc.w $100, $98
                dc.w $108, $98
                dc.w $110, $98
                dc.w $118, $98
                dc.w $128, $98
                dc.w $130, $98
                dc.w $138, $98
                dc.w $140, $98
                dc.w $128, $A8
                dc.w $130, $A8
                dc.w $138, $A8
                dc.w $140, $A8
                dc.w $41F8, $AA00
                dc.w $3438, $F64C
                dc.w $363C, $9100
                dc.w $3E3C, $FF
                dc.w $3002, $6100
                dc.w $F022, $E840
                dc.w $6A02, $7000
                dc.w $240, $1F
                dc.w $1600, $30C3
                dc.w $5442, $51CF
                dc.w $FFE8, $5478
                dc.w $F64C, $4E75

; =============== S U B R O U T I N E =======================================


sub_3048:
                btst    #0,($FFFFF604).w
                beq.s   loc_305E
                addq.w  #1,($FFFFF71C).w
                tst.b   ($FFFFF625).w
                beq.s   loc_305E
                subq.b  #1,($FFFFF625).w

loc_305E:
                btst    #1,($FFFFF604).w
                beq.s   locret_3076
                subq.w  #1,($FFFFF71C).w
                cmpi.b  #$DF,($FFFFF625).w
                beq.s   locret_3076
                addq.b  #1,($FFFFF625).w

locret_3076:
                rts
; End of function sub_3048


; =============== S U B R O U T I N E =======================================


MoveSonicInDemo:
                tst.w   ($FFFFFFF0).w
                bne.s   MoveDemo_On
                rts
; ---------------------------------------------------------------------------

MoveDemo_Record:
                lea     ($80000).l,a1
                move.w  ($FFFFF790).w,d0
                adda.w  d0,a1
                move.b  ($FFFFF604).w,d0
                cmp.b   (a1),d0
                bne.s   loc_30A2
                addq.b  #1,1(a1)
                cmpi.b  #$FF,1(a1)
                beq.s   loc_30A2
                rts
; ---------------------------------------------------------------------------

loc_30A2:
                move.b  d0,2(a1)
                move.b  #0,3(a1)
                addq.w  #2,($FFFFF790).w
                andi.w  #$3FF,($FFFFF790).w
                rts
; ---------------------------------------------------------------------------

MoveDemo_On:
                tst.b   ($FFFFF604).w
                bpl.s   loc_30C4
                move.b  #4,($FFFFF600).w

loc_30C4:
                lea     (Demo_Index).l,a1
                moveq   #0,d0
                move.b  ($FFFFFE10).w,d0
                lsl.w   #2,d0
                movea.l (a1,d0.w),a1
                move.w  ($FFFFF790).w,d0
                adda.w  d0,a1
                move.b  (a1),d0
                lea     ($FFFFF604).w,a0
                move.b  d0,d1
                move.b  (a0),d2
                eor.b   d2,d0
                move.b  d1,(a0)+
                and.b   d1,d0
                move.b  d0,(a0)+
                subq.b  #1,($FFFFF792).w
                bcc.s   locret_30FE
                move.b  3(a1),($FFFFF792).w
                addq.w  #2,($FFFFF790).w

locret_30FE:
                rts
; End of function MoveSonicInDemo

; ---------------------------------------------------------------------------
Demo_Index:     dc.l Demo_GHZ
                dc.l Demo_GHZ
                dc.l Demo_GHZ
                dc.l Demo_SS
                dc.l Demo_MZ
                dc.l Demo_MZ
                dc.l Demo_SZ
                dc.b 0, $8B, 8, $37, 0, $42, 8, $5C, 0, $6A, 8, $5F, 0, $2F, 8, $2C
                dc.b 0, $21, 8, 3, $28, $30, 8, 8, 0, $2E, 8, $15, 0, $F, 8, $46
                dc.b 0, $1A, 8, $FF, 8, $CA, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
; ---------------------------------------------------------------------------
                cmpi.b  #6,($FFFFFE10).w
                bne.s   locret_3176
                bsr.w   sub_3178
                lea     ($FF0900).l,a1
                bsr.s   sub_3166
                lea     ($FF3380).l,a1

; =============== S U B R O U T I N E =======================================


sub_3166:
                lea     (unk_3196).l,a0
                move.w  #$1F,d1

loc_3170:
                move.w  (a0)+,(a1)+
                dbf     d1,loc_3170

locret_3176:
                rts
; End of function sub_3166


; =============== S U B R O U T I N E =======================================


sub_3178:
                lea     ($FF0000).l,a1
                lea     (unk_31D6).l,a0
                move.w  #$B,d1

loc_3188:
                move.w  (a0)+,d0
                ori.w   #$2000,(a1,d0.w)
                dbf     d1,loc_3188
                rts
; End of function sub_3178

; ---------------------------------------------------------------------------
unk_3196:       include "Unknown/Unk_3196.asm"

unk_31D6:       include "Unknown/Unk_31D6.asm"

; =============== S U B R O U T I N E =======================================


sub_31EE:
                cmpi.b  #2,($FFFFFE10).w
                beq.s   loc_321A
                cmpi.b  #3,($FFFFFE10).w
                beq.s   loc_3204
                tst.b   ($FFFFFE10).w
                bne.s   locret_3218

loc_3204:
                lea     ($FFFFC790).w,a1
                lea     (unk_3230).l,a0
                move.w  #$37,d1

loc_3212:
                move.w  (a0)+,(a1)+
                dbf     d1,loc_3212

locret_3218:
                rts
; ---------------------------------------------------------------------------

loc_321A:
                lea     ($FFFFC7A0).w,a1
                lea     (unk_32A0).l,a0
                move.w  #$2F,d1

loc_3228:
                move.w  (a0)+,(a1)+
                dbf     d1,loc_3228
                rts
; End of function sub_31EE

; ---------------------------------------------------------------------------
unk_3230:       include "Unknown/Unk_3230.asm"

unk_32A0:       include "Unknown/Unk_32A0.asm"

; =============== S U B R O U T I N E =======================================


Level_unk:
                rts
; End of function Level_unk

; ---------------------------------------------------------------------------
                dc.b $23 ; #
                dc.b $FC
                dc.b $5E ; ^
                dc.b   0
                dc.b   0
                dc.b   2
                dc.b   0
                dc.b $C0
                dc.b   0
                dc.b   4
                dc.b $41 
                dc.b $F9
                dc.b   0
                dc.b   0
                dc.b   5
                dc.b $EA
                dc.b $32
                dc.b $3C ; <
                dc.b   0
                dc.b $9F
                dc.b $61 
                dc.b  $E
                dc.b $41 
                dc.b $F9
                dc.b   0
                dc.b   0
                dc.b   5
                dc.b $EA
                dc.b $D0
                dc.b $FC
                dc.b   2
                dc.b $20
                dc.b $32
                dc.b $3C ; <
                dc.b   0
                dc.b $5F ; _
                dc.b $33 ; 3
                dc.b $D8
                dc.b   0
                dc.b $C0
                dc.b   0
                dc.b   0
                dc.b $51 ; Q
                dc.b $C9
                dc.b $FF
                dc.b $F8
                dc.b $4E ; N
                dc.b $75 ; u
                dc.b $70 ; p
                dc.b   0
                dc.b $10
                dc.b $18
                dc.b $E2
                dc.b $58 ; X
                dc.b $E6
                dc.b   8
                dc.b $E3
                dc.b $58 ; X
                dc.b $14
                dc.b $3B ; ;
                dc.b   0
                dc.b $1E
                dc.b $E1
                dc.b $4A ; J
                dc.b $70 ; p
                dc.b   0
                dc.b $10
                dc.b $18
                dc.b $E2
                dc.b $58 ; X
                dc.b $E6
                dc.b   8
                dc.b $E3
                dc.b $58 ; X
                dc.b $14
                dc.b $3B ; ;
                dc.b   0
                dc.b  $E
                dc.b $33
                dc.b $C2
                dc.b   0
                dc.b $C0
                dc.b   0
                dc.b   0
                dc.b $51 ; Q
                dc.b $C9
                dc.b $FF
                dc.b $CE
                dc.b $4E ; N
                dc.b $75 ; u
                dc.b   0
                dc.b   6
                dc.b $60 
                dc.b $66 

; =============== S U B R O U T I N E =======================================


sub_3360:
                lea     ($FFFFFE5E).w,a1
                lea     (unk_3374).l,a2
                moveq   #$20,d1 

loc_336C:
                move.w  (a2)+,(a1)+
                dbf     d1,loc_336C
                rts
; End of function sub_3360

; ---------------------------------------------------------------------------
unk_3374:       include "Unknown/Unk_3374.asm"

; =============== S U B R O U T I N E =======================================


OscillateNumDo:
                cmpi.b  #6,($FFFFD024).w
                bcc.s   locret_340C
                lea     ($FFFFFE5E).w,a1
                lea     (Osc_Data2).l,a2
                move.w  (a1)+,d3
                moveq   #$F,d1

loc_33CC:
                move.w  (a2)+,d2
                move.w  (a2)+,d4
                btst    d1,d3
                bne.s   loc_33EC
                move.w  2(a1),d0
                add.w   d2,d0
                move.w  d0,2(a1)
                add.w   d0,0(a1)
                cmp.b   0(a1),d4
                bhi.s   loc_3402
                bset    d1,d3
                bra.s   loc_3402
; ---------------------------------------------------------------------------

loc_33EC:
                move.w  2(a1),d0
                sub.w   d2,d0
                move.w  d0,2(a1)
                add.w   d0,0(a1)
                cmp.b   0(a1),d4
                bls.s   loc_3402
                bclr    d1,d3

loc_3402:
                addq.w  #4,a1
                dbf     d1,loc_33CC
                move.w  d3,($FFFFFE5E).w

locret_340C:
                rts
; End of function OscillateNumDo

; ---------------------------------------------------------------------------
Osc_Data2:      dc.w 2, $10
                dc.w 2, $18
                dc.w 2, $20
                dc.w 2, $30
                dc.w 4, $20
                dc.w 8, 8
                dc.w 8, $40
                dc.w 4, $40
                dc.w 2, $50
                dc.w 2, $50
                dc.w 2, $20
                dc.w 3, $30
                dc.w 5, $50
                dc.w 7, $70
                dc.w 2, $10
                dc.w 2, $10

; =============== S U B R O U T I N E =======================================


ChangeRingFrame:
                subq.b  #1,($FFFFFEC0).w
                bpl.s   loc_3464
                move.b  #$B,($FFFFFEC0).w
                subq.b  #1,($FFFFFEC1).w
                andi.b  #7,($FFFFFEC1).w

loc_3464:
                subq.b  #1,($FFFFFEC2).w
                bpl.s   loc_347A
                move.b  #7,($FFFFFEC2).w
                addq.b  #1,($FFFFFEC3).w
                andi.b  #3,($FFFFFEC3).w

loc_347A:
                subq.b  #1,($FFFFFEC4).w
                bpl.s   loc_3498
                move.b  #7,($FFFFFEC4).w
                addq.b  #1,($FFFFFEC5).w
                cmpi.b  #6,($FFFFFEC5).w
                bcs.s   loc_3498
                move.b  #0,($FFFFFEC5).w

loc_3498:
                tst.b   ($FFFFFEC6).w
                beq.s   locret_34BA
                moveq   #0,d0
                move.b  ($FFFFFEC6).w,d0
                add.w   ($FFFFFEC8).w,d0
                move.w  d0,($FFFFFEC8).w
                rol.w   #7,d0
                andi.w  #3,d0
                move.b  d0,($FFFFFEC7).w
                subq.b  #1,($FFFFFEC6).w

locret_34BA:
                rts
; End of function ChangeRingFrame


; =============== S U B R O U T I N E =======================================


SignpostArtLoad:
                tst.w   ($FFFFFE08).w
                bne.w   Signpost_Exit
                cmpi.w  #$202,($FFFFFE10).w ; if MZ3
                beq.s   loc_34D4
                cmpi.b  #2,($FFFFFE11).w ; if act 3
                beq.s   Signpost_Exit

loc_34D4:
                move.w  ($FFFFF700).w,d0
                move.w  ($FFFFF72A).w,d1
                subi.w  #$100,d1
                cmp.w   d1,d0
                blt.s   Signpost_Exit
                tst.b   ($FFFFFE1E).w
                beq.s   Signpost_Exit
                cmp.w   ($FFFFF728).w,d1
                beq.s   Signpost_Exit
                move.w  d1,($FFFFF728).w
                moveq   #$12,d0
                bra.w   LoadPLC2
; ---------------------------------------------------------------------------

Signpost_Exit:
                rts
; End of function SignpostArtLoad

; ---------------------------------------------------------------------------

SpecialStage:
                bsr.w   Pal_FadeFrom
                move.w  ($FFFFF60C).w,d0
                andi.b  #$BF,d0
                move.w  d0,($C00004).l
                bsr.w   ClearScreen
                lea     ($C00004).l,a5
                move.w  #$8F01,(a5)
                move.l  #$946F93FF,(a5)
                move.w  #$9780,(a5)
                move.l  #$50000081,(a5)
                move.w  #0,($C00000).l

loc_3534:
                move.w  (a5),d1
                btst    #1,d1
                bne.s   loc_3534
                move.w  #$8F02,(a5)
                moveq   #$14,d0
                bsr.w   RunPLC_ROM
                bsr.w   sub_366A
                lea     ($FFFFD000).w,a1
                moveq   #0,d0
                move.w  #$7FF,d1

loc_3554:
                move.l  d0,(a1)+
                dbf     d1,loc_3554
                lea     ($FFFFF700).w,a1
                moveq   #0,d0
                move.w  #$3F,d1

loc_3564:
                move.l  d0,(a1)+
                dbf     d1,loc_3564
                lea     ($FFFFFE60).w,a1
                moveq   #0,d0
                move.w  #$27,d1

loc_3574:
                move.l  d0,(a1)+
                dbf     d1,loc_3574
                lea     ($FFFFAA00).w,a1
                moveq   #0,d0
                move.w  #$7F,d1

loc_3584:
                move.l  d0,(a1)+
                dbf     d1,loc_3584
                moveq   #$A,d0
                bsr.w   PalLoad1
                jsr     (sub_10B70).l
                move.l  #0,($FFFFF700).w
                move.l  #0,($FFFFF704).w
                move.b  #9,($FFFFD000).w
                move.w  #$458,($FFFFD008).w
                move.w  #$4A0,($FFFFD00C).w
                lea     ($C00004).l,a6
                move.w  #$8B03,(a6)
                move.w  #$8004,(a6)
                move.w  #$8AAF,($FFFFF624).w
                move.w  #$9011,(a6)
                bsr.w   sub_3730
                clr.w   ($FFFFF780).w
                move.w  #$40,($FFFFF782).w
                move.w  #$89,d0
                bsr.w   PlaySound_Special
                move.w  #0,($FFFFF790).w
                lea     (Demo_Index).l,a1
                moveq   #0,d0
                move.b  ($FFFFFE10).w,d0
                lsl.w   #2,d0
                movea.l (a1,d0.w),a1
                move.b  1(a1),($FFFFF792).w
                subq.b  #1,($FFFFF792).w
                move.w  #$708,($FFFFF614).w
                move.w  ($FFFFF60C).w,d0
                ori.b   #$40,d0 
                move.w  d0,($C00004).l
                bsr.w   sub_1950

loc_3620:
                bsr.w   Pause
                move.b  #$A,($FFFFF62A).w
                bsr.w   WaitForVint
                bsr.w   MoveSonicInDemo
                move.w  ($FFFFF604).w,($FFFFF602).w
                bsr.w   RunObjects
                bsr.w   BuildSprites
                jsr     (sub_10872).l
                bsr.w   sub_39B2
                tst.w   ($FFFFFFF0).w
                beq.s   loc_3656
                tst.w   ($FFFFF614).w
                beq.s   loc_3662

loc_3656:
                cmpi.b  #$10,($FFFFF600).w
                beq.w   loc_3620
                rts
; ---------------------------------------------------------------------------

loc_3662:
                move.b  #0,($FFFFF600).w
                rts

; =============== S U B R O U T I N E =======================================


sub_366A:
                lea     ($FF0000).l,a1
                lea     (Eni_SSBg1).l,a0
                move.w  #$4051,d0
                bsr.w   EnigmaDecompress
                move.l  #$50000001,d3
                lea     ($FF0080).l,a2
                moveq   #6,d7

loc_368C:
                move.l  d3,d0
                moveq   #3,d6
                moveq   #0,d4
                cmpi.w  #3,d7
                bcc.s   loc_369A
                moveq   #1,d4

loc_369A:
                moveq   #7,d5

loc_369C:
                movea.l a2,a1
                eori.b  #1,d4
                bne.s   loc_36B0
                cmpi.w  #6,d7
                bne.s   loc_36C0
                lea     ($FF0000).l,a1

loc_36B0:
                movem.l d0-d4,-(sp)
                moveq   #7,d1
                moveq   #7,d2
                bsr.w   ShowVDPGraphics
                movem.l (sp)+,d0-d4

loc_36C0:
                addi.l  #$100000,d0
                dbf     d5,loc_369C
                addi.l  #$3800000,d0
                eori.b  #1,d4
                dbf     d6,loc_369A
                addi.l  #$10000000,d3
                bpl.s   loc_36EA
                swap    d3
                addi.l  #$C000,d3
                swap    d3

loc_36EA:
                adda.w  #$80,a2
                dbf     d7,loc_368C
                lea     ($FF0000).l,a1
                lea     (Eni_SSBg2).l,a0
                move.w  #$4000,d0
                bsr.w   EnigmaDecompress
                lea     ($FF0000).l,a1
                move.l  #$40000003,d0
                moveq   #$3F,d1
                moveq   #$1F,d2
                bsr.w   ShowVDPGraphics
                lea     ($FF0000).l,a1
                move.l  #$50000003,d0
                moveq   #$3F,d1
                moveq   #$3F,d2
                bsr.w   ShowVDPGraphics
                rts
; End of function sub_366A


; =============== S U B R O U T I N E =======================================


sub_3730:
                tst.w   ($FFFFF63A).w
                bmi.s   locret_37B4
                subq.w  #1,($FFFFF79C).w
                bpl.s   locret_37B4
                lea     ($C00004).l,a6
                move.w  ($FFFFF79A).w,d0
                addq.w  #1,($FFFFF79A).w
                andi.w  #$1F,d0
                lsl.w   #2,d0
                lea     (unk_380A).l,a0
                adda.w  d0,a0
                move.b  (a0)+,d0
                bpl.s   loc_3760
                move.w  #$1FF,d0

loc_3760:
                move.w  d0,($FFFFF79C).w
                moveq   #0,d0
                move.b  (a0)+,d0
                move.w  d0,($FFFFF7A0).w
                lea     (unk_388A).l,a1
                lea     (a1,d0.w),a1
                move.w  #$8200,d0
                move.b  (a1)+,d0
                move.w  d0,(a6)
                move.b  (a1),($FFFFF616).w
                move.w  #$8400,d0
                move.b  (a0)+,d0
                move.w  d0,(a6)
                move.l  #$40000010,($C00004).l
                move.l  ($FFFFF616).w,($C00000).l
                moveq   #0,d0
                move.b  (a0)+,d0
                bmi.s   loc_37B6
                lea     (unk_3898).l,a1
                adda.w  d0,a1
                lea     ($FFFFFB4E).w,a2
                move.l  (a1)+,(a2)+
                move.l  (a1)+,(a2)+
                move.l  (a1)+,(a2)+

locret_37B4:
                rts
; ---------------------------------------------------------------------------

loc_37B6:
                move.w  ($FFFFF79E).w,d1
                cmpi.w  #$8A,d0
                bcs.s   loc_37C2
                addq.w  #1,d1

loc_37C2:
                mulu.w  #$2A,d1
                lea     (unk_38E0).l,a1
                adda.w  d1,a1
                andi.w  #$7F,d0
                bclr    #0,d0
                beq.s   loc_37E6
                lea     ($FFFFFB6E).w,a2
                move.l  (a1),(a2)+
                move.l  4(a1),(a2)+
                move.l  8(a1),(a2)+

loc_37E6:
                adda.w  #$C,a1
                lea     ($FFFFFB5A).w,a2
                cmpi.w  #$A,d0
                bcs.s   loc_37FC
                subi.w  #$A,d0
                lea     ($FFFFFB7A).w,a2

loc_37FC:
                move.w  d0,d1
                add.w   d0,d0
                add.w   d1,d0
                adda.w  d0,a1
                move.l  (a1)+,(a2)+
                move.w  (a1)+,(a2)+
                rts
; End of function sub_3730

; ---------------------------------------------------------------------------
unk_380A:       dc.b   3
                dc.b   0
                dc.b   7
                dc.b $92
                dc.b   3
                dc.b   0
                dc.b   7
                dc.b $90
                dc.b   3
                dc.b   0
                dc.b   7
                dc.b $8E
                dc.b   3
                dc.b   0
                dc.b   7
                dc.b $8C
                dc.b   3
                dc.b   0
                dc.b   7
                dc.b $8B
                dc.b   3
                dc.b   0
                dc.b   7
                dc.b $80
                dc.b   3
                dc.b   0
                dc.b   7
                dc.b $82
                dc.b   3
                dc.b   0
                dc.b   7
                dc.b $84
                dc.b   3
                dc.b   0
                dc.b   7
                dc.b $86
                dc.b   3
                dc.b   0
                dc.b   7
                dc.b $88
                dc.b   7
                dc.b   8
                dc.b   7
                dc.b   0
                dc.b   7
                dc.b  $A
                dc.b   7
                dc.b  $C
                dc.b $FF
                dc.b  $C
                dc.b   7
                dc.b $18
                dc.b $FF
                dc.b  $C
                dc.b   7
                dc.b $18
                dc.b   7
                dc.b  $A
                dc.b   7
                dc.b  $C
                dc.b   7
                dc.b   8
                dc.b   7
                dc.b   0
                dc.b   3
                dc.b   0
                dc.b   6
                dc.b $88
                dc.b   3
                dc.b   0
                dc.b   6
                dc.b $86
                dc.b   3
                dc.b   0
                dc.b   6
                dc.b $84
                dc.b   3
                dc.b   0
                dc.b   6
                dc.b $82
                dc.b   3
                dc.b   0
                dc.b   6
                dc.b $81
                dc.b   3
                dc.b   0
                dc.b   6
                dc.b $8A
                dc.b   3
                dc.b   0
                dc.b   6
                dc.b $8C
                dc.b   3
                dc.b   0
                dc.b   6
                dc.b $8E
                dc.b   3
                dc.b   0
                dc.b   6
                dc.b $90
                dc.b   3
                dc.b   0
                dc.b   6
                dc.b $92
                dc.b   7
                dc.b   2
                dc.b   6
                dc.b $24 ; $
                dc.b   7
                dc.b   4
                dc.b   6
                dc.b $30 ; 0
                dc.b $FF
                dc.b   6
                dc.b   6
                dc.b $3C ; <
                dc.b $FF
                dc.b   6
                dc.b   6
                dc.b $3C ; <
                dc.b   7
                dc.b   4
                dc.b   6
                dc.b $30 ; 0
                dc.b   7
                dc.b   2
                dc.b   6
                dc.b $24 ; $
unk_388A:       dc.b $10
                dc.b   1
                dc.b $18
                dc.b   0
                dc.b $18
                dc.b   1
                dc.b $20
                dc.b   0
                dc.b $20
                dc.b   1
                dc.b $28 ; (
                dc.b   0
                dc.b $28 ; (
                dc.b   1
unk_3898:       dc.b   4
                dc.b   0
                dc.b   6
                dc.b   0
                dc.b   6
                dc.b $20
                dc.b   6
                dc.b $24 ; $
                dc.b   6
                dc.b $64 ; d
                dc.b   6
                dc.b $66 
                dc.b   6
                dc.b   0
                dc.b   8
                dc.b $20
                dc.b  $A
                dc.b $64 ; d
                dc.b  $A
                dc.b $68 ; h
                dc.b  $A
                dc.b $A6
                dc.b  $A
                dc.b $AA
                dc.b   8
                dc.b   0
                dc.b  $C
                dc.b $42 ; B
                dc.b  $E
                dc.b $86
                dc.b  $E
                dc.b $CA
                dc.b  $E
                dc.b $EC
                dc.b  $E
                dc.b $EE
                dc.b   4
                dc.b   0
                dc.b   4
                dc.b $20
                dc.b   6
                dc.b $20
                dc.b   6
                dc.b $20
                dc.b   8
                dc.b $64 ; d
                dc.b   6
                dc.b $66 
                dc.b   4
                dc.b $20
                dc.b   6
                dc.b $20
                dc.b   8
                dc.b $42 ; B
                dc.b   8
                dc.b $42 ; B
                dc.b  $A
                dc.b $86
                dc.b  $A
                dc.b $AA
                dc.b   6
                dc.b $20
                dc.b   8
                dc.b $42 ; B
                dc.b  $A
                dc.b $64 ; d
                dc.b  $C
                dc.b $86
                dc.b  $E
                dc.b $A8
                dc.b  $E
                dc.b $EE
unk_38E0:       dc.b  $E
                dc.b $EA
                dc.b  $E
                dc.b $E0
                dc.b  $A
                dc.b $A0
                dc.b   8
                dc.b $80
                dc.b   6
                dc.b $60 
                dc.b   4
                dc.b $40 ; @
                dc.b  $E
                dc.b $E0
                dc.b  $A
                dc.b $A0
                dc.b   4
                dc.b $40 ; @
                dc.b  $A
                dc.b $A0
                dc.b  $A
                dc.b $A0
                dc.b  $A
                dc.b $A0
                dc.b   8
                dc.b $60 
                dc.b   8
                dc.b $60 
                dc.b   8
                dc.b $60 
                dc.b   6
                dc.b $40 ; @
                dc.b   6
                dc.b $40 ; @
                dc.b   6
                dc.b $40 ; @
                dc.b   4
                dc.b   0
                dc.b   4
                dc.b   0
                dc.b   4
                dc.b   0
                dc.b  $A
                dc.b $EC
                dc.b   6
                dc.b $EA
                dc.b   4
                dc.b $C6
                dc.b   2
                dc.b $A4
                dc.b   0
                dc.b $82
                dc.b   0
                dc.b $60 
                dc.b   6
                dc.b $EA
                dc.b   4
                dc.b $C6
                dc.b   0
                dc.b $60 
                dc.b   4
                dc.b $C6
                dc.b   4
                dc.b $C6
                dc.b   4
                dc.b $C6
                dc.b   4
                dc.b $84
                dc.b   4
                dc.b $84
                dc.b   4
                dc.b $84
                dc.b   4
                dc.b $42 ; B
                dc.b   4
                dc.b $42 ; B
                dc.b   4
                dc.b $42 ; B
                dc.b   4
                dc.b   0
                dc.b   4
                dc.b   0
                dc.b   4
                dc.b   0
                dc.b  $E
                dc.b $CC
                dc.b  $E
                dc.b $8A
                dc.b  $C
                dc.b $68 ; h
                dc.b  $A
                dc.b $46 
                dc.b   8
                dc.b $24 ; $
                dc.b   6
                dc.b   2
                dc.b  $E
                dc.b $8A
                dc.b  $C
                dc.b $68 ; h
                dc.b   6
                dc.b   2
                dc.b  $C
                dc.b $68 ; h
                dc.b  $C
                dc.b $68 ; h
                dc.b  $C
                dc.b $68 ; h
                dc.b   8
                dc.b $46 
                dc.b   8
                dc.b $46 
                dc.b   8
                dc.b $46 
                dc.b   6
                dc.b $24 ; $
                dc.b   6
                dc.b $24 ; $
                dc.b   6
                dc.b $24 ; $
                dc.b   4
                dc.b   0
                dc.b   4
                dc.b   0
                dc.b   4
                dc.b   0
                dc.b  $A
                dc.b $EC
                dc.b   8
                dc.b $CA
                dc.b   6
                dc.b $A8
                dc.b   4
                dc.b $86
                dc.b   2
                dc.b $64 ; d
                dc.b   0
                dc.b $42 ; B
                dc.b   8
                dc.b $CA
                dc.b   6
                dc.b $A8
                dc.b   0
                dc.b $42 ; B
                dc.b   6
                dc.b $A8
                dc.b   6
                dc.b $A8
                dc.b   6
                dc.b $A8
                dc.b   6
                dc.b $84
                dc.b   6
                dc.b $84
                dc.b   6
                dc.b $84
                dc.b   4
                dc.b $42 ; B
                dc.b   4
                dc.b $42 ; B
                dc.b   4
                dc.b $42 ; B
                dc.b   4
                dc.b   0
                dc.b   4
                dc.b   0
                dc.b   4
                dc.b   0
                dc.b  $E
                dc.b $EC
                dc.b  $C
                dc.b $CA
                dc.b  $A
                dc.b $A8
                dc.b   8
                dc.b $86
                dc.b   6
                dc.b $64 ; d
                dc.b   4
                dc.b $42 ; B
                dc.b  $C
                dc.b $CA
                dc.b  $A
                dc.b $A8
                dc.b   4
                dc.b $42 ; B
                dc.b  $A
                dc.b $A8
                dc.b  $A
                dc.b $A8
                dc.b  $A
                dc.b $A8
                dc.b   8
                dc.b $64 ; d
                dc.b   8
                dc.b $64 ; d
                dc.b   8
                dc.b $64 ; d
                dc.b   6
                dc.b $42 ; B
                dc.b   6
                dc.b $42 ; B
                dc.b   6
                dc.b $42 ; B
                dc.b   4
                dc.b   0
                dc.b   4
                dc.b   0
                dc.b   4
                dc.b   0

; =============== S U B R O U T I N E =======================================


sub_39B2:
                move.w  ($FFFFF7A0).w,d0
                bne.s   loc_39C4
                move.w  #0,($FFFFF70C).w
                move.w  ($FFFFF70C).w,($FFFFF618).w

loc_39C4:
                cmpi.w  #8,d0
                bcc.s   loc_3A1C
                cmpi.w  #6,d0
                bne.s   loc_39DE
                addq.w  #1,($FFFFF718).w
                addq.w  #1,($FFFFF70C).w
                move.w  ($FFFFF70C).w,($FFFFF618).w

loc_39DE:
                moveq   #0,d0
                move.w  ($FFFFF708).w,d0
                neg.w   d0
                swap    d0
                lea     (unk_3A9A).l,a1
                lea     ($FFFFAA00).w,a3
                moveq   #9,d3

loc_39F4:
                move.w  2(a3),d0
                bsr.w   CalcSine
                moveq   #0,d2
                move.b  (a1)+,d2
                muls.w  d2,d0
                asr.l   #8,d0
                move.w  d0,(a3)+
                move.b  (a1)+,d2
                ext.w   d2
                add.w   d2,(a3)+
                dbf     d3,loc_39F4
                lea     ($FFFFAA00).w,a3
                lea     (unk_3A86).l,a2
                bra.s   loc_3A4C
; ---------------------------------------------------------------------------

loc_3A1C:
                cmpi.w  #$C,d0
                bne.s   loc_3A42
                subq.w  #1,($FFFFF718).w
                lea     ($FFFFAB00).w,a3
                move.l  #byte_18000,d2
                moveq   #6,d1

loc_3A32:
                move.l  (a3),d0
                sub.l   d2,d0
                move.l  d0,(a3)+
                subi.l  #$2000,d2
                dbf     d1,loc_3A32

loc_3A42:
                lea     ($FFFFAB00).w,a3
                lea     (unk_3A92).l,a2

loc_3A4C:
                lea     ($FFFFCC00).w,a1
                move.w  ($FFFFF718).w,d0
                neg.w   d0
                swap    d0
                moveq   #0,d3
                move.b  (a2)+,d3
                move.w  ($FFFFF70C).w,d2
                neg.w   d2
                andi.w  #$FF,d2
                lsl.w   #2,d2

loc_3A68:
                move.w  (a3)+,d0
                addq.w  #2,a3
                moveq   #0,d1
                move.b  (a2)+,d1
                subq.w  #1,d1

loc_3A72:
                move.l  d0,(a1,d2.w)
                addq.w  #4,d2
                andi.w  #$3FC,d2
                dbf     d1,loc_3A72
                dbf     d3,loc_3A68
                rts
; End of function sub_39B2

; ---------------------------------------------------------------------------
unk_3A86:       dc.b   9
                dc.b $28
                dc.b $18
                dc.b $10
                dc.b $28
                dc.b $18
                dc.b $10
                dc.b $30
                dc.b $18
                dc.b   8
                dc.b $10
                dc.b   0
unk_3A92:       dc.b   6
                dc.b $30
                dc.b $30
                dc.b $30
                dc.b $28
                dc.b $18
                dc.b $18
                dc.b $18
unk_3A9A:       dc.b   8
                dc.b   2
                dc.b   4
                dc.b $FF
                dc.b   2
                dc.b   3
                dc.b   8
                dc.b $FF
                dc.b   4
                dc.b   2
                dc.b   2
                dc.b   3
                dc.b   8
                dc.b $FD
                dc.b   4
                dc.b   2
                dc.b   2
                dc.b   3
                dc.b   2
                dc.b $FF

; =============== S U B R O U T I N E =======================================


LevelSizeLoad:
                moveq   #0,d0
                move.b  d0,($FFFFF740).w
                move.b  d0,($FFFFF741).w
                move.b  d0,($FFFFF746).w
                move.b  d0,($FFFFF748).w
                move.b  d0,($FFFFF742).w
                move.w  ($FFFFFE10).w,d0
                lsl.b   #6,d0
                lsr.w   #4,d0
                move.w  d0,d1
                add.w   d0,d0
                add.w   d1,d0
                lea     LevelSizeArray(pc,d0.w),a0
                move.w  (a0)+,d0
                move.w  d0,($FFFFF730).w
                move.l  (a0)+,d0
                move.l  d0,($FFFFF728).w
                move.l  d0,($FFFFF720).w
                cmp.w   ($FFFFF728).w,d0
                bne.s   loc_3AF2
                move.b  #1,($FFFFF740).w

loc_3AF2:
                move.l  (a0)+,d0
                move.l  d0,($FFFFF72C).w
                move.l  d0,($FFFFF724).w
                cmp.w   ($FFFFF72C).w,d0
                bne.s   loc_3B08
                move.b  #1,($FFFFF741).w

loc_3B08:
                move.w  ($FFFFF728).w,d0
                addi.w  #$240,d0
                move.w  d0,($FFFFF732).w
                move.w  (a0)+,d0
                move.w  d0,($FFFFF73E).w
                bra.w   loc_3C6E
; ---------------------------------------------------------------------------
LevelSizeArray:
                dc.w 4, 0, $24BF, 0, $300, $60
                dc.w 4, 0, $1EBF, 0, $300, $60
                dc.w 4, 0, $2960, 0, $300, $60
                dc.w 4, 0, $2ABF, 0, $300, $60
                dc.w 4, 0, $17BF, 0, $720, $60
                dc.w 4, 0, $EBF, 0, $720, $60
                dc.w 4, 0, $1EBF, 0, $720, $60
                dc.w 4, 0, $1EBF, 0, $720, $60
                dc.w 4, 0, $17BF, 0, $1D0, $60
                dc.w 4, 0, $1BBF, 0, $520, $60
                dc.w 4, 0, $163F, 0, $720, $60
                dc.w 4, 0, $16BF, 0, $720, $60
                dc.w 4, 0, $1EBF, 0, $640, $60
                dc.w 4, 0, $20BF, 0, $640, $60
                dc.w 4, 0, $1EBF, 0, $6C0, $60
                dc.w 4, 0, $3EC0, 0, $720, $60
                dc.w 4, 0, $22C0, 0, $420, $60
                dc.w 4, 0, $28C0, 0, $520, $60
                dc.w 4, 0, $2EC0, 0, $620, $60
                dc.w 4, 0, $29C0, 0, $620, $60
                dc.w 4, 0, $3EC0, 0, $720, $60
                dc.w 4, 0, $3EC0, 0, $720, $60
                dc.w 4, 0, $3EC0, 0, $720, $60
                dc.w 4, 0, $3EC0, 0, $720, $60
                dc.w 4, 0, $2FFF, 0, $320, $60
                dc.w 4, 0, $2FFF, 0, $320, $60
                dc.w 4, 0, $2FFF, 0, $320, $60
                dc.w 4, 0, $2FFF, 0, $320, $60
; ---------------------------------------------------------------------------

loc_3C6E:
                move.w  ($FFFFFE10).w,d0
                cmpi.b  #3,d0
                bne.s   loc_3C7C
                subq.b  #1,($FFFFFE11).w

loc_3C7C:
                lsl.b   #6,d0
                lsr.w   #4,d0
                lea     StartLocArray(pc,d0.w),a1
                moveq   #0,d1
                move.w  (a1)+,d1
                move.w  d1,($FFFFD008).w
                subi.w  #$A0,d1
                bcc.s   loc_3C94
                moveq   #0,d1

loc_3C94:
                move.w  d1,($FFFFF700).w
                moveq   #0,d0
                move.w  (a1),d0
                move.w  d0,($FFFFD00C).w
                subi.w  #$60,d0
                bcc.s   loc_3CA8
                moveq   #0,d0

loc_3CA8:
                cmp.w   ($FFFFF72E).w,d0
                blt.s   loc_3CB2
                move.w  ($FFFFF72E).w,d0

loc_3CB2:
                move.w  d0,($FFFFF704).w
                bsr.w   sub_3D9A
                moveq   #0,d0
                move.b  ($FFFFFE10).w,d0
                lsl.b   #2,d0
                move.l  unk_3D3C(pc,d0.w),($FFFFF7AC).w
                bra.w   loc_3D54
; ---------------------------------------------------------------------------
StartLocArray:  incbin "Misc/SLoc_Lev.bin"
                even

unk_3D3C:       dc.b $B5
                dc.b $7F 
                dc.b $1F
                dc.b $20
                dc.b $7F 
                dc.b $7F 
                dc.b $7F 
                dc.b $7F 
                dc.b $7F 
                dc.b $7F 
                dc.b $7F 
                dc.b $7F 
                dc.b $B5
                dc.b $A8
                dc.b $7F 
                dc.b $7F 
                dc.b $7F 
                dc.b $7F 
                dc.b $7F 
                dc.b $7F 
                dc.b $7F 
                dc.b $7F 
                dc.b $7F 
                dc.b $7F 
; ---------------------------------------------------------------------------

loc_3D54:
                moveq   #0,d0
                move.b  ($FFFFFE10).w,d0
                lsl.w   #3,d0
                lea     unk_3D6A(pc,d0.w),a1
                lea     ($FFFFF7F0).w,a2
                move.l  (a1)+,(a2)+
                move.l  (a1)+,(a2)+
                rts
; End of function LevelSizeLoad

; ---------------------------------------------------------------------------
unk_3D6A:       dc.b   0
                dc.b $70 ; p
                dc.b   1
                dc.b   0
                dc.b   1
                dc.b   0
                dc.b   1
                dc.b   0
                dc.b   8
                dc.b   0
                dc.b   1
                dc.b   0
                dc.b   1
                dc.b   0
                dc.b   0
                dc.b   0
                dc.b   8
                dc.b   0
                dc.b   1
                dc.b   0
                dc.b   1
                dc.b   0
                dc.b   0
                dc.b   0
                dc.b   8
                dc.b   0
                dc.b   1
                dc.b   0
                dc.b   1
                dc.b   0
                dc.b   0
                dc.b   0
                dc.b   8
                dc.b   0
                dc.b   1
                dc.b   0
                dc.b   1
                dc.b   0
                dc.b   0
                dc.b   0
                dc.b   8
                dc.b   0
                dc.b   1
                dc.b   0
                dc.b   1
                dc.b   0
                dc.b   0
                dc.b   0

; =============== S U B R O U T I N E =======================================


sub_3D9A:
                move.w  d0,($FFFFF70C).w
                move.w  d0,($FFFFF714).w
                swap    d1
                move.l  d1,($FFFFF708).w
                move.l  d1,($FFFFF710).w
                move.l  d1,($FFFFF718).w
                moveq   #0,d2
                move.b  ($FFFFFE10).w,d2
                add.w   d2,d2
                move.w  unk_3DC0(pc,d2.w),d2
                jmp     unk_3DC0(pc,d2.w)
; End of function sub_3D9A

; ---------------------------------------------------------------------------
unk_3DC0:       dc.b   0
                dc.b  $C
                dc.b   0
                dc.b $10
                dc.b   0
                dc.b $12
                dc.b   0
                dc.b $14
                dc.b   0
                dc.b $20
                dc.b   0
                dc.b $34 ; 4
                dc.b $60 
                dc.b   0
                dc.b   0
                dc.b $8A
                dc.b $4E ; N
                dc.b $75 ; u
                dc.b $4E ; N
                dc.b $75 ; u
                dc.b $E2
                dc.b $80
                dc.b   6
                dc.b $40 ; @
                dc.b   0
                dc.b $C0
                dc.b $31 ; 1
                dc.b $C0
                dc.b $F7
                dc.b  $C
                dc.b $4E ; N
                dc.b $75 ; u
                dc.b $E9
                dc.b $80
                dc.b $24 ; $
                dc.b   0
                dc.b $E3
                dc.b $80
                dc.b $D0
                dc.b $82
                dc.b $E0
                dc.b $80
                dc.b $31 ; 1
                dc.b $C0
                dc.b $F7
                dc.b  $C
                dc.b $31 ; 1
                dc.b $C0
                dc.b $F7
                dc.b $14
                dc.b $4E ; N
                dc.b $75 ; u
                dc.b $4E ; N
                dc.b $75 ; u

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


DeformBgLayer:
                tst.b   ($FFFFF744).w
                bne.s   loc_3E18
                tst.b   ($FFFFF740).w
                bne.w   loc_4258
                bsr.w   SetHorizScrollFlags

loc_3E08:
                tst.b   ($FFFFF741).w
                bne.w   loc_4276
                bsr.w   ScrollVerti

loc_3E14:
                bsr.w   sub_4914

loc_3E18:
                move.w  ($FFFFF700).w,($FFFFF61A).w
                move.w  ($FFFFF704).w,($FFFFF616).w
                move.w  ($FFFFF708).w,($FFFFF61C).w
                move.w  ($FFFFF70C).w,($FFFFF618).w
                move.w  ($FFFFF718).w,($FFFFF620).w
                move.w  ($FFFFF71C).w,($FFFFF61E).w
                moveq   #0,d0
                move.b  ($FFFFFE10).w,d0
                add.w   d0,d0
                move.w  SwScrl_Index(pc,d0.w),d0
                jmp     SwScrl_Index(pc,d0.w)
; End of function DeformBgLayer

; ===========================================================================
; ---------------------------------------------------------------------------
; JUMP TABLE FOR SOFTWARE SCROLL MANAGERS
; ---------------------------------------------------------------------------
SwScrl_Index:   dc.w Deform_GHZ-SwScrl_Index
                dc.w Deform_LZ-SwScrl_Index
                dc.w Deform_MZ-SwScrl_Index
                dc.w Deform_SLZ-SwScrl_Index
                dc.w Deform_SZ-SwScrl_Index
                dc.w Deform_CWZ-SwScrl_Index
; ===========================================================================
Deform_GHZ:
                move.w  ($FFFFF73A).w,d4
                ext.l   d4
                asl.l   #5,d4
                move.l  d4,d1
                asl.l   #1,d4
                add.l   d1,d4
                moveq   #0,d5
                bsr.w   sub_4298
                bsr.w   sub_4374
                lea     ($FFFFCC00).w,a1
                move.w  ($FFFFF704).w,d0
                andi.w  #$7FF,d0
                lsr.w   #5,d0
                neg.w   d0
                addi.w  #$26,d0
                move.w  d0,($FFFFF714).w
                move.w  d0,d4
                bsr.w   sub_4344
                move.w  ($FFFFF70C).w,($FFFFF618).w
                move.w  #$6F,d1
                sub.w   d4,d1
                move.w  ($FFFFF700).w,d0
                cmpi.b  #4,($FFFFF600).w
                bne.s   loc_3EA8
                moveq   #0,d0

loc_3EA8:
                neg.w   d0
                swap    d0
                move.w  ($FFFFF708).w,d0
                neg.w   d0

loc_3EB2:
                move.l  d0,(a1)+
                dbf     d1,loc_3EB2
                move.w  #$27,d1 
                move.w  ($FFFFF710).w,d0
                neg.w   d0

loc_3EC2:
                move.l  d0,(a1)+
                dbf     d1,loc_3EC2
                move.w  ($FFFFF710).w,d0
                addi.w  #0,d0
                move.w  ($FFFFF700).w,d2
                addi.w  #-$200,d2
                sub.w   d0,d2
                ext.l   d2
                asl.l   #8,d2
                divs.w  #$68,d2 
                ext.l   d2
                asl.l   #8,d2
                moveq   #0,d3
                move.w  d0,d3
                move.w  #$47,d1 
                add.w   d4,d1

loc_3EF0:
                move.w  d3,d0
                neg.w   d0
                move.l  d0,(a1)+
                swap    d3
                add.l   d2,d3
                swap    d3
                dbf     d1,loc_3EF0
                rts
; ===========================================================================
Deform_LZ:
                lea     ($FFFFCC00).w,a1
                move.w  #$DF,d1
                move.w  ($FFFFF700).w,d0
                neg.w   d0
                swap    d0
                move.w  ($FFFFF708).w,d0
                move.w  #0,d0
                neg.w   d0

loc_3F1C:
                move.l  d0,(a1)+
                dbf     d1,loc_3F1C
                rts
; ===========================================================================
Deform_MZ:
                move.w  ($FFFFF73A).w,d4
                ext.l   d4
                asl.l   #6,d4
                move.l  d4,d1
                asl.l   #1,d4
                add.l   d1,d4
                moveq   #0,d5
                bsr.w   sub_4298
                move.w  #$200,d0
                move.w  ($FFFFF704).w,d1
                subi.w  #$1C8,d1
                bcs.s   loc_3F50
                move.w  d1,d2
                add.w   d1,d1
                add.w   d2,d1
                asr.w   #2,d1
                add.w   d1,d0

loc_3F50:
                move.w  d0,($FFFFF714).w
                bsr.w   sub_4344
                move.w  ($FFFFF70C).w,($FFFFF618).w
                lea     ($FFFFCC00).w,a1
                move.w  #$DF,d1
                move.w  ($FFFFF700).w,d0
                neg.w   d0
                swap    d0
                move.w  ($FFFFF708).w,d0
                neg.w   d0

loc_3F74:
                move.l  d0,(a1)+
                dbf     d1,loc_3F74
                rts
; ===========================================================================
Deform_SLZ:
                move.w  ($FFFFF73A).w,d4
                ext.l   d4
                asl.l   #7,d4
                move.w  ($FFFFF73C).w,d5
                ext.l   d5
                asl.l   #7,d5
                bsr.w   sub_4302
                move.w  ($FFFFF70C).w,($FFFFF618).w
                bsr.w   sub_3FF6
                lea     ($FFFFA800).w,a2
                move.w  ($FFFFF70C).w,d0
                move.w  d0,d2
                subi.w  #$C0,d0
                andi.w  #$3F0,d0
                lsr.w   #3,d0
                lea     (a2,d0.w),a2
                lea     ($FFFFCC00).w,a1
                move.w  #$E,d1
                move.w  ($FFFFF700).w,d0
                neg.w   d0
                swap    d0
                andi.w  #$F,d2
                add.w   d2,d2
                move.w  (a2)+,d0
                jmp     loc_3FD0(pc,d2.w)
; ===========================================================================

loc_3FCE:
                move.w  (a2)+,d0

loc_3FD0:
                move.l  d0,(a1)+
                move.l  d0,(a1)+
                move.l  d0,(a1)+
                move.l  d0,(a1)+
                move.l  d0,(a1)+
                move.l  d0,(a1)+
                move.l  d0,(a1)+
                move.l  d0,(a1)+
                move.l  d0,(a1)+
                move.l  d0,(a1)+
                move.l  d0,(a1)+
                move.l  d0,(a1)+
                move.l  d0,(a1)+
                move.l  d0,(a1)+
                move.l  d0,(a1)+
                move.l  d0,(a1)+
                dbf     d1,loc_3FCE
                rts

; =============== S U B R O U T I N E =======================================


sub_3FF6:
                lea     ($FFFFA800).w,a1
                move.w  ($FFFFF700).w,d2
                neg.w   d2
                move.w  d2,d0
                asr.w   #3,d0
                sub.w   d2,d0
                ext.l   d0
                asl.l   #4,d0
                divs.w  #$1C,d0
                ext.l   d0
                asl.l   #4,d0
                asl.l   #8,d0
                moveq   #0,d3
                move.w  d2,d3
                move.w  #$1B,d1

loc_401C:
                move.w  d3,(a1)+
                swap    d3
                add.l   d0,d3
                swap    d3
                dbf     d1,loc_401C
                move.w  d2,d0
                asr.w   #3,d0
                move.w  #4,d1

loc_4030:
                move.w  d0,(a1)+
                dbf     d1,loc_4030
                move.w  d2,d0
                asr.w   #2,d0
                move.w  #4,d1

loc_403E:
                move.w  d0,(a1)+
                dbf     d1,loc_403E
                move.w  d2,d0
                asr.w   #1,d0
                move.w  #$1D,d1

loc_404C:
                move.w  d0,(a1)+
                dbf     d1,loc_404C
                rts
; End of function sub_3FF6

; ===========================================================================
Deform_SZ:
                move.w  ($FFFFF73A).w,d4
                ext.l   d4
                asl.l   #6,d4
                move.w  ($FFFFF73C).w,d5
                ext.l   d5
                asl.l   #4,d5
                move.l  d5,d1
                asl.l   #1,d5
                add.l   d1,d5
                bsr.w   sub_4298
                move.w  ($FFFFF70C).w,($FFFFF618).w
                lea     ($FFFFCC00).w,a1
                move.w  #$DF,d1
                move.w  ($FFFFF700).w,d0
                neg.w   d0
                swap    d0
                move.w  ($FFFFF708).w,d0
                neg.w   d0

loc_408A:
                move.l  d0,(a1)+
                dbf     d1,loc_408A
                rts
; ===========================================================================
Deform_CWZ:
                lea     ($FFFFCC00).w,a1
                move.w  #$DF,d1
                move.w  ($FFFFF700).w,d0
                neg.w   d0
                swap    d0
                move.w  ($FFFFF708).w,d0
                move.w  #0,d0
                neg.w   d0

loc_40AC:
                move.l  d0,(a1)+
                dbf     d1,loc_40AC
                rts

; ---------------------------------------------------------------------------
; Subroutine to set horizontal scroll flags
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; sub_40B4:
SetHorizScrollFlags:
                move.w  ($FFFFF700).w,d4
                bsr.s   ScrollHoriz
                move.w  ($FFFFF700).w,d0
                andi.w  #$10,d0
                move.b  ($FFFFF74A).w,d1
                eor.b   d1,d0
                bne.s   locret_40E6
                eori.b  #$10,($FFFFF74A).w
                move.w  ($FFFFF700).w,d0
                sub.w   d4,d0
                bpl.s   loc_40E0
                bset    #2,($FFFFF754).w
                rts
; ---------------------------------------------------------------------------

loc_40E0:
                bset    #3,($FFFFF754).w

locret_40E6:
                rts
; End of function SetHorizScrollFlags


; ---------------------------------------------------------------------------
; Subroutine to scroll the camera horizontally
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; sub_40E8:
ScrollHoriz:
                move.w  ($FFFFD008).w,d0
                sub.w   ($FFFFF700).w,d0
                subi.w  #$90,d0
                bcs.s   loc_412C
                subi.w  #$10,d0
                bcc.s   loc_4102
                clr.w   ($FFFFF73A).w
                rts
; ---------------------------------------------------------------------------

loc_4102:
                cmpi.w  #$10,d0
                bcs.s   loc_410C
                move.w  #$10,d0

loc_410C:
                add.w   ($FFFFF700).w,d0
                cmp.w   ($FFFFF72A).w,d0
                blt.s   loc_411A
                move.w  ($FFFFF72A).w,d0

loc_411A:
                move.w  d0,d1
                sub.w   ($FFFFF700).w,d1
                asl.w   #8,d1
                move.w  d0,($FFFFF700).w
                move.w  d1,($FFFFF73A).w
                rts
; ---------------------------------------------------------------------------

loc_412C:
                add.w   ($FFFFF700).w,d0
                cmp.w   ($FFFFF728).w,d0
                bgt.s   loc_411A
                move.w  ($FFFFF728).w,d0
                bra.s   loc_411A
; End of function ScrollHoriz

; ---------------------------------------------------------------------------
                tst.w   d0
                bpl.s   loc_4146
                move.w  #$FFFE,d0
                bra.s   loc_412C
; ---------------------------------------------------------------------------

loc_4146:
                move.w  #2,d0
                bra.s   loc_4102

; ---------------------------------------------------------------------------
; Subroutine to scroll the camera vertically
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; sub_414C:
ScrollVerti:
                moveq   #0,d1
                move.w  ($FFFFD00C).w,d0
                sub.w   ($FFFFF704).w,d0
                btst    #2,($FFFFD022).w
                beq.s   loc_4160
                subq.w  #5,d0

loc_4160:
                btst    #1,($FFFFD022).w
                beq.s   loc_4180
                addi.w  #$20,d0
                sub.w   ($FFFFF73E).w,d0
                bcs.s   loc_41BE
                subi.w  #$40,d0
                bcc.s   loc_41BE
                tst.b   ($FFFFF75C).w
                bne.s   loc_41D0
                bra.s   loc_418C
; ---------------------------------------------------------------------------

loc_4180:
                sub.w   ($FFFFF73E).w,d0
                bne.s   loc_4192
                tst.b   ($FFFFF75C).w
                bne.s   loc_41D0

loc_418C:
                clr.w   ($FFFFF73C).w
                rts
; ---------------------------------------------------------------------------

loc_4192:
                cmpi.w  #$60,($FFFFF73E).w 
                bne.s   loc_41AC
                move.w  #$600,d1
                cmpi.w  #6,d0
                bgt.s   loc_4200
                cmpi.w  #$FFFA,d0
                blt.s   loc_41E8
                bra.s   loc_41D6
; ---------------------------------------------------------------------------

loc_41AC:
                move.w  #$200,d1
                cmpi.w  #2,d0
                bgt.s   loc_4200
                cmpi.w  #$FFFE,d0
                blt.s   loc_41E8
                bra.s   loc_41D6
; ---------------------------------------------------------------------------

loc_41BE:
                move.w  #$1000,d1
                cmpi.w  #$10,d0
                bgt.s   loc_4200
                cmpi.w  #$FFF0,d0
                blt.s   loc_41E8
                bra.s   loc_41D6
; ---------------------------------------------------------------------------

loc_41D0:
                moveq   #0,d0
                move.b  d0,($FFFFF75C).w

loc_41D6:
                moveq   #0,d1
                move.w  d0,d1
                add.w   ($FFFFF704).w,d1
                tst.w   d0
                bpl.w   loc_420A
                bra.w   loc_41F4
; ---------------------------------------------------------------------------

loc_41E8:
                neg.w   d1
                ext.l   d1
                asl.l   #8,d1
                add.l   ($FFFFF704).w,d1
                swap    d1

loc_41F4:
                cmp.w   ($FFFFF72C).w,d1
                bgt.s   loc_4214
                move.w  ($FFFFF72C).w,d1
                bra.s   loc_4214
; ---------------------------------------------------------------------------

loc_4200:
                ext.l   d1
                asl.l   #8,d1
                add.l   ($FFFFF704).w,d1
                swap    d1

loc_420A:
                cmp.w   ($FFFFF72E).w,d1
                blt.s   loc_4214
                move.w  ($FFFFF72E).w,d1

loc_4214:
                move.w  ($FFFFF704).w,d4
                swap    d1
                move.l  d1,d3
                sub.l   ($FFFFF704).w,d3
                ror.l   #8,d3
                move.w  d3,($FFFFF73C).w
                move.l  d1,($FFFFF704).w
                move.w  ($FFFFF704).w,d0
                andi.w  #$10,d0
                move.b  ($FFFFF74B).w,d1
                eor.b   d1,d0
                bne.s   locret_4256
                eori.b  #$10,($FFFFF74B).w
                move.w  ($FFFFF704).w,d0
                sub.w   d4,d0
                bpl.s   loc_4250
                bset    #0,($FFFFF754).w
                rts
; ---------------------------------------------------------------------------

loc_4250:
                bset    #1,($FFFFF754).w

locret_4256:
                rts
; End of function ScrollVerti

; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR DeformBgLayer

loc_4258:
                move.w  ($FFFFF728).w,d0
                moveq   #1,d1
                sub.w   ($FFFFF700).w,d0
                beq.s   loc_426E
                bpl.s   loc_4268
                moveq   #$FFFFFFFF,d1

loc_4268:
                add.w   d1,($FFFFF700).w
                move.w  d1,d0

loc_426E:
                move.w  d0,($FFFFF73A).w
                bra.w   loc_3E08
; ---------------------------------------------------------------------------

loc_4276:
                move.w  ($FFFFF72C).w,d0
                addi.w  #$20,d0 
                moveq   #1,d1
                sub.w   ($FFFFF704).w,d0
                beq.s   loc_4290
                bpl.s   loc_428A
                moveq   #$FFFFFFFF,d1

loc_428A:
                add.w   d1,($FFFFF704).w
                move.w  d1,d0

loc_4290:
                move.w  d0,($FFFFF73C).w
                bra.w   loc_3E14
; END OF FUNCTION CHUNK FOR DeformBgLayer

; =============== S U B R O U T I N E =======================================


sub_4298:
                move.l  ($FFFFF708).w,d2
                move.l  d2,d0
                add.l   d4,d0
                move.l  d0,($FFFFF708).w
                move.l  d0,d1
                swap    d1
                andi.w  #$10,d1
                move.b  ($FFFFF74C).w,d3
                eor.b   d3,d1
                bne.s   loc_42CC
                eori.b  #$10,($FFFFF74C).w
                sub.l   d2,d0
                bpl.s   loc_42C6
                bset    #2,($FFFFF756).w
                bra.s   loc_42CC
; ---------------------------------------------------------------------------

loc_42C6:
                bset    #3,($FFFFF756).w

loc_42CC:
                move.l  ($FFFFF70C).w,d3
                move.l  d3,d0
                add.l   d5,d0
                move.l  d0,($FFFFF70C).w
                move.l  d0,d1
                swap    d1
                andi.w  #$10,d1
                move.b  ($FFFFF74D).w,d2
                eor.b   d2,d1
                bne.s   locret_4300
                eori.b  #$10,($FFFFF74D).w
                sub.l   d3,d0
                bpl.s   loc_42FA
                bset    #0,($FFFFF756).w
                rts
; ---------------------------------------------------------------------------

loc_42FA:
                bset    #1,($FFFFF756).w

locret_4300:
                rts
; End of function sub_4298


; =============== S U B R O U T I N E =======================================


sub_4302:
                move.l  ($FFFFF708).w,d2
                move.l  d2,d0
                add.l   d4,d0
                move.l  d0,($FFFFF708).w
                move.l  ($FFFFF70C).w,d3
                move.l  d3,d0
                add.l   d5,d0
                move.l  d0,($FFFFF70C).w
                move.l  d0,d1
                swap    d1
                andi.w  #$10,d1
                move.b  ($FFFFF74D).w,d2
                eor.b   d2,d1
                bne.s   locret_4342
                eori.b  #$10,($FFFFF74D).w
                sub.l   d3,d0
                bpl.s   loc_433C
                bset    #0,($FFFFF756).w
                rts
; ---------------------------------------------------------------------------

loc_433C:
                bset    #1,($FFFFF756).w

locret_4342:
                rts
; End of function sub_4302


; =============== S U B R O U T I N E =======================================


sub_4344:
                move.w  ($FFFFF70C).w,d3
                move.w  d0,($FFFFF70C).w
                move.w  d0,d1
                andi.w  #$10,d1
                move.b  ($FFFFF74D).w,d2
                eor.b   d2,d1
                bne.s   locret_4372
                eori.b  #$10,($FFFFF74D).w
                sub.w   d3,d0
                bpl.s   loc_436C
                bset    #0,($FFFFF756).w
                rts
; ---------------------------------------------------------------------------

loc_436C:
                bset    #1,($FFFFF756).w

locret_4372:
                rts
; End of function sub_4344


; =============== S U B R O U T I N E =======================================


sub_4374:
                move.w  ($FFFFF710).w,d2
                move.w  ($FFFFF714).w,d3
                move.w  ($FFFFF73A).w,d0
                ext.l   d0
                asl.l   #7,d0
                add.l   d0,($FFFFF710).w
                move.w  ($FFFFF710).w,d0
                andi.w  #$10,d0
                move.b  ($FFFFF74E).w,d1
                eor.b   d1,d0
                bne.s   locret_43B4
                eori.b  #$10,($FFFFF74E).w
                move.w  ($FFFFF710).w,d0
                sub.w   d2,d0
                bpl.s   loc_43AE
                bset    #2,($FFFFF758).w
                bra.s   locret_43B4
; ---------------------------------------------------------------------------

loc_43AE:
                bset    #3,($FFFFF758).w

locret_43B4:
                rts
; End of function sub_4374

; ---------------------------------------------------------------------------
; Subroutine to display background tiles on the title screen
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; sub_43B6:
LoadTilesAsYouMove_BGOnly:
                lea     ($C00004).l,a5
                lea     ($C00000).l,a6
                lea     ($FFFFF756).w,a2
                lea     ($FFFFF708).w,a3
                lea     ($FFFFA440).w,a4
                move.w  #$6000,d2
                bsr.w   sub_4484
                lea     ($FFFFF758).w,a2
                lea     ($FFFFF710).w,a3
                bra.w   sub_4524
; End of function LoadTilesAsYouMove_BGOnly

; ---------------------------------------------------------------------------
; Subroutine to display correct tiles as you move
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; sub_43E2:
LoadTilesAsYouMove:
                lea     ($C00004).l,a5
                lea     ($C00000).l,a6
                lea     ($FFFFF756).w,a2
                lea     ($FFFFF708).w,a3
                lea     ($FFFFA440).w,a4
                move.w  #$6000,d2
                bsr.w   sub_4484
                lea     ($FFFFF758).w,a2
                lea     ($FFFFF710).w,a3
                bsr.w   sub_4524
                lea     ($FFFFF754).w,a2
                lea     ($FFFFF700).w,a3
                lea     ($FFFFA400).w,a4
                move.w  #$4000,d2
                tst.b   (a2)
                beq.s   locret_4482
                bclr    #0,(a2)
                beq.s   loc_4438
                moveq   #$FFFFFFF0,d4
                moveq   #$FFFFFFF0,d5
                bsr.w   sub_4752
                moveq   #$FFFFFFF0,d4
                moveq   #$FFFFFFF0,d5
                bsr.w   sub_4608

loc_4438:
                bclr    #1,(a2)
                beq.s   loc_4452
                move.w  #$E0,d4
                moveq   #$FFFFFFF0,d5
                bsr.w   sub_4752
                move.w  #$E0,d4
                moveq   #$FFFFFFF0,d5
                bsr.w   sub_4608

loc_4452:
                bclr    #2,(a2)
                beq.s   loc_4468
                moveq   #$FFFFFFF0,d4
                moveq   #$FFFFFFF0,d5
                bsr.w   sub_4752
                moveq   #$FFFFFFF0,d4
                moveq   #$FFFFFFF0,d5
                bsr.w   sub_4634

loc_4468:
                bclr    #3,(a2)
                beq.s   locret_4482
                moveq   #$FFFFFFF0,d4
                move.w  #$140,d5
                bsr.w   sub_4752
                moveq   #$FFFFFFF0,d4
                move.w  #$140,d5
                bsr.w   sub_4634

locret_4482:
                rts
; End of function LoadTilesAsYouMove


; =============== S U B R O U T I N E =======================================


sub_4484:
                tst.b   (a2)
                beq.w   locret_4522
                bclr    #0,(a2)
                beq.s   loc_44A2
                moveq   #$FFFFFFF0,d4
                moveq   #$FFFFFFF0,d5
                bsr.w   sub_4752
                moveq   #$FFFFFFF0,d4
                moveq   #$FFFFFFF0,d5
                moveq   #$1F,d6
                bsr.w   sub_460A

loc_44A2:
                bclr    #1,(a2)
                beq.s   loc_44BE
                move.w  #$E0,d4
                moveq   #$FFFFFFF0,d5
                bsr.w   sub_4752
                move.w  #$E0,d4
                moveq   #$FFFFFFF0,d5
                moveq   #$1F,d6
                bsr.w   sub_460A

loc_44BE:
                bclr    #2,(a2)
                beq.s   loc_44EE
                moveq   #$FFFFFFF0,d4
                moveq   #$FFFFFFF0,d5
                bsr.w   sub_4752
                moveq   #$FFFFFFF0,d4
                moveq   #$FFFFFFF0,d5
                move.w  ($FFFFF7F0).w,d6
                move.w  4(a3),d1
                andi.w  #$FFF0,d1
                sub.w   d1,d6
                blt.s   loc_44EE
                lsr.w   #4,d6
                cmpi.w  #$F,d6
                bcs.s   loc_44EA
                moveq   #$F,d6

loc_44EA:
                bsr.w   sub_4636

loc_44EE:
                bclr    #3,(a2)
                beq.s   locret_4522
                moveq   #$FFFFFFF0,d4
                move.w  #$140,d5
                bsr.w   sub_4752
                moveq   #$FFFFFFF0,d4
                move.w  #$140,d5
                move.w  ($FFFFF7F0).w,d6
                move.w  4(a3),d1
                andi.w  #$FFF0,d1
                sub.w   d1,d6
                blt.s   locret_4522
                lsr.w   #4,d6
                cmpi.w  #$F,d6
                bcs.s   loc_451E
                moveq   #$F,d6

loc_451E:
                bsr.w   sub_4636

locret_4522:
                rts
; End of function sub_4484


; =============== S U B R O U T I N E =======================================


sub_4524:
                tst.b   (a2)
                beq.w   locret_45B0
                bclr    #2,(a2)
                beq.s   loc_456E
                cmpi.w  #$10,(a3)
                bcs.s   loc_456E
                move.w  ($FFFFF7F0).w,d4
                move.w  4(a3),d1
                andi.w  #$FFF0,d1
                sub.w   d1,d4
                move.w  d4,-(sp)
                moveq   #$FFFFFFF0,d5
                bsr.w   sub_4752
                move.w  (sp)+,d4
                moveq   #$FFFFFFF0,d5
                move.w  ($FFFFF7F0).w,d6
                move.w  4(a3),d1
                andi.w  #$FFF0,d1
                sub.w   d1,d6
                blt.s   loc_456E
                lsr.w   #4,d6
                subi.w  #$E,d6
                bcc.s   loc_456E
                neg.w   d6
                bsr.w   sub_4636

loc_456E:
                bclr    #3,(a2)
                beq.s   locret_45B0
                move.w  ($FFFFF7F0).w,d4
                move.w  4(a3),d1
                andi.w  #$FFF0,d1
                sub.w   d1,d4
                move.w  d4,-(sp)
                move.w  #$140,d5
                bsr.w   sub_4752
                move.w  (sp)+,d4
                move.w  #$140,d5
                move.w  ($FFFFF7F0).w,d6
                move.w  4(a3),d1
                andi.w  #$FFF0,d1
                sub.w   d1,d6
                blt.s   locret_45B0
                lsr.w   #4,d6
                subi.w  #$E,d6
                bcc.s   locret_45B0
                neg.w   d6
                bsr.w   sub_4636

locret_45B0:
                rts
; End of function sub_4524

; ---------------------------------------------------------------------------
                dc.b $4A ; J
                dc.b $12
                dc.b $67 ; g
                dc.b $50 ; P
                dc.b   8
                dc.b $92
                dc.b   0
                dc.b   2
                dc.b $67 ; g
                dc.b $20
                dc.b $38 ; 8
                dc.b $3C ; <
                dc.b   0
                dc.b $D0
                dc.b $32 ; 2
                dc.b $2B ; +
                dc.b   0
                dc.b   4
                dc.b   2
                dc.b $41 
                dc.b $FF
                dc.b $F0
                dc.b $98
                dc.b $41 
                dc.b $3F ; ?
                dc.b   4
                dc.b $7A ; z
                dc.b $F0
                dc.b $61 
                dc.b   0
                dc.b   1
                dc.b $9E
                dc.b $38 ; 8
                dc.b $1F
                dc.b $7A ; z
                dc.b $F0
                dc.b $7C ; |
                dc.b   2
                dc.b $61 
                dc.b   0
                dc.b   0
                dc.b $5C ; \
                dc.b   8
                dc.b $92
                dc.b   0
                dc.b   3
                dc.b $67 ; g
                dc.b $24 ; $
                dc.b $38 ; 8
                dc.b $3C ; <
                dc.b   0
                dc.b $D0
                dc.b $32 ; 2
                dc.b $2B ; +
                dc.b   0
                dc.b   4
                dc.b   2
                dc.b $41 
                dc.b $FF
                dc.b $F0
                dc.b $98
                dc.b $41 
                dc.b $3F ; ?
                dc.b   4
                dc.b $3A ; :
                dc.b $3C ; <
                dc.b   1
                dc.b $40 ; @
                dc.b $61 
                dc.b   0
                dc.b   1
                dc.b $76 ; v
                dc.b $38 ; 8
                dc.b $1F
                dc.b $3A ; :
                dc.b $3C ; <
                dc.b   1
                dc.b $40 ; @
                dc.b $7C ; |
                dc.b   2
                dc.b $61 
                dc.b   0
                dc.b   0
                dc.b $32 ; 2
                dc.b $4E ; N
                dc.b $75 ; u

; =============== S U B R O U T I N E =======================================


sub_4608:
                moveq   #$15,d6
; End of function sub_4608


; =============== S U B R O U T I N E =======================================


sub_460A:
                move.l  #$800000,d7
                move.l  d0,d1

loc_4612:
                movem.l d4-d5,-(sp)
                bsr.w   sub_4706
                move.l  d1,d0
                bsr.w   sub_4662
                addq.b  #4,d1
                andi.b  #$7F,d1
                movem.l (sp)+,d4-d5
                addi.w  #$10,d5
                dbf     d6,loc_4612
                rts
; End of function sub_460A


; =============== S U B R O U T I N E =======================================


sub_4634:
                moveq   #$F,d6
; End of function sub_4634


; =============== S U B R O U T I N E =======================================


sub_4636:
                move.l  #$800000,d7
                move.l  d0,d1

loc_463E:
                movem.l d4-d5,-(sp)
                bsr.w   sub_4706
                move.l  d1,d0
                bsr.w   sub_4662
                addi.w  #$100,d1
                andi.w  #$FFF,d1
                movem.l (sp)+,d4-d5
                addi.w  #$10,d4
                dbf     d6,loc_463E
                rts
; End of function sub_4636


; =============== S U B R O U T I N E =======================================


sub_4662:
                or.w    d2,d0
                swap    d0
                btst    #4,(a0)
                bne.s   loc_469E
                btst    #3,(a0)
                bne.s   loc_467E
                move.l  d0,(a5)
                move.l  (a1)+,(a6)
                add.l   d7,d0
                move.l  d0,(a5)
                move.l  (a1)+,(a6)
                rts
; ---------------------------------------------------------------------------

loc_467E:
                move.l  d0,(a5)
                move.l  (a1)+,d4
                eori.l  #$8000800,d4
                swap    d4
                move.l  d4,(a6)
                add.l   d7,d0
                move.l  d0,(a5)
                move.l  (a1)+,d4
                eori.l  #$8000800,d4
                swap    d4
                move.l  d4,(a6)
                rts
; ---------------------------------------------------------------------------

loc_469E:
                btst    #3,(a0)
                bne.s   loc_46C0
                move.l  d0,(a5)
                move.l  (a1)+,d5
                move.l  (a1)+,d4
                eori.l  #$10001000,d4
                move.l  d4,(a6)
                add.l   d7,d0
                move.l  d0,(a5)
                eori.l  #$10001000,d5
                move.l  d5,(a6)
                rts
; ---------------------------------------------------------------------------

loc_46C0:
                move.l  d0,(a5)
                move.l  (a1)+,d5
                move.l  (a1)+,d4
                eori.l  #$18001800,d4
                swap    d4
                move.l  d4,(a6)
                add.l   d7,d0
                move.l  d0,(a5)
                eori.l  #$18001800,d5
                swap    d5
                move.l  d5,(a6)
                rts
; End of function sub_4662

; ---------------------------------------------------------------------------
                dc.b $4E ; N
                dc.b $75 ; u
                dc.b $2A 
                dc.b $80
                dc.b $3A ; :
                dc.b $3C ; <
                dc.b $20
                dc.b   0
                dc.b $38 ; 8
                dc.b $19
                dc.b $D8
                dc.b $45 ; E
                dc.b $3C ; <
                dc.b $84
                dc.b $38 ; 8
                dc.b $19
                dc.b $D8
                dc.b $45 ; E
                dc.b $3C ; <
                dc.b $84
                dc.b $D0
                dc.b $87
                dc.b $2A 
                dc.b $80
                dc.b $38 ; 8
                dc.b $19
                dc.b $D8
                dc.b $45 ; E
                dc.b $3C ; <
                dc.b $84
                dc.b $38 ; 8
                dc.b $19
                dc.b $D8
                dc.b $45 ; E
                dc.b $3C ; <
                dc.b $84
                dc.b $4E ; N
                dc.b $75 ; u

; =============== S U B R O U T I N E =======================================


sub_4706:
                lea     ($FFFFB000).w,a1
                add.w   4(a3),d4
                add.w   (a3),d5
                move.w  d4,d3
                lsr.w   #1,d3
                andi.w  #$380,d3
                lsr.w   #3,d5
                move.w  d5,d0
                lsr.w   #5,d0
                andi.w  #$7F,d0
                add.w   d3,d0
                moveq   #$FFFFFFFF,d3
                move.b  (a4,d0.w),d3
                andi.b  #$7F,d3
                beq.s   locret_4750
                subq.b  #1,d3
                ext.w   d3
                ror.w   #7,d3
                add.w   d4,d4
                andi.w  #$1E0,d4
                andi.w  #$1E,d5
                add.w   d4,d3
                add.w   d5,d3
                movea.l d3,a0
                move.w  (a0),d3
                andi.w  #$3FF,d3
                lsl.w   #3,d3
                adda.w  d3,a1

locret_4750:
                rts
; End of function sub_4706


; =============== S U B R O U T I N E =======================================


sub_4752:
                add.w   4(a3),d4
                add.w   (a3),d5
                andi.w  #$F0,d4
                andi.w  #$1F0,d5
                lsl.w   #4,d4
                lsr.w   #2,d5
                add.w   d5,d4
                moveq   #3,d0
                swap    d0
                move.w  d4,d0
                rts
; End of function sub_4752

; ---------------------------------------------------------------------------
                dc.b $D8
                dc.b $6B ; k
                dc.b   0
                dc.b   4
                dc.b $DA
                dc.b $53 ; S
                dc.b   2
                dc.b $44 ; D
                dc.b   0
                dc.b $F0
                dc.b   2
                dc.b $45 ; E
                dc.b   1
                dc.b $F0
                dc.b $E9
                dc.b $4C ; L
                dc.b $E4
                dc.b $4D ; M
                dc.b $D8
                dc.b $45 ; E
                dc.b $70 ; p
                dc.b   2
                dc.b $48 ; H
                dc.b $40 ; @
                dc.b $30 ; 0
                dc.b   4
                dc.b $4E ; N
                dc.b $75 ; u

; ===========================================================================
; Loads the background in its initial state into VRAM (plane B).
; Especially important for levels that never re-load the background dynamically
; sub_478A: LoadTilesFromStart:
DrawInitialBG:
                lea     ($C00004).l,a5
                lea     ($C00000).l,a6
                lea     ($FFFFF700).w,a3
                lea     ($FFFFA400).w,a4
                move.w  #$4000,d2
                bsr.s   DrawInitialBG2
                lea     ($FFFFF708).w,a3
                lea     ($FFFFA440).w,a4
                move.w  #$6000,d2

; sub_47B0:
DrawInitialBG2:
                moveq   #$FFFFFFF0,d4
                moveq   #$F,d6

loc_47B4:
                movem.l d4-d6,-(sp)
                moveq   #0,d5
                move.w  d4,d1
                bsr.w   sub_4752
                move.w  d1,d4
                moveq   #0,d5
                moveq   #$1F,d6
                bsr.w   sub_460A
                movem.l (sp)+,d4-d6
                addi.w  #$10,d4
                dbf     d6,loc_47B4
                rts
; End of function DrawInitialBG

; ---------------------------------------------------------------------------
                dc.b $47 ; G
                dc.b $F8
                dc.b $F7
                dc.b $18
                dc.b $34 ; 4
                dc.b $3C ; <
                dc.b $60 
                dc.b   0
                dc.b $38 ; 8
                dc.b $3C ; <
                dc.b   0
                dc.b $B0
                dc.b $7C ; |
                dc.b   2
                dc.b $48 ; H
                dc.b $E7
                dc.b  $E
                dc.b   0
                dc.b $7A ; z
                dc.b   0
                dc.b $32 ; 2
                dc.b   4
                dc.b $61 
                dc.b   0
                dc.b $FF
                dc.b $7E ; ~
                dc.b $38 ; 8
                dc.b   1
                dc.b $7A ; z
                dc.b   0
                dc.b $7C ; |
                dc.b $1F
                dc.b $61 
                dc.b   0
                dc.b $FE
                dc.b $10
                dc.b $4C ; L
                dc.b $DF
                dc.b   0
                dc.b $70 ; p
                dc.b   6
                dc.b $44 ; D
                dc.b   0
                dc.b $10
                dc.b $51 ; Q
                dc.b $CE
                dc.b $FF
                dc.b $E0
                dc.b $4E ; N
                dc.b $75 ; u

; ===========================================================================
; >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
; loadZoneBlockMaps

; Loads block and bigblock mappings for the current Zone.
; sub_480A:
loadZoneBlockMaps:
                moveq   #0,d0
                move.b  ($FFFFFE10).w,d0
                lsl.w   #4,d0
                lea     (MainLoadBlocks).l,a2
                lea     (a2,d0.w),a2
                move.l  a2,-(sp)
                addq.l  #4,a2
                movea.l (a2)+,a0
                lea     ($FFFFB000).w,a4
                move.w  #$5FF,d0

loc_482A:
                move.l  (a0)+,(a4)+
                dbf     d0,loc_482A
                movea.l (a2)+,a0
                lea     ($FF0000).l,a1
                bsr.w   sub_1692
                bsr.w   LevelLayoutLoad
                move.w  (a2)+,d0
                move.w  (a2),d0
                andi.w  #$FF,d0
                bsr.w   PalLoad1
                movea.l (sp)+,a2
                addq.w  #4,a2
                moveq   #0,d0
                move.b  (a2),d0
                beq.s   locret_485A
                bsr.w   LoadPLCs

locret_485A:
                rts
; End of function loadZoneBlockMaps

; ---------------------------------------------------------------------------
                dc.b $70 ; p
                dc.b   0
                dc.b $12
                dc.b $38 ; 8
                dc.b $FE
                dc.b $12
                dc.b  $C
                dc.b   1
                dc.b   0
                dc.b   2
                dc.b $65 ; e
                dc.b  $E
                dc.b $10
                dc.b   1
                dc.b $53 ; S
                dc.b   0
                dc.b  $C
                dc.b   0
                dc.b   0
                dc.b   5
                dc.b $65 ; e
                dc.b   4
                dc.b $10
                dc.b $3C ; <
                dc.b   0
                dc.b   4
                dc.b $4D ; M
                dc.b $F9
                dc.b   0
                dc.b $C0
                dc.b   0
                dc.b   0
                dc.b $23 ; #
                dc.b $FC
                dc.b $6C ; l
                dc.b $BE
                dc.b   0
                dc.b   2
                dc.b   0
                dc.b $C0
                dc.b   0
                dc.b   4
                dc.b $24 ; $
                dc.b $3C ; <
                dc.b $85
                dc.b $79 ; y
                dc.b $85
                dc.b $7A ; z
                dc.b $61 
                dc.b $10
                dc.b $23 ; #
                dc.b $FC
                dc.b $6D ; m
                dc.b $3E ; >
                dc.b   0
                dc.b   2
                dc.b   0
                dc.b $C0
                dc.b   0
                dc.b   4
                dc.b $24 ; $
                dc.b $3C ; <
                dc.b $85
                dc.b $7B ; {
                dc.b $85
                dc.b $7C ; |
                dc.b $76 ; v
                dc.b   0
                dc.b $72 ; r
                dc.b   3
                dc.b $92
                dc.b $40 ; @
                dc.b $65 ; e
                dc.b   6
                dc.b $2C ; ,
                dc.b $83
                dc.b $51 ; Q
                dc.b $C9
                dc.b $FF
                dc.b $FC
                dc.b $32 ; 2
                dc.b   0
                dc.b $53 ; S
                dc.b $41 
                dc.b $65 ; e
                dc.b   6
                dc.b $2C ; ,
                dc.b $82
                dc.b $51 ; Q
                dc.b $C9
                dc.b $FF
                dc.b $FC
                dc.b $4E ; N
                dc.b $75 ; u

; =============== S U B R O U T I N E =======================================


LevelLayoutLoad:
                lea     ($FFFFA400).w,a3
                move.w  #$1FF,d1
                moveq   #0,d0

loc_48C4:
                move.l  d0,(a3)+
                dbf     d1,loc_48C4
                lea     ($FFFFA400).w,a3
                moveq   #0,d1
                bsr.w   LevelLayoutLoad2
                lea     ($FFFFA440).w,a3
                moveq   #2,d1
; End of function LevelLayoutLoad


; =============== S U B R O U T I N E =======================================


LevelLayoutLoad2:
                move.w  ($FFFFFE10).w,d0
                lsl.b   #6,d0
                lsr.w   #5,d0
                move.w  d0,d2
                add.w   d0,d0
                add.w   d2,d0
                add.w   d1,d0
                lea     (Level_Index).l,a1
                move.w  (a1,d0.w),d0
                lea     (a1,d0.w),a1
                moveq   #0,d1
                move.w  d1,d2
                move.b  (a1)+,d1
                move.b  (a1)+,d2

LevLoad_NumRows:
                move.w  d1,d0
                movea.l a3,a0

LevLoad_Row:
                move.b  (a1)+,(a0)+
                dbf     d0,LevLoad_Row
                lea     $80(a3),a3
                dbf     d2,LevLoad_NumRows
                rts
; End of function LevelLayoutLoad2


; =============== S U B R O U T I N E =======================================


sub_4914:
                moveq   #0,d0
                move.b  ($FFFFFE10).w,d0
                add.w   d0,d0
                move.w  index_495e(pc,d0.w),d0
                jsr     index_495e(pc,d0.w)
                tst.w   ($FFFFFE08).w
                beq.s   loc_4936
                move.w  #0,($FFFFF72C).w
                move.w  #$720,($FFFFF726).w

loc_4936:
                moveq   #2,d1
                move.w  ($FFFFF726).w,d0
                sub.w   ($FFFFF72E).w,d0
                beq.s   locret_495C
                bcc.s   loc_4952
                move.w  ($FFFFF704).w,($FFFFF72E).w
                andi.w  #$FFFE,($FFFFF72E).w
                neg.w   d1

loc_4952:
                add.w   d1,($FFFFF72E).w
                move.b  #1,($FFFFF75C).w

locret_495C:
                rts
; End of function sub_4914

; ---------------------------------------------------------------------------
index_495e:     dc.w entry_496c-index_495e
                dc.w entry_496a-index_495e
                dc.w entry_4a80-index_495e
                dc.w entry_4b6a-index_495e
                dc.w entry_496a-index_495e
                dc.w entry_496a-index_495e
; ---------------------------------------------------------------------------

entry_496a:
                rts
; ---------------------------------------------------------------------------

entry_496c:
                moveq   #0,d0
                move.b  ($FFFFFE11).w,d0
                add.w   d0,d0
                move.w  index_497c(pc,d0.w),d0
                jmp     index_497c(pc,d0.w)
; ---------------------------------------------------------------------------
index_497c:     dc.w entry_4982-*
                dc.w entry_4998-index_497c
                dc.w entry_49ca-index_497c
; ---------------------------------------------------------------------------

entry_4982:
                move.w  #$300,($FFFFF726).w
                cmpi.w  #$1780,($FFFFF700).w
                bcs.s   locret_4996
                move.w  #$400,($FFFFF726).w

locret_4996:
                rts
; ---------------------------------------------------------------------------

entry_4998:
                move.w  #$300,($FFFFF726).w
                cmpi.w  #$ED0,($FFFFF700).w
                bcs.s   locret_49C8
                move.w  #$200,($FFFFF726).w
                cmpi.w  #$1600,($FFFFF700).w
                bcs.s   locret_49C8
                move.w  #$400,($FFFFF726).w
                cmpi.w  #$1D60,($FFFFF700).w
                bcs.s   locret_49C8
                move.w  #$300,($FFFFF726).w

locret_49C8:
                rts
; ---------------------------------------------------------------------------

entry_49ca:
                moveq   #0,d0
                move.b  ($FFFFF742).w,d0
                move.w  index_49d8(pc,d0.w),d0
                jmp     index_49d8(pc,d0.w)
; ---------------------------------------------------------------------------
index_49d8:     dc.w entry_49DE-*
                dc.w entry_4a32-index_49d8
                dc.w entry_4a78-index_49d8
; ---------------------------------------------------------------------------

entry_49DE:
                move.w  #$300,($FFFFF726).w
                cmpi.w  #$380,($FFFFF700).w
                bcs.s   locret_4A24
                move.w  #$310,($FFFFF726).w
                cmpi.w  #$960,($FFFFF700).w
                bcs.s   locret_4A24
                cmpi.w  #$280,($FFFFF704).w
                bcs.s   loc_4A26
                move.w  #$400,($FFFFF726).w
                cmpi.w  #$1380,($FFFFF700).w
                bcc.s   loc_4A1C
                move.w  #$4C0,($FFFFF726).w
                move.w  #$4C0,($FFFFF72E).w

loc_4A1C:
                cmpi.w  #$1700,($FFFFF700).w
                bcc.s   loc_4A26

locret_4A24:
                rts
; ---------------------------------------------------------------------------

loc_4A26:
                move.w  #$300,($FFFFF726).w
                addq.b  #2,($FFFFF742).w
                rts
; ---------------------------------------------------------------------------

entry_4a32:
                cmpi.w  #$960,($FFFFF700).w
                bcc.s   loc_4A3E
                subq.b  #2,($FFFFF742).w

loc_4A3E:
                cmpi.w  #$2960,($FFFFF700).w
                bcs.s   locret_4A76
                bsr.w   FindFreeObjectSlot
                bne.s   loc_4A5E
                move.b  #$3D,0(a1) 
                move.w  #$2A60,8(a1)
                move.w  #$280,$C(a1)

loc_4A5E:
                move.w  #$8C,d0
                bsr.w   PlaySound
                move.b  #1,($FFFFF7AA).w
                addq.b  #2,($FFFFF742).w
                moveq   #$11,d0
                bra.w   LoadPLCs
; ---------------------------------------------------------------------------

locret_4A76:
                rts
; ---------------------------------------------------------------------------

entry_4a78:
                move.w  ($FFFFF700).w,($FFFFF728).w
                rts
; ---------------------------------------------------------------------------

entry_4a80:
                moveq   #0,d0
                move.b  ($FFFFFE11).w,d0
                add.w   d0,d0
                move.w  index_4a90(pc,d0.w),d0
                jmp     index_4a90(pc,d0.w)
; ---------------------------------------------------------------------------
index_4a90:     dc.w entry_4A96-*
                dc.w entry_4b52-index_4a90
                dc.w entry_4b68-index_4a90
; ---------------------------------------------------------------------------

entry_4A96:
                moveq   #0,d0
                move.b  ($FFFFF742).w,d0
                move.w  index_4aa4(pc,d0.w),d0
                jmp     index_4aa4(pc,d0.w)
; ---------------------------------------------------------------------------
index_4aa4:     dc.w entry_4AAC-*
                dc.w entry_4adc-index_4aa4
                dc.w entry_4b20-index_4aa4
                dc.w entry_4b42-index_4aa4
; ---------------------------------------------------------------------------

entry_4AAC:
                move.w  #$1D0,($FFFFF726).w
                cmpi.w  #$700,($FFFFF700).w
                bcs.s   locret_4ADA
                move.w  #$220,($FFFFF726).w
                cmpi.w  #$D00,($FFFFF700).w
                bcs.s   locret_4ADA
                move.w  #$340,($FFFFF726).w
                cmpi.w  #$340,($FFFFF704).w
                bcs.s   locret_4ADA
                addq.b  #2,($FFFFF742).w

locret_4ADA:
                rts
; ---------------------------------------------------------------------------

entry_4adc:
                cmpi.w  #$340,($FFFFF704).w
                bcc.s   loc_4AEA
                subq.b  #2,($FFFFF742).w
                rts
; ---------------------------------------------------------------------------

loc_4AEA:
                move.w  #0,($FFFFF72C).w
                cmpi.w  #$E00,($FFFFF700).w
                bcc.s   locret_4B1E
                move.w  #$340,($FFFFF72C).w
                move.w  #$340,($FFFFF726).w
                cmpi.w  #$A90,($FFFFF700).w
                bcc.s   locret_4B1E
                move.w  #$500,($FFFFF726).w
                cmpi.w  #$370,($FFFFF704).w
                bcs.s   locret_4B1E
                addq.b  #2,($FFFFF742).w

locret_4B1E:
                rts
; ---------------------------------------------------------------------------

entry_4b20:
                cmpi.w  #$370,($FFFFF704).w
                bcc.s   loc_4B2E
                subq.b  #2,($FFFFF742).w
                rts
; ---------------------------------------------------------------------------

loc_4B2E:
                cmpi.w  #$500,($FFFFF704).w
                bcs.s   locret_4B40
                move.w  #$500,($FFFFF72C).w
                addq.b  #2,($FFFFF742).w

locret_4B40:
                rts
; ---------------------------------------------------------------------------

entry_4b42:
                cmpi.w  #$E70,($FFFFF700).w
                bcs.s   locret_4B50
                move.w  #0,($FFFFF72C).w

locret_4B50:
                rts
; ---------------------------------------------------------------------------

entry_4b52:
                move.w  #$520,($FFFFF726).w
                cmpi.w  #$1500,($FFFFF700).w
                bcs.s   locret_4B66
                move.w  #$540,($FFFFF726).w

locret_4B66:
                rts
; ---------------------------------------------------------------------------

entry_4b68:
                rts
; ---------------------------------------------------------------------------

entry_4b6a:
                moveq   #0,d0
                move.b  ($FFFFFE11).w,d0
                add.w   d0,d0
                move.w  index_4b7a(pc,d0.w),d0
                jmp     index_4b7a(pc,d0.w)
; ---------------------------------------------------------------------------
index_4b7a:     dc.w entry_4B80-index_4b7a
                dc.w entry_4B80-index_4b7a
                dc.w entry_4B80-index_4b7a
; ---------------------------------------------------------------------------

entry_4B80:
                rts

; =============== S U B R O U T I N E =======================================


Obj02:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  Obj02_Index(pc,d0.w),d1
                jmp     Obj02_Index(pc,d1.w)
; End of function Obj02

; ---------------------------------------------------------------------------
Obj02_Index:    dc.w Obj02_Init-*
                dc.w loc_4BC8-Obj02_Index
                dc.w Obj02_Delete-Obj02_Index
                dc.w Obj02_Delete-Obj02_Index
; ---------------------------------------------------------------------------

Obj02_Init:
                addq.b  #2,$24(a0)
                move.w  #$200,8(a0)
                move.w  #$60,$C(a0) 
                move.l  #Map_Obj02,4(a0)
                move.w  #$64F0,2(a0)
                move.b  #4,1(a0)
                move.b  #1,$21(a0)
                move.b  #3,$19(a0)

loc_4BC8:
                bsr.w   DisplaySprite
                subq.b  #1,$1E(a0)
                bpl.s   Obj02_Return
                move.b  #$10,$1E(a0)
                move.b  $1A(a0),d0
                addq.b  #1,d0
                cmpi.b  #2,d0
                bcs.s   loc_4BE6
                moveq   #0,d0

loc_4BE6:
                move.b  d0,$1A(a0)

Obj02_Return:
                rts

; =============== S U B R O U T I N E =======================================


Obj02_Delete:
                bsr.w   DeleteObject
                rts
; End of function Obj02_Delete

; ---------------------------------------------------------------------------
Map_Obj02:      include "Map/Obj02.asm"
; ---------------------------------------------------------------------------

Obj03:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  Obj03_Index(pc,d0.w),d1
                jmp     Obj03_Index(pc,d1.w)
; ---------------------------------------------------------------------------
Obj03_Index:    dc.w Obj03_Init-*
                dc.w loc_4CA6-Obj03_Index
                dc.w Obj03_Delete-Obj03_Index
                dc.w Obj03_Delete-Obj03_Index
; ---------------------------------------------------------------------------

Obj03_Init:
                addq.b  #2,$24(a0)
                move.w  #$100,8(a0)
                move.w  #$40,$C(a0)
                move.l  #Map_Obj02,4(a0)
                move.w  #$64F0,2(a0)
                move.b  #4,1(a0)
                move.b  #1,$21(a0)
                move.b  #3,$1A(a0)
                move.b  #5,$19(a0)

loc_4CA6:
                bsr.w   DisplaySprite
                subq.b  #1,$1E(a0)
                bpl.s   Obj03_Return
                move.b  #$10,$1E(a0)

Obj03_Return:
                rts
; ---------------------------------------------------------------------------

Obj03_Delete:
                bsr.w   DeleteObject
                rts

; =============== S U B R O U T I N E =======================================


Obj04:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  Obj04_Index(pc,d0.w),d1
                jmp     Obj04_Index(pc,d1.w)
; End of function Obj04

; ---------------------------------------------------------------------------
Obj04_Index:    dc.w code_4cd4-Obj04_Index
                dc.w code_4d04-Obj04_Index
                dc.w code_4d28-Obj04_Index
                dc.w code_4d28-Obj04_Index
; ---------------------------------------------------------------------------

code_4cd4:
                addq.b  #2,$24(a0)
                move.w  #$40,$C(a0) 
                move.l  #Map_Obj02,4(a0)
                move.w  #$2680,2(a0)
                move.b  #4,1(a0)
                move.b  #1,$21(a0)
                move.b  #2,$1A(a0)
                move.b  #3,$19(a0)

code_4d04:
                bsr.w   DisplaySprite
                subq.b  #1,$1E(a0)
                bpl.s   locret_4D26
                move.b  #$14,$1E(a0)
                move.b  $1A(a0),d0
                addq.b  #1,d0
                cmpi.b  #4,d0
                bcs.s   loc_4D22
                moveq   #2,d0

loc_4D22:
                move.b  d0,$1A(a0)

locret_4D26:
                rts
; ---------------------------------------------------------------------------

code_4d28:
                bsr.w   DeleteObject
                rts

; =============== S U B R O U T I N E =======================================


Obj05:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  Obj05_Index(pc,d0.w),d1
                jmp     Obj05_Index(pc,d1.w)
; End of function Obj05

; ---------------------------------------------------------------------------
Obj05_Index:    dc.w code_4D44-Obj05_Index
                dc.w code_4d62-Obj05_Index
                dc.w code_4d68-Obj05_Index
                dc.w code_4d68-Obj05_Index
; ---------------------------------------------------------------------------

code_4D44:
                addq.b  #2,$24(a0)
                move.l  #Map_Obj05,4(a0)
                move.w  #$84F0,2(a0)
                move.b  #0,1(a0)
                move.b  #7,$19(a0)

code_4d62:
                bsr.w   DisplaySprite
                rts
; ---------------------------------------------------------------------------

code_4d68:
                bsr.w   DeleteObject
                rts
; ---------------------------------------------------------------------------
Map_Obj05:      include "Map/Obj05.asm"
; ---------------------------------------------------------------------------

Obj06:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  Obj06_Index(pc,d0.w),d1
                jmp     Obj06_Index(pc,d1.w)
; ---------------------------------------------------------------------------
Obj06_Index:    dc.w code_4E04-Obj06_Index
                dc.w code_4e28-Obj06_Index
                dc.w code_4e2e-Obj06_Index
                dc.w code_4e2e-Obj06_Index
; ---------------------------------------------------------------------------

code_4E04:
                addq.b  #2,$24(a0)
                move.w  #$A0,$A(a0)
                move.l  #Map_Obj05,4(a0)
                move.w  #$8470,2(a0)
                move.b  #0,1(a0)
                move.b  #7,$19(a0)

code_4e28:
                bsr.w   DisplaySprite
                rts
; ---------------------------------------------------------------------------

code_4e2e:
                bsr.w   DeleteObject
                rts
; Empty object

; =============== S U B R O U T I N E =======================================


Obj07:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  Obj07_Index(pc,d0.w),d1
                jmp     Obj07_Index(pc,d1.w)
; End of function Obj07

; ---------------------------------------------------------------------------
Obj07_Index:    dc.w code_4E4A-Obj07_Index
                dc.w code_4e4e-Obj07_Index
                dc.w code_4e50-Obj07_Index
                dc.w code_4e50-Obj07_Index
; ---------------------------------------------------------------------------

code_4E4A:
                addq.b  #2,$24(a0)

code_4e4e:
                rts
; ---------------------------------------------------------------------------

code_4e50:
                bsr.w   DeleteObject
                rts

; =============== S U B R O U T I N E =======================================


ObjGHZBridge:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  ObjGHZBridge_Index(pc,d0.w),d1
                jmp     ObjGHZBridge_Index(pc,d1.w)
; End of function ObjGHZBridge

; ---------------------------------------------------------------------------
ObjGHZBridge_Index:dc.w ObjGHZBridge_Main-ObjGHZBridge_Index
                dc.w ObjGHZBridge_Action-ObjGHZBridge_Index
                dc.w ObjGHZBridge_Action2-ObjGHZBridge_Index
                dc.w ObjGHZBridge_Delete2-ObjGHZBridge_Index
                dc.w ObjGHZBridge_Delete2-ObjGHZBridge_Index
                dc.w ObjGHZBridge_Display2-ObjGHZBridge_Index
; ---------------------------------------------------------------------------

ObjGHZBridge_Main:
                addq.b  #2,$24(a0)
                move.l  #Map_Bridge,4(a0)
                move.w  #$438E,2(a0)
                move.b  #4,1(a0)
                move.b  #3,$19(a0)
                move.b  #$80,$18(a0)
                move.w  $C(a0),d2
                move.w  8(a0),d3
                move.b  0(a0),d4
                lea     $28(a0),a2
                moveq   #0,d1
                move.b  (a2),d1
                move.b  #0,(a2)+
                move.w  d1,d0
                lsr.w   #1,d0
                lsl.w   #4,d0
                sub.w   d0,d3
                subq.b  #2,d1
                bcs.s   ObjGHZBridge_Action

loc_4EB8:
                bsr.w   FindFreeObjectSlot
                bne.s   ObjGHZBridge_Action
                addq.b  #1,$28(a0)
                cmp.w   8(a0),d3
                bne.s   loc_4EE6
                addi.w  #$10,d3
                move.w  d2,$C(a0)
                move.w  d2,$3C(a0)
                move.w  a0,d5
                subi.w  #$D000,d5
                lsr.w   #6,d5
                andi.w  #$7F,d5
                move.b  d5,(a2)+
                addq.b  #1,$28(a0)

loc_4EE6:
                move.w  a1,d5
                subi.w  #$D000,d5
                lsr.w   #6,d5
                andi.w  #$7F,d5
                move.b  d5,(a2)+
                move.b  #$A,$24(a1)
                move.b  d4,0(a1)
                move.w  d2,$C(a1)
                move.w  d2,$3C(a1)
                move.w  d3,8(a1)
                move.l  #Map_Bridge,4(a1)
                move.w  #$438E,2(a1)
                move.b  #4,1(a1)
                move.b  #3,$19(a1)
                move.b  #8,$18(a1)
                addi.w  #$10,d3
                dbf     d1,loc_4EB8

ObjGHZBridge_Action:
                bsr.s   sub_4F4A
                tst.b   $3E(a0)
                beq.s   loc_4F42
                subq.b  #4,$3E(a0)
                bsr.w   ObjGHZBridge_Bend

loc_4F42:
                bsr.w   DisplaySprite
                bra.w   ObjGHZBridge_ChkDel

; =============== S U B R O U T I N E =======================================


sub_4F4A:
                moveq   #0,d1
                move.b  $28(a0),d1
                lsl.w   #3,d1
                move.w  d1,d2
                addq.w  #8,d1
                add.w   d2,d2
                lea     ($FFFFD000).w,a1
                tst.w   $12(a1)
                bmi.w   locret_5048
                move.w  8(a1),d0
                sub.w   8(a0),d0
                add.w   d1,d0
                bmi.w   locret_5048
                cmp.w   d2,d0
                bcc.w   locret_5048
                bra.s   loc_4F9C
; ---------------------------------------------------------------------------

loc_4F7A:
                lea     ($FFFFD000).w,a1
                tst.w   $12(a1)
                bmi.w   locret_5048
                move.w  8(a1),d0
                sub.w   8(a0),d0
                add.w   d1,d0
                bmi.w   locret_5048
                add.w   d1,d1
                cmp.w   d1,d0
                bcc.w   locret_5048

loc_4F9C:
                move.w  $C(a0),d0
                subq.w  #8,d0

loc_4FA2:
                move.w  $C(a1),d2
                move.b  $16(a1),d1
                ext.w   d1
                add.w   d2,d1
                addq.w  #4,d1
                sub.w   d1,d0
                bhi.w   locret_5048
                cmpi.w  #$FFF0,d0
                bcs.w   locret_5048
                cmpi.b  #6,$24(a1)
                bcc.w   locret_5048
                add.w   d0,d2
                addq.w  #3,d2
                move.w  d2,$C(a1)
                addq.b  #2,$24(a0)
; End of function sub_4F4A


; =============== S U B R O U T I N E =======================================


sub_4FD4:
                btst    #3,$22(a1)
                beq.s   loc_4FFC
                moveq   #0,d0
                move.b  $3D(a1),d0
                lsl.w   #6,d0
                addi.l  #$FFD000,d0
                movea.l d0,a2
                cmpi.b  #4,$24(a2)
                bne.s   loc_4FFC
                subq.b  #2,$24(a2)
                clr.b   $25(a2)

loc_4FFC:
                move.w  a0,d0
                subi.w  #$D000,d0
                lsr.w   #6,d0
                andi.w  #$7F,d0
                move.b  d0,$3D(a1)
                move.b  #0,$26(a1)
                move.w  #0,$12(a1)
                move.w  $10(a1),d0
                asr.w   #2,d0
                sub.w   d0,$10(a1)
                move.w  $10(a1),$14(a1)
                btst    #1,$22(a1)
                beq.s   loc_503C
                move.l  a0,-(sp)
                movea.l a1,a0
                jsr     (sub_F218).l
                movea.l (sp)+,a0

loc_503C:
                bset    #3,$22(a1)
                bset    #3,$22(a0)

locret_5048:
                rts
; End of function sub_4FD4


; =============== S U B R O U T I N E =======================================


sub_504A:
                lea     ($FFFFD000).w,a1
                tst.w   $12(a1)
                bmi.w   locret_5048
                move.w  8(a1),d0
                sub.w   8(a0),d0
                add.w   d1,d0
                bmi.s   locret_5048
                add.w   d1,d1
                cmp.w   d1,d0
                bcc.s   locret_5048
                btst    #0,1(a0)
                beq.s   loc_5074
                not.w   d0
                add.w   d1,d0

loc_5074:
                lsr.w   #1,d0
                moveq   #0,d3
                move.b  (a2,d0.w),d3
                move.w  $C(a0),d0
                sub.w   d3,d0
                bra.w   loc_4FA2
; End of function sub_504A


; =============== S U B R O U T I N E =======================================


sub_5086:
                lea     ($FFFFD000).w,a1
                tst.w   $12(a1)
                bmi.w   locret_5048
                move.w  8(a1),d0
                sub.w   8(a0),d0
                add.w   d1,d0
                bmi.w   locret_5048
                add.w   d1,d1
                cmp.w   d1,d0
                bcc.w   locret_5048
                move.w  $C(a0),d0
                sub.w   d3,d0
                bra.w   loc_4FA2
; End of function sub_5086

; ---------------------------------------------------------------------------

ObjGHZBridge_Action2:
                bsr.s   ObjGHZBridge_WalkOff
                bsr.w   DisplaySprite
                bra.w   ObjGHZBridge_ChkDel

; =============== S U B R O U T I N E =======================================


ObjGHZBridge_WalkOff:
                moveq   #0,d1
                move.b  $28(a0),d1
                lsl.w   #3,d1
                move.w  d1,d2
                addq.w  #8,d1
                bsr.s   ExitPlatform2
                bcc.s   locret_50E8
                lsr.w   #4,d0
                move.b  d0,$3F(a0)
                move.b  $3E(a0),d0
                cmpi.b  #$40,d0 
                beq.s   loc_50E0
                addq.b  #4,$3E(a0)

loc_50E0:
                bsr.w   ObjGHZBridge_Bend
                bsr.w   ObjGHZBridge_MoveSonic

locret_50E8:
                rts
; End of function ObjGHZBridge_WalkOff


; =============== S U B R O U T I N E =======================================


ExitPlatform:
                move.w  d1,d2
; End of function ExitPlatform


; =============== S U B R O U T I N E =======================================


ExitPlatform2:
                add.w   d2,d2
                lea     ($FFFFD000).w,a1
                btst    #1,$22(a1)
                bne.s   loc_510A
                move.w  8(a1),d0
                sub.w   8(a0),d0
                add.w   d1,d0
                bmi.s   loc_510A
                cmp.w   d2,d0
                bcs.s   locret_511C

loc_510A:
                bclr    #3,$22(a1)
                move.b  #2,$24(a0)
                bclr    #3,$22(a0)

locret_511C:
                rts
; End of function ExitPlatform2


; =============== S U B R O U T I N E =======================================


ObjGHZBridge_MoveSonic:
                moveq   #0,d0
                move.b  $3F(a0),d0
                move.b  $29(a0,d0.w),d0
                lsl.w   #6,d0
                addi.l  #$FFD000,d0
                movea.l d0,a2
                lea     ($FFFFD000).w,a1
                move.w  $C(a2),d0
                subq.w  #8,d0
                moveq   #0,d1
                move.b  $16(a1),d1
                sub.w   d1,d0
                move.w  d0,$C(a1)
                rts
; End of function ObjGHZBridge_MoveSonic


; =============== S U B R O U T I N E =======================================


ObjGHZBridge_Bend:
                move.b  $3E(a0),d0
                bsr.w   CalcSine
                move.w  d0,d4
                lea     (ObjGHZBridge_BendData2).l,a4
                moveq   #0,d0
                move.b  $28(a0),d0
                lsl.w   #4,d0
                moveq   #0,d3
                move.b  $3F(a0),d3
                move.w  d3,d2
                add.w   d0,d3
                moveq   #0,d5
                lea     (ObjGHZBridge_BendData).l,a5
                move.b  (a5,d3.w),d5
                andi.w  #$F,d3
                lsl.w   #4,d3
                lea     (a4,d3.w),a3
                lea     $29(a0),a2

loc_5186:
                moveq   #0,d0
                move.b  (a2)+,d0
                lsl.w   #6,d0
                addi.l  #$FFD000,d0
                movea.l d0,a1
                moveq   #0,d0
                move.b  (a3)+,d0
                addq.w  #1,d0
                mulu.w  d5,d0
                mulu.w  d4,d0
                swap    d0
                add.w   $3C(a1),d0
                move.w  d0,$C(a1)
                dbf     d2,loc_5186
                moveq   #0,d0
                move.b  $28(a0),d0
                moveq   #0,d3
                move.b  $3F(a0),d3
                addq.b  #1,d3
                sub.b   d0,d3
                neg.b   d3
                bmi.s   locret_51F4
                move.w  d3,d2
                lsl.w   #4,d3
                lea     (a4,d3.w),a3
                adda.w  d2,a3
                subq.w  #1,d2
                bcs.s   locret_51F4

loc_51CE:
                moveq   #0,d0
                move.b  (a2)+,d0
                lsl.w   #6,d0
                addi.l  #$FFD000,d0
                movea.l d0,a1
                moveq   #0,d0
                move.b  -(a3),d0
                addq.w  #1,d0
                mulu.w  d5,d0
                mulu.w  d4,d0
                swap    d0
                add.w   $3C(a1),d0
                move.w  d0,$C(a1)
                dbf     d2,loc_51CE

locret_51F4:
                rts
; End of function ObjGHZBridge_Bend

; ---------------------------------------------------------------------------
ObjGHZBridge_BendData:dc.b 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                dc.b 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                dc.b 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                dc.b 2, 4, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                dc.b 2, 4, 4, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                dc.b 2, 4, 6, 4, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                dc.b 2, 4, 6, 6, 4, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                dc.b 2, 4, 6, 8, 6, 4, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0
                dc.b 2, 4, 6, 8, 8, 6, 4, 2, 0, 0, 0, 0, 0, 0, 0, 0
                dc.b 2, 4, 6, 8, $A, 8, 6, 4, 2, 0, 0, 0, 0, 0, 0, 0
                dc.b 2, 4, 6, 8, $A, $A, 8, 6, 4, 2, 0, 0, 0, 0, 0, 0
                dc.b 2, 4, 6, 8, $A, $C, $A, 8, 6, 4, 2, 0, 0, 0, 0, 0
                dc.b 2, 4, 6, 8, $A, $C, $C, $A, 8, 6, 4, 2, 0, 0, 0, 0
                dc.b 2, 4, 6, 8, $A, $C, $E, $C, $A, 8, 6, 4, 2, 0, 0, 0
                dc.b 2, 4, 6, 8, $A, $C, $E, $E, $C, $A, 8, 6, 4, 2, 0, 0
                dc.b 2, 4, 6, 8, $A, $C, $E, $10, $E, $C, $A, 8, 6, 4, 2, 0
                dc.b 2, 4, 6, 8, $A, $C, $E, $10, $10, $E, $C, $A, 8, 6, 4, 2
ObjGHZBridge_BendData2:dc.b $FF, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                dc.b $B5, $FF, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                dc.b $7E, $DB, $FF, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                dc.b $61, $B5, $EC, $FF, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                dc.b $4A, $93, $CD, $F3, $FF, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                dc.b $3E, $7E, $B0, $DB, $F6, $FF, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                dc.b $38, $6D, $9D, $C5, $E4, $F8, $FF, 0, 0, 0, 0, 0, 0, 0, 0, 0
                dc.b $31, $61, $8E, $B5, $D4, $EC, $FB, $FF, 0, 0, 0, 0, 0, 0, 0, 0
                dc.b $2B, $56, $7E, $A2, $C1, $DB, $EE, $FB, $FF, 0, 0, 0, 0, 0, 0, 0
                dc.b $25, $4A, $73, $93, $B0, $CD, $E1, $F3, $FC, $FF, 0, 0, 0, 0, 0, 0
                dc.b $1F, $44, $67, $88, $A7, $BD, $D4, $E7, $F4, $FD, $FF, 0, 0, 0, 0, 0
                dc.b $1F, $3E, $5C, $7E, $98, $B0, $C9, $DB, $EA, $F6, $FD, $FF, 0, 0, 0, 0
                dc.b $19, $38, $56, $73, $8E, $A7, $BD, $D1, $E1, $EE, $F8, $FE, $FF, 0, 0, 0
                dc.b $19, $38, $50, $6D, $83, $9D, $B0, $C5, $D8, $E4, $F1, $F8, $FE, $FF, 0, 0
                dc.b $19, $31, $4A, $67, $7E, $93, $A7, $BD, $CD, $DB, $E7, $F3, $F9, $FE, $FF, 0
                dc.b $19, $31, $4A, $61, $78, $8E, $A2, $B5, $C5, $D4, $E1, $EC, $F4, $FB, $FE, $FF
; ---------------------------------------------------------------------------

ObjGHZBridge_ChkDel:
                move.w  8(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.w   ObjGHZBridge_DelAll
                rts
; ---------------------------------------------------------------------------

ObjGHZBridge_DelAll:
                moveq   #0,d2
                lea     $28(a0),a2
                move.b  (a2)+,d2
                subq.b  #1,d2
                bcs.s   ObjGHZBridge_Delete

ObjGHZBridge_DelLoop:
                moveq   #0,d0
                move.b  (a2)+,d0
                lsl.w   #6,d0
                addi.l  #$FFD000,d0
                movea.l d0,a1
                cmp.w   a0,d0
                beq.s   loc_5448
                bsr.w   loc_878A

loc_5448:
                dbf     d2,ObjGHZBridge_DelLoop

ObjGHZBridge_Delete:
                bsr.w   DeleteObject
                rts
; ---------------------------------------------------------------------------

ObjGHZBridge_Delete2:
                bsr.w   DeleteObject
                rts
; ---------------------------------------------------------------------------

ObjGHZBridge_Display2:
                bsr.w   DisplaySprite
                rts
; ---------------------------------------------------------------------------
Map_Bridge:     include "Map/Bridge.asm"
; ---------------------------------------------------------------------------

Obj15:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  Obj15_Index(pc,d0.w),d1
                jmp     Obj15_Index(pc,d1.w)
; ---------------------------------------------------------------------------
Obj15_Index:    dc.w Obj15_Init-Obj15_Index
                dc.w Obj15_Main-Obj15_Index
                dc.w Obj15_Exit-Obj15_Index
                dc.w Obj15_Delete-Obj15_Index
                dc.w Obj15_Delete-Obj15_Index
                dc.w Obj15_Display-Obj15_Index
; ---------------------------------------------------------------------------

Obj15_Init:
                addq.b  #2,$24(a0)
                move.l  #Map_Obj15,4(a0)
                move.w  #$4380,2(a0)
                move.b  #4,1(a0)
                move.b  #3,$19(a0)
                move.b  #$18,$18(a0)
                move.b  #8,$16(a0)
                move.w  $C(a0),$38(a0)
                move.w  8(a0),$3A(a0)
                cmpi.b  #3,($FFFFFE10).w
                bne.s   loc_54F4
                move.l  #Map_Obj15_2,4(a0)
                move.w  #$43DC,2(a0)
                move.b  #$20,$18(a0)
                move.b  #$10,$16(a0)
                move.b  #$99,$20(a0)

loc_54F4:
                move.b  0(a0),d4
                moveq   #0,d1
                lea     $28(a0),a2
                move.b  (a2),d1
                move.w  d1,-(sp)
                andi.w  #$F,d1
                move.b  #0,(a2)+
                move.w  d1,d3
                lsl.w   #4,d3
                addq.b  #8,d3
                move.b  d3,$3C(a0)
                subq.b  #8,d3
                tst.b   $1A(a0)
                beq.s   loc_5520
                addq.b  #8,d3
                subq.w  #1,d1

loc_5520:
                bsr.w   FindFreeObjectSlot
                bne.s   loc_5586
                addq.b  #1,$28(a0)
                move.w  a1,d5
                subi.w  #$D000,d5
                lsr.w   #6,d5
                andi.w  #$7F,d5
                move.b  d5,(a2)+
                move.b  #$A,$24(a1)
                move.b  d4,0(a1)
                move.l  4(a0),4(a1)
                move.w  2(a0),2(a1)
                bclr    #6,2(a1)
                move.b  #4,1(a1)
                move.b  #4,$19(a1)
                move.b  #8,$18(a1)
                move.b  #1,$1A(a1)
                move.b  d3,$3C(a1)
                subi.b  #$10,d3
                bcc.s   loc_5582
                move.b  #2,$1A(a1)
                bset    #6,2(a1)

loc_5582:
                dbf     d1,loc_5520

loc_5586:
                move.w  a0,d5
                subi.w  #$D000,d5
                lsr.w   #6,d5
                andi.w  #$7F,d5
                move.b  d5,(a2)+
                move.w  #$4080,$26(a0)
                move.w  #$FE00,$3E(a0)
                move.w  (sp)+,d1
                btst    #4,d1
                beq.s   Obj15_Main
                move.l  #Map_RollingBall,4(a0)
                move.w  #$43AA,2(a0)
                move.b  #1,$1A(a0)
                move.b  #2,$19(a0)
                move.b  #$81,$20(a0)

Obj15_Main:
                moveq   #0,d1
                move.b  $18(a0),d1
                moveq   #0,d3
                move.b  $16(a0),d3
                bsr.w   sub_5086
                bsr.w   sub_563C
                bsr.w   DisplaySprite
                bra.w   loc_56D6
; ---------------------------------------------------------------------------

Obj15_Exit:
                moveq   #0,d1
                move.b  $18(a0),d1
                bsr.w   ExitPlatform
                move.w  8(a0),-(sp)
                bsr.w   sub_563C
                move.w  (sp)+,d2
                moveq   #0,d3
                move.b  $16(a0),d3
                addq.b  #1,d3
                bsr.w   sub_560E
                bsr.w   DisplaySprite
                bra.w   loc_56D6
; ---------------------------------------------------------------------------
                rts

; =============== S U B R O U T I N E =======================================


sub_560E:
                lea     ($FFFFD000).w,a1
                move.w  $C(a0),d0
                sub.w   d3,d0
                bra.s   loc_5626
; ---------------------------------------------------------------------------

loc_561A:
                lea     ($FFFFD000).w,a1
                move.w  $C(a0),d0
                subi.w  #9,d0

loc_5626:
                moveq   #0,d1
                move.b  $16(a1),d1
                sub.w   d1,d0
                move.w  d0,$C(a1)
                sub.w   8(a0),d2
                sub.w   d2,8(a1)
                rts
; End of function sub_560E


; =============== S U B R O U T I N E =======================================


sub_563C:
                move.b  ($FFFFFE78).w,d0
                move.w  #$80,d1
                btst    #0,$22(a0)
                beq.s   loc_5650
                neg.w   d0
                add.w   d1,d0

loc_5650:
                bra.s   loc_5692
; ---------------------------------------------------------------------------

loc_5652:
                tst.b   $3D(a0)
                bne.s   loc_5674
                move.w  $3E(a0),d0
                addq.w  #8,d0
                move.w  d0,$3E(a0)
                add.w   d0,$26(a0)
                cmpi.w  #$200,d0
                bne.s   loc_568E
                move.b  #1,$3D(a0)
                bra.s   loc_568E
; ---------------------------------------------------------------------------

loc_5674:
                move.w  $3E(a0),d0
                subq.w  #8,d0
                move.w  d0,$3E(a0)
                add.w   d0,$26(a0)
                cmpi.w  #$FE00,d0
                bne.s   loc_568E
                move.b  #0,$3D(a0)

loc_568E:
                move.b  $26(a0),d0

loc_5692:
                bsr.w   CalcSine
                move.w  $38(a0),d2
                move.w  $3A(a0),d3
                lea     $28(a0),a2
                moveq   #0,d6
                move.b  (a2)+,d6

loc_56A6:
                moveq   #0,d4
                move.b  (a2)+,d4
                lsl.w   #6,d4
                addi.l  #$FFD000,d4
                movea.l d4,a1
                moveq   #0,d4
                move.b  $3C(a1),d4
                move.l  d4,d5
                muls.w  d0,d4
                asr.l   #8,d4
                muls.w  d1,d5
                asr.l   #8,d5
                add.w   d2,d4
                add.w   d3,d5
                move.w  d4,$C(a1)
                move.w  d5,8(a1)
                dbf     d6,loc_56A6
                rts
; End of function sub_563C

; ---------------------------------------------------------------------------

loc_56D6:
                move.w  $3A(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.w   loc_56F6
                rts
; ---------------------------------------------------------------------------

loc_56F6:
                moveq   #0,d2
                lea     $28(a0),a2
                move.b  (a2)+,d2

loc_56FE:
                moveq   #0,d0
                move.b  (a2)+,d0
                lsl.w   #6,d0
                addi.l  #$FFD000,d0
                movea.l d0,a1
                bsr.w   loc_878A
                dbf     d2,loc_56FE
                rts
; ---------------------------------------------------------------------------

Obj15_Delete:
                bsr.w   DeleteObject
                rts
; ---------------------------------------------------------------------------

Obj15_Display:
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------
Map_Obj15:      include "Map/SwingingPlatform.asm"
; ---------------------------------------------------------------------------

ObjGHZHelix:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  ObjGHZHelix_Index(pc,d0.w),d1
                jmp     ObjGHZHelix_Index(pc,d1.w)
; ---------------------------------------------------------------------------
ObjGHZHelix_Index:dc.w entry_5792-ObjGHZHelix_Index
                dc.w entry_5854-ObjGHZHelix_Index
                dc.w entry_5854-ObjGHZHelix_Index
                dc.w entry_58c2-ObjGHZHelix_Index
                dc.w entry_58c8-ObjGHZHelix_Index
; ---------------------------------------------------------------------------

entry_5792:
                addq.b  #2,$24(a0)
                move.l  #Map_GHZHelix,4(a0)
                move.w  #$4398,2(a0)
                move.b  #7,$22(a0)
                move.b  #4,1(a0)
                move.b  #3,$19(a0)
                move.b  #8,$18(a0)
                move.w  $C(a0),d2
                move.w  8(a0),d3
                move.b  0(a0),d4
                lea     $28(a0),a2
                moveq   #0,d1
                move.b  (a2),d1
                move.b  #0,(a2)+
                move.w  d1,d0
                lsr.w   #1,d0
                lsl.w   #4,d0
                sub.w   d0,d3
                subq.b  #2,d1
                bcs.s   entry_5854
                moveq   #0,d6

loc_57E2:
                bsr.w   FindFreeObjectSlot
                bne.s   entry_5854
                addq.b  #1,$28(a0)
                move.w  a1,d5
                subi.w  #$D000,d5
                lsr.w   #6,d5
                andi.w  #$7F,d5
                move.b  d5,(a2)+
                move.b  #8,$24(a1)
                move.b  d4,0(a1)
                move.w  d2,$C(a1)
                move.w  d3,8(a1)
                move.l  4(a0),4(a1)
                move.w  #$4398,2(a1)
                move.b  #4,1(a1)
                move.b  #3,$19(a1)
                move.b  #8,$18(a1)
                move.b  d6,$3E(a1)
                addq.b  #1,d6
                andi.b  #7,d6
                addi.w  #$10,d3
                cmp.w   8(a0),d3
                bne.s   loc_5850
                move.b  d6,$3E(a0)
                addq.b  #1,d6
                andi.b  #7,d6
                addi.w  #$10,d3
                addq.b  #1,$28(a0)

loc_5850:
                dbf     d1,loc_57E2

entry_5854:
                bsr.w   sub_5860
                bsr.w   DisplaySprite
                bra.w   loc_5880

; =============== S U B R O U T I N E =======================================


sub_5860:
                move.b  ($FFFFFEC1).w,d0
                move.b  #0,$20(a0)
                add.b   $3E(a0),d0
                andi.b  #7,d0
                move.b  d0,$1A(a0)
                bne.s   locret_587E
                move.b  #$84,$20(a0)

locret_587E:
                rts
; End of function sub_5860

; ---------------------------------------------------------------------------

loc_5880:
                move.w  8(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.w   loc_58A0
                rts
; ---------------------------------------------------------------------------

loc_58A0:
                moveq   #0,d2
                lea     $28(a0),a2
                move.b  (a2)+,d2
                subq.b  #2,d2
                bcs.s   entry_58c2

loc_58AC:
                moveq   #0,d0
                move.b  (a2)+,d0
                lsl.w   #6,d0
                addi.l  #$FFD000,d0
                movea.l d0,a1
                bsr.w   loc_878A
                dbf     d2,loc_58AC

entry_58c2:
                bsr.w   DeleteObject
                rts
; ---------------------------------------------------------------------------

entry_58c8:
                bsr.w   sub_5860
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------
Map_GHZHelix:   include "Map/GHZHelix.asm"
; ---------------------------------------------------------------------------

ObjPlatform:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  index_5918(pc,d0.w),d1
                jmp     index_5918(pc,d1.w)
; ---------------------------------------------------------------------------
index_5918:     dc.w entry_5922-index_5918
                dc.w entry_59ae-index_5918
                dc.w entry_59d2-index_5918
                dc.w entry_5bce-index_5918
                dc.w entry_59c2-index_5918
; ---------------------------------------------------------------------------

entry_5922:
                addq.b  #2,$24(a0)
                move.w  #$4000,2(a0)
                move.l  #Map_Platform,4(a0)
                move.b  #$20,$18(a0) 
                cmpi.b  #4,($FFFFFE10).w
                bne.s   loc_5950
                move.l  #word_5C60,4(a0)
                move.b  #$20,$18(a0) 

loc_5950:
                cmpi.b  #3,($FFFFFE10).w
                bne.s   loc_5972
                move.l  #word_5C72,4(a0)
                move.b  #$20,$18(a0) 
                move.w  #$4480,2(a0)
                move.b  #3,$28(a0)

loc_5972:
                move.b  #4,1(a0)
                move.b  #4,$19(a0)
                move.w  $C(a0),$2C(a0)
                move.w  $C(a0),$34(a0)
                move.w  8(a0),$32(a0)
                move.w  #$80,$26(a0)
                moveq   #0,d1
                move.b  $28(a0),d0
                cmpi.b  #$A,d0
                bne.s   loc_59AA
                addq.b  #1,d1
                move.b  #$20,$18(a0) 

loc_59AA:
                move.b  d1,$1A(a0)

entry_59ae:
                tst.b   $38(a0)
                beq.s   loc_59B8
                subq.b  #4,$38(a0)

loc_59B8:
                moveq   #0,d1
                move.b  $18(a0),d1
                bsr.w   loc_4F7A

entry_59c2:
                bsr.w   sub_5A1E
                bsr.w   sub_5A04
                bsr.w   DisplaySprite
                bra.w   loc_5BB0
; ---------------------------------------------------------------------------

entry_59d2:
                cmpi.b  #$40,$38(a0) 
                beq.s   loc_59DE
                addq.b  #4,$38(a0)

loc_59DE:
                moveq   #0,d1
                move.b  $18(a0),d1
                bsr.w   ExitPlatform
                move.w  8(a0),-(sp)
                bsr.w   sub_5A1E
                bsr.w   sub_5A04
                move.w  (sp)+,d2
                bsr.w   loc_561A
                bsr.w   DisplaySprite
                bra.w   loc_5BB0
; ---------------------------------------------------------------------------
                rts

; =============== S U B R O U T I N E =======================================


sub_5A04:
                move.b  $38(a0),d0
                bsr.w   CalcSine
                move.w  #$400,d1
                muls.w  d1,d0
                swap    d0
                add.w   $2C(a0),d0
                move.w  d0,$C(a0)
                rts
; End of function sub_5A04


; =============== S U B R O U T I N E =======================================


sub_5A1E:
                moveq   #0,d0
                move.b  $28(a0),d0
                andi.w  #$F,d0
                add.w   d0,d0
                move.w  index_5a32(pc,d0.w),d1
                jmp     index_5a32(pc,d1.w)
; End of function sub_5A1E

; ---------------------------------------------------------------------------
index_5a32:     dc.w entry_5a4c-index_5a32
                dc.w entry_5a5e-index_5a32
                dc.w entry_5aa4-index_5a32
                dc.w entry_5abc-index_5a32
                dc.w entry_5ae4-index_5a32
                dc.w entry_5a4e-index_5a32
                dc.w entry_5a94-index_5a32
                dc.w entry_5b4e-index_5a32
                dc.w entry_5b7a-index_5a32
                dc.w entry_5a4c-index_5a32
                dc.w entry_5b92-index_5a32
                dc.w entry_5a86-index_5a32
                dc.w entry_5a76-index_5a32
; ---------------------------------------------------------------------------

entry_5a4c:
                rts
; ---------------------------------------------------------------------------

entry_5a4e:
                move.w  $32(a0),d0
                move.b  $26(a0),d1
                neg.b   d1
                addi.b  #$40,d1 
                bra.s   loc_5A6A
; ---------------------------------------------------------------------------

entry_5a5e:
                move.w  $32(a0),d0
                move.b  $26(a0),d1
                subi.b  #$40,d1 

loc_5A6A:
                ext.w   d1
                add.w   d1,d0
                move.w  d0,8(a0)
                bra.w   loc_5BA8
; ---------------------------------------------------------------------------

entry_5a76:
                move.w  $34(a0),d0
                move.b  ($FFFFFE6C).w,d1
                neg.b   d1
                addi.b  #$30,d1 
                bra.s   loc_5AB0
; ---------------------------------------------------------------------------

entry_5a86:
                move.w  $34(a0),d0
                move.b  ($FFFFFE6C).w,d1
                subi.b  #$30,d1 
                bra.s   loc_5AB0
; ---------------------------------------------------------------------------

entry_5a94:
                move.w  $34(a0),d0
                move.b  $26(a0),d1
                neg.b   d1
                addi.b  #$40,d1 
                bra.s   loc_5AB0
; ---------------------------------------------------------------------------

entry_5aa4:
                move.w  $34(a0),d0
                move.b  $26(a0),d1
                subi.b  #$40,d1 

loc_5AB0:
                ext.w   d1
                add.w   d1,d0
                move.w  d0,$2C(a0)
                bra.w   loc_5BA8
; ---------------------------------------------------------------------------

entry_5abc:
                tst.w   $3A(a0)
                bne.s   loc_5AD2
                btst    #3,$22(a0)
                beq.s   locret_5AD0
                move.w  #$1E,$3A(a0)

locret_5AD0:
                rts
; ---------------------------------------------------------------------------

loc_5AD2:
                subq.w  #1,$3A(a0)
                bne.s   locret_5AD0
                move.w  #$20,$3A(a0) 
                addq.b  #1,$28(a0)
                rts
; ---------------------------------------------------------------------------

entry_5ae4:
                tst.w   $3A(a0)
                beq.s   loc_5B20
                subq.w  #1,$3A(a0)
                bne.s   loc_5B20
                btst    #3,$22(a0)
                beq.s   loc_5B1A
                bset    #1,$22(a1)
                bclr    #3,$22(a1)
                move.b  #2,$24(a1)
                bclr    #3,$22(a0)
                clr.b   $25(a0)
                move.w  $12(a0),$12(a1)

loc_5B1A:
                move.b  #8,$24(a0)

loc_5B20:
                move.l  $2C(a0),d3
                move.w  $12(a0),d0
                ext.l   d0
                asl.l   #8,d0
                add.l   d0,d3
                move.l  d3,$2C(a0)
                addi.w  #$38,$12(a0) 
                move.w  ($FFFFF72E).w,d0
                addi.w  #$E0,d0
                cmp.w   $2C(a0),d0
                bcc.s   locret_5B4C
                move.b  #6,$24(a0)

locret_5B4C:
                rts
; ---------------------------------------------------------------------------

entry_5b4e:
                tst.w   $3A(a0)
                bne.s   loc_5B6E
                lea     ($FFFFF7E0).w,a2
                moveq   #0,d0
                move.b  $28(a0),d0
                lsr.w   #4,d0
                tst.b   (a2,d0.w)
                beq.s   locret_5B6C
                move.w  #$3C,$3A(a0) 

locret_5B6C:
                rts
; ---------------------------------------------------------------------------

loc_5B6E:
                subq.w  #1,$3A(a0)
                bne.s   locret_5B6C
                addq.b  #1,$28(a0)
                rts
; ---------------------------------------------------------------------------

entry_5b7a:
                subq.w  #2,$2C(a0)
                move.w  $34(a0),d0
                subi.w  #$200,d0
                cmp.w   $2C(a0),d0
                bne.s   locret_5B90
                clr.b   $28(a0)

locret_5B90:
                rts
; ---------------------------------------------------------------------------

entry_5b92:
                move.w  $34(a0),d0
                move.b  $26(a0),d1
                subi.b  #$40,d1 
                ext.w   d1
                asr.w   #1,d1
                add.w   d1,d0
                move.w  d0,$2C(a0)

loc_5BA8:
                move.b  ($FFFFFE78).w,$26(a0)
                rts
; ---------------------------------------------------------------------------

loc_5BB0:
                move.w  $32(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.s   entry_5bce
                rts
; ---------------------------------------------------------------------------

entry_5bce:
                bra.w   DeleteObject
; ---------------------------------------------------------------------------
                dc.b   0
                dc.b   4
                dc.b   0
                dc.b  $F
                dc.b   2
                dc.b $F4
                dc.b  $B
                dc.b   0
                dc.b $3C ; <
                dc.b $E8
                dc.b $F4
                dc.b  $B
                dc.b   0
                dc.b $48 ; H
                dc.b   0
                dc.b  $A
                dc.b $F4
                dc.b  $F
                dc.b   0
                dc.b $CA
                dc.b $E0
                dc.b   4
                dc.b  $F
                dc.b   0
                dc.b $DA
                dc.b $E0
                dc.b $24 ; $
                dc.b  $F
                dc.b   0
                dc.b $DA
                dc.b $E0
                dc.b $44 ; D
                dc.b  $F
                dc.b   0
                dc.b $DA
                dc.b $E0
                dc.b $64 ; d
                dc.b  $F
                dc.b   0
                dc.b $DA
                dc.b $E0
                dc.b $F4
                dc.b  $F
                dc.b   8
                dc.b $CA
                dc.b   0
                dc.b   4
                dc.b  $F
                dc.b   8
                dc.b $DA
                dc.b   0
                dc.b $24 ; $
                dc.b  $F
                dc.b   8
                dc.b $DA
                dc.b   0
                dc.b $44 ; D
                dc.b  $F
                dc.b   8
                dc.b $DA
                dc.b   0
                dc.b $64 ; d
                dc.b  $F
                dc.b   8
                dc.b $DA
                dc.b   0

Map_Platform:   include "Map/Platform.asm"
; ---------------------------------------------------------------------------

ObjRollingBall:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  ObjRollingBall_Index(pc,d0.w),d1
                jmp     ObjRollingBall_Index(pc,d1.w)
; ---------------------------------------------------------------------------
ObjRollingBall_Index:dc.w ObjRollingBall_Init-*
                dc.w ObjRollingBall_Main-ObjRollingBall_Index
                dc.w loc_5D86-ObjRollingBall_Index
                dc.w ObjRollingBall_Delete-ObjRollingBall_Index
                dc.w sub_5CEE-ObjRollingBall_Index
; ---------------------------------------------------------------------------

ObjRollingBall_Init:
                move.b  #$18,$16(a0)
                move.b  #$C,$17(a0)
                bsr.w   ObjectMoveAndFall
                jsr     (ObjectHitFloor).l
                tst.w   d1
                bpl.s   ObjRollingBall_Return
                add.w   d1,$C(a0)
                move.w  #0,$12(a0)
                move.b  #8,$24(a0)
                move.l  #Map_RollingBall,4(a0)
                move.w  #$43AA,2(a0)
                move.b  #4,1(a0)
                move.b  #3,$19(a0)
                move.b  #$18,$18(a0)
                move.b  #1,$1F(a0)
                bsr.w   sub_5DC8

ObjRollingBall_Return:
                rts

; =============== S U B R O U T I N E =======================================


sub_5CEE:

                move.w  #$23,d1 
                move.w  #$18,d2
                move.w  #$18,d3
                move.w  8(a0),d4
                bsr.w   sub_A2BC
                btst    #5,$22(a0)
                bne.s   loc_5D14
                move.w  ($FFFFD008).w,d0
                sub.w   8(a0),d0
                bcs.s   loc_5D20

loc_5D14:
                move.b  #2,$24(a0)
                move.w  #$80,$14(a0)

loc_5D20:
                bsr.w   sub_5DC8
                bsr.w   DisplaySprite
                bra.w   loc_5E2A
; End of function sub_5CEE

; ---------------------------------------------------------------------------

ObjRollingBall_Main:
                btst    #1,$22(a0)
                bne.w   loc_5D86
                bsr.w   sub_5DC8
                bsr.w   sub_5E50
                bsr.w   ObjectMove
                move.w  #$23,d1 
                move.w  #$18,d2
                move.w  #$18,d3
                move.w  8(a0),d4
                bsr.w   sub_A2BC
                jsr     (Sonic_AnglePos).l
                cmpi.w  #$20,8(a0) 
                bcc.s   loc_5D70
                move.w  #$20,8(a0) 
                move.w  #$400,$14(a0)

loc_5D70:
                btst    #1,$22(a0)
                beq.s   loc_5D7E
                move.w  #$FC00,$12(a0)

loc_5D7E:
                bsr.w   DisplaySprite
                bra.w   loc_5E2A
; ---------------------------------------------------------------------------

loc_5D86:
                bsr.w   sub_5DC8
                bsr.w   ObjectMove
                move.w  #$23,d1 
                move.w  #$18,d2
                move.w  #$18,d3
                move.w  8(a0),d4
                bsr.w   sub_A2BC
                jsr     (sub_F04E).l
                btst    #1,$22(a0)
                beq.s   loc_5DBE
                move.w  $12(a0),d0
                addi.w  #$28,d0 
                move.w  d0,$12(a0)
                bra.s   loc_5DC0
; ---------------------------------------------------------------------------

loc_5DBE:
                nop

loc_5DC0:
                bsr.w   DisplaySprite
                bra.w   loc_5E2A

; =============== S U B R O U T I N E =======================================


sub_5DC8:
                tst.b   $1A(a0)
                beq.s   loc_5DD6
                move.b  #0,$1A(a0)
                rts
; ---------------------------------------------------------------------------

loc_5DD6:
                move.b  $14(a0),d0
                beq.s   loc_5E02
                bmi.s   loc_5E0A
                subq.b  #1,$1E(a0)
                bpl.s   loc_5E02
                neg.b   d0
                addq.b  #8,d0
                bcs.s   loc_5DEC
                moveq   #0,d0

loc_5DEC:
                move.b  d0,$1E(a0)
                move.b  $1F(a0),d0
                addq.b  #1,d0
                cmpi.b  #4,d0
                bne.s   loc_5DFE
                moveq   #1,d0

loc_5DFE:
                move.b  d0,$1F(a0)

loc_5E02:
                move.b  $1F(a0),$1A(a0)
                rts
; ---------------------------------------------------------------------------

loc_5E0A:
                subq.b  #1,$1E(a0)
                bpl.s   loc_5E02
                addq.b  #8,d0
                bcs.s   loc_5E16
                moveq   #0,d0

loc_5E16:
                move.b  d0,$1E(a0)
                move.b  $1F(a0),d0
                subq.b  #1,d0
                bne.s   loc_5E24
                moveq   #3,d0

loc_5E24:
                move.b  d0,$1F(a0)
                bra.s   loc_5E02
; End of function sub_5DC8

; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR sub_5CEE

loc_5E2A:
                move.w  8(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.w   DeleteObject
                rts
; END OF FUNCTION CHUNK FOR sub_5CEE
; ---------------------------------------------------------------------------

ObjRollingBall_Delete:
                bsr.w   DeleteObject
                rts

; =============== S U B R O U T I N E =======================================


sub_5E50:
                move.b  $26(a0),d0
                bsr.w   CalcSine
                move.w  d0,d2
                muls.w  #$38,d2 
                asr.l   #8,d2
                add.w   d2,$14(a0)
                muls.w  $14(a0),d1
                asr.l   #8,d1
                move.w  d1,$10(a0)
                muls.w  $14(a0),d0
                asr.l   #8,d0
                move.w  d0,$12(a0)
                rts
; End of function sub_5E50

; ---------------------------------------------------------------------------
Map_RollingBall: include "Map/Ball.asm"
; ---------------------------------------------------------------------------

ObjGHZCliff:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  ObjGHZCliff_Index(pc,d0.w),d1
                jmp     ObjGHZCliff_Index(pc,d1.w)
; ---------------------------------------------------------------------------
ObjGHZCliff_Index:dc.w ObjGHZCliff_Init-ObjGHZCliff_Index
                dc.w ObjGHZCliff_Main-ObjGHZCliff_Index
                dc.w entry_5f4e-ObjGHZCliff_Index
                dc.w entry_5f7e-ObjGHZCliff_Index
                dc.w ObjGHZCliff_Delete-ObjGHZCliff_Index
                dc.w entry_5f60-ObjGHZCliff_Index
; ---------------------------------------------------------------------------

ObjGHZCliff_Init:
                addq.b  #2,$24(a0)
                move.l  #GHZCliff_Map,4(a0)
                move.w  #$4000,2(a0)
                ori.b   #4,1(a0)
                move.b  #4,$19(a0)
                move.b  #7,$38(a0)
                move.b  #$64,$18(a0) 
                move.b  $28(a0),$1A(a0)

ObjGHZCliff_Main:
                tst.b   $3A(a0)
                beq.s   loc_5F3C
                tst.b   $38(a0)
                beq.w   loc_612A
                subq.b  #1,$38(a0)

loc_5F3C:
                move.w  #$30,d1 
                lea     (GHZCliff_SlopeData).l,a2
                bsr.w   sub_504A
                bra.w   MarkObjectGone
; ---------------------------------------------------------------------------

entry_5f4e:
                tst.b   $38(a0)
                beq.w   loc_6130
                move.b  #1,$3A(a0)
                subq.b  #1,$38(a0)

; =============== S U B R O U T I N E =======================================


entry_5f60:

                move.w  #$30,d1
                bsr.w   ExitPlatform
                move.w  #$30,d1 
                lea     (GHZCliff_SlopeData).l,a2
                move.w  8(a0),d2
                bsr.w   sub_61E0
                bra.w   MarkObjectGone
; End of function entry_5f60

; ---------------------------------------------------------------------------

entry_5f7e:
                tst.b   $38(a0)
                beq.s   loc_5FCE
                tst.b   $3A(a0)
                bne.w   loc_5F94
                subq.b  #1,$38(a0)
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------

loc_5F94:
                subq.b  #1,$38(a0)
                bsr.w   entry_5f60
                lea     ($FFFFD000).w,a1
                btst    #3,$22(a1)
                beq.s   loc_5FC0
                tst.b   $38(a0)
                bne.s   locret_5FCC
                bclr    #3,$22(a1)
                bclr    #5,$22(a1)
                move.b  #1,$1D(a1)

loc_5FC0:
                move.b  #0,$3A(a0)
                move.b  #6,$24(a0)

locret_5FCC:
                rts
; ---------------------------------------------------------------------------

loc_5FCE:
                bsr.w   ObjectMoveAndFall
                bsr.w   DisplaySprite
                tst.b   1(a0)
                bpl.s   ObjGHZCliff_Delete
                rts
; ---------------------------------------------------------------------------

ObjGHZCliff_Delete:
                bsr.w   DeleteObject
                rts

; =============== S U B R O U T I N E =======================================


Obj53:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  index_5ff2(pc,d0.w),d1
                jmp     index_5ff2(pc,d1.w)
; End of function Obj53

; ---------------------------------------------------------------------------
index_5ff2:     dc.w entry_5ffe-index_5ff2
                dc.w entry_603a-index_5ff2
                dc.w entry_607c-index_5ff2
                dc.w entry_60a2-index_5ff2
                dc.w entry_6102-index_5ff2
                dc.w entry_608e-index_5ff2
; ---------------------------------------------------------------------------

entry_5ffe:
                addq.b  #2,$24(a0)
                move.l  #unk_65A2,4(a0)
                move.w  #$42B8,2(a0)
                cmpi.b  #3,($FFFFFE10).w
                bne.s   loc_6022
                move.w  #$44E0,2(a0)
                addq.b  #2,$1A(a0)

loc_6022:
                ori.b   #4,1(a0)
                move.b  #4,$19(a0)
                move.b  #7,$38(a0)
                move.b  #$44,$18(a0) 

entry_603a:
                tst.b   $3A(a0)
                beq.s   loc_604C
                tst.b   $38(a0)
                beq.w   loc_6108
                subq.b  #1,$38(a0)

loc_604C:
                move.w  #$20,d1 
                bsr.w   loc_4F7A
                tst.b   $28(a0)
                bpl.s   loc_6078
                btst    #3,$22(a1)
                beq.s   loc_6078
                bclr    #0,1(a0)
                move.w  8(a1),d0
                sub.w   8(a0),d0
                bcc.s   loc_6078
                bset    #0,1(a0)

loc_6078:
                bra.w   MarkObjectGone
; ---------------------------------------------------------------------------

entry_607c:
                tst.b   $38(a0)
                beq.w   loc_610E
                move.b  #1,$3A(a0)
                subq.b  #1,$38(a0)

; =============== S U B R O U T I N E =======================================


entry_608e:

                move.w  #$20,d1 
                bsr.w   ExitPlatform
                move.w  8(a0),d2
                bsr.w   loc_561A
                bra.w   MarkObjectGone
; End of function entry_608e

; ---------------------------------------------------------------------------

entry_60a2:
                tst.b   $38(a0)
                beq.s   loc_60F2
                tst.b   $3A(a0)
                bne.w   loc_60B8
                subq.b  #1,$38(a0)
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------

loc_60B8:
                subq.b  #1,$38(a0)
                bsr.w   entry_608e
                lea     ($FFFFD000).w,a1
                btst    #3,$22(a1)
                beq.s   loc_60E4
                tst.b   $38(a0)
                bne.s   locret_60F0
                bclr    #3,$22(a1)
                bclr    #5,$22(a1)
                move.b  #1,$1D(a1)

loc_60E4:
                move.b  #0,$3A(a0)
                move.b  #6,$24(a0)

locret_60F0:
                rts
; ---------------------------------------------------------------------------

loc_60F2:
                bsr.w   ObjectMoveAndFall
                bsr.w   DisplaySprite
                tst.b   1(a0)
                bpl.s   entry_6102
                rts
; ---------------------------------------------------------------------------

entry_6102:
                bsr.w   DeleteObject
                rts
; ---------------------------------------------------------------------------

loc_6108:
                move.b  #0,$3A(a0)

loc_610E:
                lea     (unk_61D0).l,a4
                btst    #0,$28(a0)
                beq.s   loc_6122
                lea     (unk_61D8).l,a4

loc_6122:
                moveq   #7,d1
                addq.b  #1,$1A(a0)
                bra.s   loc_613C
; ---------------------------------------------------------------------------

loc_612A:
                move.b  #0,$3A(a0)

loc_6130:
                lea     (unk_61B6).l,a4
                moveq   #$18,d1
                addq.b  #2,$1A(a0)

loc_613C:
                moveq   #0,d0
                move.b  $1A(a0),d0
                add.w   d0,d0
                movea.l 4(a0),a3
                adda.w  (a3,d0.w),a3
                addq.w  #1,a3
                bset    #5,1(a0)
                move.b  0(a0),d4
                move.b  1(a0),d5
                movea.l a0,a1
                bra.s   loc_6168
; ---------------------------------------------------------------------------

loc_6160:
                bsr.w   FindFreeObjectSlot
                bne.s   loc_61A8
                addq.w  #5,a3

loc_6168:
                move.b  #6,$24(a1)
                move.b  d4,0(a1)
                move.l  a3,4(a1)
                move.b  d5,1(a1)
                move.w  8(a0),8(a1)
                move.w  $C(a0),$C(a1)
                move.w  2(a0),2(a1)
                move.b  $19(a0),$19(a1)
                move.b  $18(a0),$18(a1)
                move.b  (a4)+,$38(a1)
                cmpa.l  a0,a1
                bcc.s   loc_61A4
                bsr.w   DisplaySprite2

loc_61A4:
                dbf     d1,loc_6160

loc_61A8:
                bsr.w   DisplaySprite
                move.w  #$B9,d0
                jmp     (PlaySound_Special).l
; ---------------------------------------------------------------------------
unk_61B6:       dc.b $1C
                dc.b $18
                dc.b $14
                dc.b $10
                dc.b $1A
                dc.b $16
                dc.b $12
                dc.b  $E
                dc.b  $A
                dc.b   6
                dc.b $18
                dc.b $14
                dc.b $10
                dc.b  $C
                dc.b   8
                dc.b   4
                dc.b $16
                dc.b $12
                dc.b  $E
                dc.b  $A
                dc.b   6
                dc.b   2
                dc.b $14
                dc.b $10
                dc.b  $C
                dc.b   0
unk_61D0:       dc.b $1E
                dc.b $16
                dc.b  $E
                dc.b   6
                dc.b $1A
                dc.b $12
                dc.b  $A
                dc.b   2
unk_61D8:       dc.b $16
                dc.b $1E
                dc.b $1A
                dc.b $12
                dc.b   6
                dc.b  $E
                dc.b  $A
                dc.b   2

; =============== S U B R O U T I N E =======================================


sub_61E0:
                lea     ($FFFFD000).w,a1
                btst    #3,$22(a1)
                beq.s   locret_6224
                move.w  8(a1),d0
                sub.w   8(a0),d0
                add.w   d1,d0
                lsr.w   #1,d0
                btst    #0,1(a0)
                beq.s   loc_6204
                not.w   d0
                add.w   d1,d0

loc_6204:
                moveq   #0,d1
                move.b  (a2,d0.w),d1
                move.w  $C(a0),d0
                sub.w   d1,d0
                moveq   #0,d1
                move.b  $16(a1),d1
                sub.w   d1,d0
                move.w  d0,$C(a1)
                sub.w   8(a0),d2
                sub.w   d2,8(a1)

locret_6224:
                rts
; End of function sub_61E0

; ---------------------------------------------------------------------------
GHZCliff_SlopeData: incbin "Misc/ghzledge.bin"
                    even

GHZCliff_Map:   include "Map/GHZCliff.asm"

unk_65A2:       include "Map/BreakableBlock.asm"
; ---------------------------------------------------------------------------

Obj1B:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  Obj1B_Index(pc,d0.w),d1
                jmp     Obj1B_Index(pc,d1.w)
; ---------------------------------------------------------------------------
Obj1B_Index:    dc.w loc_663E-*
                dc.w loc_6676-Obj1B_Index
                dc.w loc_668A-Obj1B_Index
                dc.w loc_66CE-Obj1B_Index
                dc.w loc_66D6-Obj1B_Index
; ---------------------------------------------------------------------------

loc_663E:
                addq.b  #2,$24(a0)
                move.l  #unk_66DC,4(a0)
                move.w  #$4000,2(a0)
                move.b  #4,1(a0)
                move.b  #$20,$18(a0) 
                move.b  #5,$19(a0)
                tst.b   $28(a0)
                bne.s   loc_6676
                move.b  #1,$19(a0)
                move.b  #6,$24(a0)
                rts
; ---------------------------------------------------------------------------

loc_6676:
                move.w  #$20,d1 
                move.w  #$FFEC,d3
                bsr.w   sub_5086
                bsr.w   DisplaySprite
                bra.w   loc_66A8
; ---------------------------------------------------------------------------

loc_668A:
                move.w  #$20,d1 
                bsr.w   ExitPlatform
                move.w  8(a0),d2
                move.w  #$FFEC,d3
                bsr.w   sub_560E
                bsr.w   DisplaySprite
                bra.w   loc_66A8
; ---------------------------------------------------------------------------
                rts
; ---------------------------------------------------------------------------

loc_66A8:
                move.w  8(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.w   loc_66C8
                rts
; ---------------------------------------------------------------------------

loc_66C8:
                bsr.w   DeleteObject
                rts
; ---------------------------------------------------------------------------

loc_66CE:
                bsr.w   DisplaySprite
                bra.w   loc_66A8
; ---------------------------------------------------------------------------

loc_66D6:
                bsr.w   DeleteObject
                rts
; ---------------------------------------------------------------------------
unk_66DC:       dc.b   0
                dc.b   4
                dc.b   0
                dc.b $19
                dc.b   4
                dc.b $F0
                dc.b  $A
                dc.b   0
                dc.b $89
                dc.b $E0
                dc.b $F0
                dc.b  $A
                dc.b   8
                dc.b $89
                dc.b   8
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $92
                dc.b $F8
                dc.b   8
                dc.b  $C
                dc.b   0
                dc.b $96
                dc.b $F0
                dc.b   4
                dc.b $E8
                dc.b  $F
                dc.b   0
                dc.b $9A
                dc.b $E0
                dc.b $E8
                dc.b  $F
                dc.b   8
                dc.b $9A
                dc.b   0
                dc.b   8
                dc.b  $D
                dc.b   0
                dc.b $AA
                dc.b $E0
                dc.b   8
                dc.b  $D
                dc.b   8
                dc.b $AA
                dc.b   0
; ---------------------------------------------------------------------------

ObjScenery:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  ObjScenery_Index(pc,d0.w),d1
                jmp     ObjScenery_Index(pc,d1.w)
; ---------------------------------------------------------------------------
ObjScenery_Index:dc.w ObjScenery_Init-*
                dc.w ObjScenery_ChkDelete-ObjScenery_Index
                dc.w ObjScenery_Delete-ObjScenery_Index
                dc.w ObjScenery_Delete-ObjScenery_Index
; ---------------------------------------------------------------------------

ObjScenery_Init:
                addq.b  #2,$24(a0)
                moveq   #0,d0
                move.b  $28(a0),d0
                mulu.w  #$A,d0
                lea     SceneryTypes(pc,d0.w),a1
                move.l  (a1)+,4(a0)
                move.w  (a1)+,2(a0)
                ori.b   #4,1(a0)
                move.b  (a1)+,$1A(a0)
                move.b  (a1)+,$18(a0)
                move.b  (a1)+,$19(a0)
                move.b  (a1)+,$20(a0)

ObjScenery_ChkDelete:
                bsr.w   DisplaySprite
                move.w  8(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.w   ObjScenery_Delete
                rts
; ---------------------------------------------------------------------------

ObjScenery_Delete:
                bsr.w   DeleteObject
                rts
; ---------------------------------------------------------------------------
SceneryTypes:   dc.l Map_Scenery
                dc.w $398
                dc.b 0, $10, 4, $82
                dc.l Map_Scenery
                dc.w $398
                dc.b 1, $14, 4, $83
                dc.l Map_Scenery
                dc.w $4000
                dc.b 0, $20, 1, 0
                dc.l Map_Bridge
                dc.w $438E
                dc.b 1, $10, 1, 0
Map_Scenery:    dc.w unk_67A4-*
unk_67A4:       dc.b   4
                dc.b $F4, $A, 1, $B, $D0, $F4, $A, 1, $14, $E8, $F4
                dc.b $A, 9, $14, 0, $F4, $A, 9, $B, $18, 0
; ---------------------------------------------------------------------------

ObjUnkSwitch:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  ObjUnkSwitch_Index(pc,d0.w),d1
                jmp     ObjUnkSwitch_Index(pc,d1.w)
; ---------------------------------------------------------------------------
ObjUnkSwitch_Index:dc.w ObjUnkSwitch_Init-*
                dc.w ObjUnkSwitch_Action-ObjUnkSwitch_Index
                dc.w ObjUnkSwitch_Delete-ObjUnkSwitch_Index
; ---------------------------------------------------------------------------

ObjUnkSwitch_Init:
                addq.b  #2,$24(a0)
                move.l  #Map_UnkSwitch,4(a0)
                move.w  #$4000,2(a0)
                move.b  #4,1(a0)
                move.w  $C(a0),$30(a0)
                move.b  #$10,$18(a0)
                move.b  #5,$19(a0)

ObjUnkSwitch_Action:
                move.w  $30(a0),$C(a0)
                move.w  #$10,d1
                bsr.w   ObjUnkSwitch_ChkTouch
                beq.s   ObjUnkSwitch_ChkDelete
                addq.w  #2,$C(a0)
                moveq   #1,d0
                move.w  d0,($FFFFF7E0).w

ObjUnkSwitch_ChkDelete:
                bsr.w   DisplaySprite
                move.w  8(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.w   ObjUnkSwitch_Delete
                rts
; ---------------------------------------------------------------------------

ObjUnkSwitch_Delete:
                bsr.w   DeleteObject
                rts

; =============== S U B R O U T I N E =======================================


ObjUnkSwitch_ChkTouch:
                lea     ($FFFFD000).w,a1
                move.w  8(a1),d0
                sub.w   8(a0),d0
                add.w   d1,d0
                bmi.s   loc_6874
                add.w   d1,d1
                cmp.w   d1,d0
                bcc.s   loc_6874
                move.w  $C(a1),d2
                move.b  $16(a1),d1
                ext.w   d1
                add.w   d2,d1
                move.w  $C(a0),d0
                subi.w  #$10,d0
                sub.w   d1,d0
                bhi.s   loc_6874
                cmpi.w  #$FFF0,d0
                bcs.s   loc_6874
                moveq   #$FFFFFFFF,d0
                rts
; ---------------------------------------------------------------------------

loc_6874:
                moveq   #0,d0
                rts
; End of function ObjUnkSwitch_ChkTouch

; ---------------------------------------------------------------------------
Map_UnkSwitch:  include "Map/UnknownSwitch.asm"
; ---------------------------------------------------------------------------

Obj2A:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  Obj2A_Index(pc,d0.w),d1
                jmp     Obj2A_Index(pc,d1.w)
; ---------------------------------------------------------------------------
Obj2A_Index:    dc.w loc_68A4-*
                dc.w loc_68F0-Obj2A_Index
                dc.w loc_6912-Obj2A_Index
; ---------------------------------------------------------------------------

loc_68A4:
                addq.b  #2,$24(a0)
                move.l  #off_6A2C,4(a0)
                move.w  #0,2(a0)
                move.b  #4,1(a0)
                move.w  $C(a0),d0
                subi.w  #$20,d0 
                move.w  d0,$30(a0)
                move.b  #$B,$18(a0)
                move.b  #5,$19(a0)
                tst.b   $28(a0)
                beq.s   loc_68F0
                move.b  #1,$1A(a0)
                move.w  #$4000,2(a0)
                move.b  #4,$19(a0)
                addq.b  #2,$24(a0)

loc_68F0:
                tst.w   ($FFFFF7E0).w
                beq.s   loc_6906
                subq.w  #1,$C(a0)
                move.w  $30(a0),d0
                cmp.w   $C(a0),d0
                beq.w   DeleteObject

loc_6906:
                move.w  #$16,d1
                move.w  #$10,d2
                bsr.w   sub_6936

loc_6912:
                bsr.w   DisplaySprite
                move.w  8(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.w   DeleteObject
                rts

; =============== S U B R O U T I N E =======================================


sub_6936:
                tst.w   ($FFFFFE08).w
                bne.w   locret_69A6
                cmpi.b  #6,($FFFFD024).w
                bcc.s   locret_69A6
                bsr.w   sub_69CE
                beq.s   loc_698C
                bmi.w   loc_69A8
                tst.w   d0
                beq.w   loc_6976
                bmi.s   loc_6960
                tst.w   $10(a1)
                bmi.s   loc_6976
                bra.s   loc_6966
; ---------------------------------------------------------------------------

loc_6960:
                tst.w   $10(a1)
                bpl.s   loc_6976

loc_6966:
                sub.w   d0,8(a1)
                move.w  #0,$14(a1)
                move.w  #0,$10(a1)

loc_6976:
                btst    #1,$22(a1)
                bne.s   loc_699A
                bset    #5,$22(a1)
                bset    #5,$22(a0)
                rts
; ---------------------------------------------------------------------------

loc_698C:
                btst    #5,$22(a0)
                beq.s   locret_69A6
                move.w  #1,$1C(a1)

loc_699A:
                bclr    #5,$22(a0)
                bclr    #5,$22(a1)

locret_69A6:
                rts
; ---------------------------------------------------------------------------

loc_69A8:
                tst.w   $12(a1)
                beq.s   loc_69C0
                bpl.s   locret_69BE
                tst.w   d3
                bpl.s   locret_69BE
                sub.w   d3,$C(a1)
                move.w  #0,$12(a1)

locret_69BE:
                rts
; ---------------------------------------------------------------------------

loc_69C0:
                move.l  a0,-(sp)
                movea.l a1,a0
                jsr     (loc_FD78).l
                movea.l (sp)+,a0
                rts
; End of function sub_6936


; =============== S U B R O U T I N E =======================================


sub_69CE:
                lea     ($FFFFD000).w,a1
                move.w  8(a1),d0
                sub.w   8(a0),d0
                add.w   d1,d0
                bmi.s   loc_6A28
                move.w  d1,d3
                add.w   d3,d3
                cmp.w   d3,d0
                bhi.s   loc_6A28
                move.b  $16(a1),d3
                ext.w   d3
                add.w   d3,d2
                move.w  $C(a1),d3
                sub.w   $C(a0),d3
                add.w   d2,d3
                bmi.s   loc_6A28
                move.w  d2,d4
                add.w   d4,d4
                cmp.w   d4,d3
                bcc.s   loc_6A28
                move.w  d0,d5
                cmp.w   d0,d1
                bcc.s   loc_6A10
                add.w   d1,d1
                sub.w   d1,d0
                move.w  d0,d5
                neg.w   d5

loc_6A10:
                move.w  d3,d1
                cmp.w   d3,d2
                bcc.s   loc_6A1C
                sub.w   d4,d3
                move.w  d3,d1
                neg.w   d1

loc_6A1C:
                cmp.w   d1,d5
                bhi.s   loc_6A24
                moveq   #1,d4
                rts
; ---------------------------------------------------------------------------

loc_6A24:
                moveq   #$FFFFFFFF,d4
                rts
; ---------------------------------------------------------------------------

loc_6A28:
                moveq   #0,d4
                rts
; End of function sub_69CE

; ---------------------------------------------------------------------------
off_6A2C:       dc.w unk_6A30-*
                dc.w unk_6A45-off_6A2C
unk_6A30:       dc.b   4
                dc.b $F0, 8, 0, $EA, $F4, $F8, 8, $10, $EA, $F4
                dc.b 0, 8, 0, $EA, $F4, 8, 8, 0, $ED, $F4
unk_6A45:       dc.b   3
                dc.b $F0, 8, 0, $F0, $F4, $F8, 8, $10, $F0, $F4
                dc.b 0, 9, 0, $F3, $F4, 0
; ---------------------------------------------------------------------------

Obj0E:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  Obj0E_Index(pc,d0.w),d1
                jmp     Obj0E_Index(pc,d1.w)
; ---------------------------------------------------------------------------
Obj0E_Index:dc.w Obj0E_Init-*
                dc.w Obj0E_Wait-Obj0E_Index
                dc.w Obj0E_Move-Obj0E_Index
                dc.w Obj0E_Animate-Obj0E_Index
; ---------------------------------------------------------------------------

Obj0E_Init:
                addq.b  #2,$24(a0)
                move.w  #$F0,8(a0)
                move.w  #$DE,$A(a0)
                move.l  #Map_TitleSonic,4(a0)
                move.w  #$2300,2(a0)
                move.b  #1,$19(a0)
                move.b  #$1D,$1F(a0)
                lea     (Anim_TitleSonic).l,a1
                bsr.w   AnimateObject

Obj0E_Wait:
                subq.b  #1,$1F(a0)
                bpl.s   Obj0E_Return
                addq.b  #2,$24(a0)
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------

Obj0E_Return:
                rts
; ---------------------------------------------------------------------------

Obj0E_Move:
                subq.w  #8,$A(a0)
                cmpi.w  #$96,$A(a0)
                bne.s   Obj0E_Display
                addq.b  #2,$24(a0)

Obj0E_Display:
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------
                rts
; ---------------------------------------------------------------------------

Obj0E_Animate:
                lea     (Anim_TitleSonic).l,a1
                bsr.w   AnimateObject
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------
                rts

; =============== S U B R O U T I N E =======================================


Obj0F:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  Obj0F_Index(pc,d0.w),d1
                jsr     Obj0F_Index(pc,d1.w)
                bra.w   DisplaySprite
; End of function Obj0F

; ---------------------------------------------------------------------------
Obj0F_Index:   dc.w Obj0F_Init-*
                dc.w Obj0F_Animate-Obj0F_Index
                dc.w Obj0F_Return-Obj0F_Index
; ---------------------------------------------------------------------------

Obj0F_Init:
                addq.b  #2,$24(a0)
                move.w  #$D0,8(a0)
                move.w  #$130,$A(a0)
                move.l  #Map_PSB,4(a0)
                move.w  #$200,2(a0)
                cmpi.b  #2,$1A(a0)
                bne.s   Obj0F_Animate
                addq.b  #2,$24(a0)

Obj0F_Return:
                rts
; ---------------------------------------------------------------------------

Obj0F_Animate:
                lea     (Anim_PSB).l,a1
                bra.w   AnimateObject
; ---------------------------------------------------------------------------

Anim_TitleSonic: include "Ani/TitleSon.asm"

Anim_PSB: include "Ani/PressStartButton.asm"

; =============== S U B R O U T I N E =======================================


AnimateObject:
                moveq   #0,d0
                move.b  $1C(a0),d0
                cmp.b   $1D(a0),d0
                beq.s   loc_6B54
                move.b  d0,$1D(a0)
                move.b  #0,$1B(a0)
                move.b  #0,$1E(a0)

loc_6B54:
                add.w   d0,d0
                adda.w  (a1,d0.w),a1
                subq.b  #1,$1E(a0)
                bpl.s   locret_6B94
                move.b  (a1),$1E(a0)
                moveq   #0,d1
                move.b  $1B(a0),d1
                move.b  1(a1,d1.w),d0
                bmi.s   loc_6B96

loc_6B70:
                move.b  d0,d1
                andi.b  #$1F,d0
                move.b  d0,$1A(a0)
                move.b  $22(a0),d0
                andi.b  #3,d0
                andi.b  #$FC,1(a0)
                lsr.b   #5,d1
                eor.b   d0,d1
                or.b    d1,1(a0)
                addq.b  #1,$1B(a0)

locret_6B94:
                rts
; ---------------------------------------------------------------------------

loc_6B96:
                addq.b  #1,d0
                bne.s   loc_6BA6
                move.b  #0,$1B(a0)
                move.b  1(a1),d0
                bra.s   loc_6B70
; ---------------------------------------------------------------------------

loc_6BA6:
                addq.b  #1,d0
                bne.s   loc_6BBA
                move.b  2(a1,d1.w),d0
                sub.b   d0,$1B(a0)
                sub.b   d0,d1
                move.b  1(a1,d1.w),d0
                bra.s   loc_6B70
; ---------------------------------------------------------------------------

loc_6BBA:
                addq.b  #1,d0
                bne.s   loc_6BC4
                move.b  2(a1,d1.w),$1C(a0)

loc_6BC4:
                addq.b  #1,d0
                bne.s   loc_6BCC
                addq.b  #2,$24(a0)

loc_6BCC:
                addq.b  #1,d0
                bne.s   locret_6BDA
                move.b  #0,$1B(a0)
                clr.b   $25(a0)

locret_6BDA:
                rts
; End of function AnimateObject

; ---------------------------------------------------------------------------
Map_PSB:        include "Map/PressStartButton.asm"

Map_TitleSonic: include "Map/TitleSon.asm"

; ---------------------------------------------------------------------------

ObjBallHog:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  ObjBallHog_Index(pc,d0.w),d1
                jmp     ObjBallHog_Index(pc,d1.w)
; ---------------------------------------------------------------------------
ObjBallHog_Index:dc.w ObjBallHog_Init-*
                dc.w ObjBallHog_Action-ObjBallHog_Index
                dc.w ObjBallHog_Display-ObjBallHog_Index
                dc.w ObjBallHog_Delete-ObjBallHog_Index
; ---------------------------------------------------------------------------

ObjBallHog_Init:
                move.b  #$13,$16(a0)
                move.b  #8,$17(a0)
                move.l  #Map_BallHog,4(a0)
                move.w  #$2400,2(a0)
                move.b  #4,1(a0)
                move.b  #4,$19(a0)
                move.b  #5,$20(a0)
                move.b  #$C,$18(a0)
                bsr.w   ObjectMoveAndFall
                jsr     (ObjectHitFloor).l
                tst.w   d1
                bpl.s   ObjBallHog_Return
                add.w   d1,$C(a0)
                move.w  #0,$12(a0)
                addq.b  #2,$24(a0)

ObjBallHog_Return:
                rts
; ---------------------------------------------------------------------------

ObjBallHog_Action:
                moveq   #0,d0
                move.b  $25(a0),d0
                move.w  ObjBallHog_Index2(pc,d0.w),d1
                jsr     ObjBallHog_Index2(pc,d1.w)
                lea     (unk_7244).l,a1
                bsr.w   AnimateObject
                bra.w   MarkObjectGone
; ---------------------------------------------------------------------------
ObjBallHog_Index2:dc.w loc_6FB6-*
                dc.w loc_701C-ObjBallHog_Index2
; ---------------------------------------------------------------------------

loc_6FB6:
                subq.w  #1,$30(a0)
                bpl.s   loc_6FE6
                addq.b  #2,$25(a0)
                move.w  #$FF,$30(a0)
                move.w  #$40,$10(a0) 
                move.b  #1,$1C(a0)
                bchg    #0,$22(a0)
                bne.s   loc_6FDE
                neg.w   $10(a0)

loc_6FDE:
                move.b  #0,$32(a0)
                rts
; ---------------------------------------------------------------------------

loc_6FE6:
                tst.b   $32(a0)
                bne.s   locret_6FF4
                cmpi.b  #2,$1A(a0)
                beq.s   ObjBallHog_MakeBall

locret_6FF4:
                rts
; ---------------------------------------------------------------------------

ObjBallHog_MakeBall:
                move.b  #1,$32(a0)
                bsr.w   FindFreeObjectSlot
                bne.s   ObjBallHog_MakeFail
                move.b  #$20,0(a1) 
                move.w  8(a0),8(a1)
                move.w  $C(a0),$C(a1)
                addi.w  #$10,$C(a1)

ObjBallHog_MakeFail:
                rts
; ---------------------------------------------------------------------------

loc_701C:
                subq.w  #1,$30(a0)
                bmi.s   loc_7032
                bsr.w   ObjectMove
                jsr     (ObjectHitFloor).l
                add.w   d1,$C(a0)
                rts
; ---------------------------------------------------------------------------

loc_7032:
                subq.b  #2,$25(a0)
                move.w  #$3B,$30(a0) 
                move.w  #0,$10(a0)
                move.b  #0,$1C(a0)
                tst.b   1(a0)
                bpl.s   locret_7054
                move.b  #2,$1C(a0)

locret_7054:
                rts
; ---------------------------------------------------------------------------

ObjBallHog_Display:
                bsr.w   DisplaySprite
                rts
; ---------------------------------------------------------------------------

ObjBallHog_Delete:
                bsr.w   DeleteObject
                rts

; =============== S U B R O U T I N E =======================================


ObjBallHogBall:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  ObjBallHogBall_Index(pc,d0.w),d1
                jmp     ObjBallHogBall_Index(pc,d1.w)
; End of function ObjBallHogBall

; ---------------------------------------------------------------------------
ObjBallHogBall_Index:dc.w ObjBallHogBall_Init-*
                dc.w ObjBallHogBall_ChkFloor-ObjBallHogBall_Index
                dc.w ObjBallHogBall_Delete-ObjBallHogBall_Index
; ---------------------------------------------------------------------------

ObjBallHogBall_Init:
                addq.b  #2,$24(a0)
                move.l  #Map_BallhogBall,4(a0)
                move.w  #$2418,2(a0)
                move.b  #4,1(a0)
                move.b  #3,$19(a0)
                move.b  #$87,$20(a0)
                move.b  #8,$18(a0)
                move.w  #$18,$30(a0)

ObjBallHogBall_ChkFloor:
                btst    #7,$22(a0)
                bne.s   ObjBallHogBall_Explode
                tst.w   $30(a0)
                bne.s   loc_70D2
                jsr     (ObjectHitFloor).l
                tst.w   d1
                bpl.s   loc_70D6
                add.w   d1,$C(a0)

ObjBallHogBall_Explode:
                move.b  #$24,0(a0) 
                move.b  #0,$24(a0)
                bra.w   ObjBallHogExplosion
; ---------------------------------------------------------------------------

loc_70D2:
                subq.w  #1,$30(a0)

loc_70D6:
                bsr.w   ObjectMoveAndFall
                bsr.w   DisplaySprite
                move.w  ($FFFFF72E).w,d0
                addi.w  #$E0,d0
                cmp.w   $C(a0),d0
                bcs.s   ObjBallHogBall_Delete
                rts
; ---------------------------------------------------------------------------

ObjBallHogBall_Delete:
                bsr.w   DeleteObject
                rts
; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR sub_7A5E

ObjBallHogExplosion:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  ObjBallHogExplosion_Index(pc,d0.w),d1
                jmp     ObjBallHogExplosion_Index(pc,d1.w)
; END OF FUNCTION CHUNK FOR sub_7A5E
; ---------------------------------------------------------------------------
ObjBallHogExplosion_Index:dc.w ObjBallHogExplosion_Init-*
                dc.w loc_7146-ObjBallHogExplosion_Index
; ---------------------------------------------------------------------------

ObjBallHogExplosion_Init:
                addq.b  #%10,$24(a0)
                move.l  #unk_72A2,4(a0)
                move.w  #$41C,2(a0)
                move.b  #4,1(a0)
                move.b  #2,$19(a0)
                move.b  #0,$20(a0)
                move.b  #$C,$18(a0)
                move.b  #9,$1E(a0)
                move.b  #0,$1A(a0)
                move.w  #$A5,d0
                jsr     (PlaySound_Special).l

loc_7146:
                subq.b  #1,$1E(a0)
                bpl.s   loc_7160
                move.b  #9,$1E(a0)
                addq.b  #1,$1A(a0)
                cmpi.b  #4,$1A(a0)
                beq.w   DeleteObject

loc_7160:
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------

ObjEnemyExplode:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  ObjEnemyExplode_Index(pc,d0.w),d1
                jmp     ObjEnemyExplode_Index(pc,d1.w)
; ---------------------------------------------------------------------------
ObjEnemyExplode_Index:dc.w entry_7178-ObjEnemyExplode_Index
                dc.w entry_7194-ObjEnemyExplode_Index
                dc.w entry_71d4-ObjEnemyExplode_Index
; ---------------------------------------------------------------------------

entry_7178:
                addq.b  #2,$24(a0)
                bsr.w   FindFreeObjectSlot
                bne.s   entry_7194
                move.b  #$28,0(a1) 
                move.w  8(a0),8(a1)
                move.w  $C(a0),$C(a1)

entry_7194:
                addq.b  #2,$24(a0)
                move.l  #unk_72C2,4(a0)
                move.w  #$5A0,2(a0)
                move.b  #4,1(a0)
                move.b  #2,$19(a0)
                move.b  #0,$20(a0)
                move.b  #$C,$18(a0)
                move.b  #7,$1E(a0)
                move.b  #0,$1A(a0)
                move.w  #$C1,d0
                jsr     (PlaySound_Special).l

entry_71d4:
                subq.b  #1,$1E(a0)
                bpl.s   loc_71EE
                move.b  #7,$1E(a0)
                addq.b  #1,$1A(a0)
                cmpi.b  #5,$1A(a0)
                beq.w   DeleteObject

loc_71EE:
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------

Obj3F:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  word_7200(pc,d0.w),d1
                jmp     word_7200(pc,d1.w)
; ---------------------------------------------------------------------------
word_7200:      dc.w entry_7204-*
                dc.w entry_71d4-word_7200
; ---------------------------------------------------------------------------

entry_7204:
                addq.b  #2,$24(a0)
                move.l  #unk_7308,4(a0)
                move.w  #$5A0,2(a0)
                move.b  #4,1(a0)
                move.b  #2,$19(a0)
                move.b  #0,$20(a0)
                move.b  #$C,$18(a0)
                move.b  #7,$1E(a0)
                move.b  #0,$1A(a0)
                move.w  #$C4,d0
                jmp     (PlaySound_Special).l
; ---------------------------------------------------------------------------
unk_7244:       dc.b   0
                dc.b   6
                dc.b   0
                dc.b  $A
                dc.b   0
                dc.b $10
                dc.b  $F
                dc.b   0
                dc.b $FF
                dc.b   0
                dc.b  $B
                dc.b   1
                dc.b   0
                dc.b $21 ; !
                dc.b   0
                dc.b $FF
                dc.b $14
                dc.b   0
                dc.b   2
                dc.b   0
                dc.b $FE
                dc.b   1

Map_BallHog:    include "Map/Ballhog.asm"

Map_BallhogBall:       include "Map/BallhogBall.asm"

unk_72A2:       dc.b   0
                dc.b   8
                dc.b   0
                dc.b  $E
                dc.b   0
                dc.b $14
                dc.b   0
                dc.b $1A
                dc.b   1
                dc.b $F4
                dc.b  $A
                dc.b   0
                dc.b   0
                dc.b $F4
                dc.b   1
                dc.b $F4
                dc.b  $A
                dc.b   0
                dc.b   9
                dc.b $F4
                dc.b   1
                dc.b $F4
                dc.b  $A
                dc.b   0
                dc.b $12
                dc.b $F4
                dc.b   1
                dc.b $F4
                dc.b  $A
                dc.b   0
                dc.b $1B
                dc.b $F4

unk_72C2:       dc.b   0
                dc.b  $A
                dc.b   0
                dc.b $10
                dc.b   0
                dc.b $16
                dc.b   0
                dc.b $1C
                dc.b   0
                dc.b $31 ; 1
                dc.b   1
                dc.b $F8
                dc.b   9
                dc.b   0
                dc.b   0
                dc.b $F4
                dc.b   1
                dc.b $F0
                dc.b  $F
                dc.b   0
                dc.b   6
                dc.b $F0
                dc.b   1
                dc.b $F0
                dc.b  $F
                dc.b   0
                dc.b $16
                dc.b $F0
                dc.b   4
                dc.b $EC
                dc.b  $A
                dc.b   0
                dc.b $26 ; &
                dc.b $EC
                dc.b $EC
                dc.b   5
                dc.b   0
                dc.b $2F ; /
                dc.b   4
                dc.b   4
                dc.b   5
                dc.b $18
                dc.b $2F ; /
                dc.b $EC
                dc.b $FC
                dc.b  $A
                dc.b $18
                dc.b $26 ; &
                dc.b $FC
                dc.b   4
                dc.b $EC
                dc.b  $A
                dc.b   0
                dc.b $33 ; 3
                dc.b $EC
                dc.b $EC
                dc.b   5
                dc.b   0
                dc.b $3C ; <
                dc.b   4
                dc.b   4
                dc.b   5
                dc.b $18
                dc.b $3C ; <
                dc.b $EC
                dc.b $FC
                dc.b  $A
                dc.b $18
                dc.b $33 ; 3
                dc.b $FC

unk_7308:       dc.b $FF
                dc.b $C4
                dc.b   0
                dc.b  $A
                dc.b   0
                dc.b $10
                dc.b $FF
                dc.b $D6
                dc.b $FF
                dc.b $EB
                dc.b   1
                dc.b $F0
                dc.b  $F
                dc.b   0
                dc.b $40 ; @
                dc.b $F0
                dc.b   1
                dc.b $F0
                dc.b  $F
                dc.b   0
                dc.b $50 ; P
                dc.b $F0
; ---------------------------------------------------------------------------

ObjAnimals:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  ObjAnimals_Index(pc,d0.w),d1
                jmp     ObjAnimals_Index(pc,d1.w)
; ---------------------------------------------------------------------------
ObjAnimals_Index:dc.w entry_7382-ObjAnimals_Index
                dc.w entry_7418-ObjAnimals_Index
                dc.w entry_7472-ObjAnimals_Index
                dc.w entry_74a8-ObjAnimals_Index
                dc.w entry_7472-ObjAnimals_Index
                dc.w entry_7472-ObjAnimals_Index
                dc.w entry_7472-ObjAnimals_Index
                dc.w entry_74a8-ObjAnimals_Index
                dc.w entry_7472-ObjAnimals_Index
byte_733E:      dc.b 0, 1, 2, 3, 4, 5, 6, 3, 4, 1, 0, 5
word_734A:      dc.w -$200
                dc.w -$400
                dc.l unk_7542
                dc.w -$200
                dc.w -$300
                dc.l unk_755A
                dc.w -$140
                dc.w -$200
                dc.l unk_7542
                dc.w -$100
                dc.w -$180
                dc.l unk_755A
                dc.w -$180
                dc.w -$300
                dc.l unk_7572
                dc.w -$300
                dc.w -$400
                dc.l unk_755A
                dc.w -$280
                dc.w -$380
                dc.l unk_7572
; ---------------------------------------------------------------------------

entry_7382:
                addq.b  #2,$24(a0)
                bsr.w   RandomNumber
                andi.w  #1,d0
                moveq   #0,d1
                move.b  ($FFFFFE10).w,d1
                add.w   d1,d1
                add.w   d0,d1
                move.b  byte_733E(pc,d1.w),d0
                move.b  d0,$30(a0)
                lsl.w   #3,d0
                lea     word_734A(pc,d0.w),a1
                move.w  (a1)+,$32(a0)
                move.w  (a1)+,$34(a0)
                move.l  (a1)+,4(a0)
                move.w  #$580,2(a0)
                btst    #0,$30(a0)
                beq.s   loc_73C6
                move.w  #$592,2(a0)

loc_73C6:
                move.b  #$C,$16(a0)
                move.b  #4,1(a0)
                bset    #0,1(a0)
                move.b  #6,$19(a0)
                move.b  #8,$18(a0)
                move.b  #7,$1E(a0)
                move.b  #2,$1A(a0)
                move.w  #$FC00,$12(a0)
                tst.b   ($FFFFF7A7).w
                bne.s   loc_7438
                bsr.w   FindFreeObjectSlot
                bne.s   loc_7414
                move.b  #$29,0(a1)
                move.w  8(a0),8(a1)
                move.w  $C(a0),$C(a1)

loc_7414:
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------

entry_7418:
                tst.b   1(a0)
                bpl.w   DeleteObject
                bsr.w   ObjectMoveAndFall
                tst.w   $12(a0)
                bmi.s   loc_746E
                jsr     (ObjectHitFloor).l
                tst.w   d1
                bpl.s   loc_746E
                add.w   d1,$C(a0)

loc_7438:
                move.w  $32(a0),$10(a0)
                move.w  $34(a0),$12(a0)
                move.b  #1,$1A(a0)
                move.b  $30(a0),d0
                add.b   d0,d0
                addq.b  #4,d0
                move.b  d0,$24(a0)
                tst.b   ($FFFFF7A7).w
                beq.s   loc_746E
                btst    #4,($FFFFFE0F).w
                beq.s   loc_746E
                neg.w   $10(a0)
                bchg    #0,1(a0)

loc_746E:
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------

entry_7472:
                bsr.w   ObjectMoveAndFall
                move.b  #1,$1A(a0)
                tst.w   $12(a0)
                bmi.s   loc_749C
                move.b  #0,$1A(a0)
                jsr     (ObjectHitFloor).l
                tst.w   d1
                bpl.s   loc_749C
                add.w   d1,$C(a0)
                move.w  $34(a0),$12(a0)

loc_749C:
                tst.b   1(a0)
                bpl.w   DeleteObject
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------

entry_74a8:
                bsr.w   ObjectMove
                addi.w  #$18,$12(a0)
                tst.w   $12(a0)
                bmi.s   loc_74CC
                jsr     (ObjectHitFloor).l
                tst.w   d1
                bpl.s   loc_74CC
                add.w   d1,$C(a0)
                move.w  $34(a0),$12(a0)

loc_74CC:
                subq.b  #1,$1E(a0)
                bpl.s   loc_74E2
                move.b  #1,$1E(a0)
                addq.b  #1,$1A(a0)
                andi.b  #1,$1A(a0)

loc_74E2:
                tst.b   1(a0)
                bpl.w   DeleteObject
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------

ObjPoints:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  ObjPoints_Index(pc,d0.w),d1
                jsr     ObjPoints_Index(pc,d1.w)
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------
ObjPoints_Index:dc.w entry_7504-ObjPoints_Index
                dc.w entry_752e-ObjPoints_Index
; ---------------------------------------------------------------------------

entry_7504:
                addq.b  #2,$24(a0)
                move.l  #unk_758A,4(a0)
                move.w  #$2797,2(a0)
                move.b  #4,1(a0)
                move.b  #1,$19(a0)
                move.b  #8,$18(a0)
                move.w  #$FD00,$12(a0)

entry_752e:
                tst.w   $12(a0)
                bpl.w   DeleteObject
                bsr.w   ObjectMove
                addi.w  #$18,$12(a0)
                rts
; ---------------------------------------------------------------------------
unk_7542:       dc.b   0
                dc.b  $C
                dc.b   0
                dc.b $12
                dc.b   0
                dc.b   6
                dc.b   1
                dc.b $F4
                dc.b   6
                dc.b   0
                dc.b   0
                dc.b $F8
                dc.b   1
                dc.b $F4
                dc.b   6
                dc.b   0
                dc.b   6
                dc.b $F8
                dc.b   1
                dc.b $F4
                dc.b   6
                dc.b   0
                dc.b  $C
                dc.b $F8
unk_755A:       dc.b   0
                dc.b  $C
                dc.b   0
                dc.b $12
                dc.b   0
                dc.b   6
                dc.b   1
                dc.b $F4
                dc.b   6
                dc.b   0
                dc.b   0
                dc.b $F8
                dc.b   1
                dc.b $FC
                dc.b   5
                dc.b   0
                dc.b   6
                dc.b $F8
                dc.b   1
                dc.b $FC
                dc.b   5
                dc.b   0
                dc.b  $A
                dc.b $F8
unk_7572:       dc.b   0
                dc.b  $C
                dc.b   0
                dc.b $12
                dc.b   0
                dc.b   6
                dc.b   1
                dc.b $F4
                dc.b   6
                dc.b   0
                dc.b   0
                dc.b $F8
                dc.b   1
                dc.b $FC
                dc.b   9
                dc.b   0
                dc.b   6
                dc.b $F4
                dc.b   1
                dc.b $FC
                dc.b   9
                dc.b   0
                dc.b  $C
                dc.b $F4
unk_758A:       dc.b   0
                dc.b   8
                dc.b   0
                dc.b  $E
                dc.b   0
                dc.b $14
                dc.b   0
                dc.b $1A
                dc.b   1
                dc.b $FC
                dc.b   4
                dc.b   0
                dc.b   0
                dc.b $F8
                dc.b   1
                dc.b $FC
                dc.b   4
                dc.b   0
                dc.b   2
                dc.b $F8
                dc.b   1
                dc.b $FC
                dc.b   4
                dc.b   0
                dc.b   4
                dc.b $F8
                dc.b   1
                dc.b $FC
                dc.b   8
                dc.b   0
                dc.b   6
                dc.b $F4
; ---------------------------------------------------------------------------

ObjCrabmeat:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  ObjCrabmeat_Index(pc,d0.w),d1
                jmp     ObjCrabmeat_Index(pc,d1.w)
; ---------------------------------------------------------------------------
ObjCrabmeat_Index:dc.w ObjCrabmeat_Init-ObjCrabmeat_Index
                dc.w ObjCrabmeat_Main-ObjCrabmeat_Index
                dc.w entry_7772-ObjCrabmeat_Index
                dc.w entry_7778-ObjCrabmeat_Index
                dc.w entry_77ae-ObjCrabmeat_Index
; ---------------------------------------------------------------------------

ObjCrabmeat_Init:
                move.b  #$10,$16(a0)
                move.b  #8,$17(a0)
                move.l  #Map_Crabmeat,4(a0)
                move.w  #$400,2(a0)
                move.b  #4,1(a0)
                move.b  #3,$19(a0)
                move.b  #6,$20(a0)
                move.b  #$15,$18(a0)
                bsr.w   ObjectMoveAndFall
                jsr     (ObjectHitFloor).l
                tst.w   d1
                bpl.s   locret_7614
                add.w   d1,$C(a0)
                move.b  d3,$26(a0)
                move.w  #0,$12(a0)
                addq.b  #2,$24(a0)

locret_7614:
                rts
; ---------------------------------------------------------------------------

ObjCrabmeat_Main:
                moveq   #0,d0
                move.b  $25(a0),d0
                move.w  index_7632(pc,d0.w),d1
                jsr     index_7632(pc,d1.w)
                lea     (Ani_Crabmeat).l,a1
                bsr.w   AnimateObject
                bra.w   MarkObjectGone
; ---------------------------------------------------------------------------
index_7632:     dc.w entry_7636-index_7632
                dc.w entry_76d4-index_7632
; ---------------------------------------------------------------------------

entry_7636:
                subq.w  #1,$30(a0)
                bpl.s   locret_7670
                tst.b   1(a0)
                bpl.s   loc_764A
                bchg    #1,$32(a0)
                bne.s   loc_7672

loc_764A:
                addq.b  #2,$25(a0)
                move.w  #$7F,$30(a0)
                move.w  #$80,$10(a0)
                bsr.w   sub_7742
                addq.b  #3,d0
                move.b  d0,$1C(a0)
                bchg    #0,$22(a0)
                bne.s   locret_7670
                neg.w   $10(a0)

locret_7670:
                rts
; ---------------------------------------------------------------------------

loc_7672:
                move.w  #$3B,$30(a0) 
                move.b  #6,$1C(a0)
                bsr.w   FindFreeObjectSlot
                bne.s   loc_76A8
                move.b  #$1F,0(a1)
                move.b  #6,$24(a1)
                move.w  8(a0),8(a1)
                subi.w  #$10,8(a1)
                move.w  $C(a0),$C(a1)
                move.w  #$FF00,$10(a1)

loc_76A8:
                bsr.w   FindFreeObjectSlot
                bne.s   locret_76D2
                move.b  #$1F,0(a1)
                move.b  #6,$24(a1)
                move.w  8(a0),8(a1)
                addi.w  #$10,8(a1)
                move.w  $C(a0),$C(a1)
                move.w  #$100,$10(a1)

locret_76D2:
                rts
; ---------------------------------------------------------------------------

entry_76d4:
                subq.w  #1,$30(a0)
                bmi.s   loc_7728
                bsr.w   ObjectMove
                bchg    #0,$32(a0)
                bne.s   loc_770E
                move.w  8(a0),d3
                addi.w  #$10,d3
                btst    #0,$22(a0)
                beq.s   loc_76FA
                subi.w  #$20,d3 

loc_76FA:
                jsr     (loc_105F4).l
                cmpi.w  #$FFF8,d1
                blt.s   loc_7728
                cmpi.w  #$C,d1
                bge.s   loc_7728
                rts
; ---------------------------------------------------------------------------

loc_770E:
                jsr     (ObjectHitFloor).l
                add.w   d1,$C(a0)
                move.b  d3,$26(a0)
                bsr.w   sub_7742
                addq.b  #3,d0
                move.b  d0,$1C(a0)
                rts
; ---------------------------------------------------------------------------

loc_7728:
                subq.b  #2,$25(a0)
                move.w  #$3B,$30(a0) 
                move.w  #0,$10(a0)
                bsr.w   sub_7742
                move.b  d0,$1C(a0)
                rts

; =============== S U B R O U T I N E =======================================


sub_7742:
                moveq   #0,d0
                move.b  $26(a0),d3
                bmi.s   loc_775E
                cmpi.b  #6,d3
                bcs.s   locret_775C
                moveq   #1,d0
                btst    #0,$22(a0)
                bne.s   locret_775C
                moveq   #2,d0

locret_775C:
                rts
; ---------------------------------------------------------------------------

loc_775E:
                cmpi.b  #$FA,d3
                bhi.s   locret_7770
                moveq   #2,d0
                btst    #0,$22(a0)
                bne.s   locret_7770
                moveq   #1,d0

locret_7770:
                rts
; End of function sub_7742

; ---------------------------------------------------------------------------

entry_7772:
                bsr.w   DeleteObject
                rts
; ---------------------------------------------------------------------------

entry_7778:
                addq.b  #2,$24(a0)
                move.l  #Map_Crabmeat,4(a0)
                move.w  #$400,2(a0)
                move.b  #4,1(a0)
                move.b  #3,$19(a0)
                move.b  #$87,$20(a0)
                move.b  #8,$18(a0)
                move.w  #$FC00,$12(a0)
                move.b  #7,$1C(a0)

entry_77ae:
                lea     (Ani_Crabmeat).l,a1
                bsr.w   AnimateObject
                bsr.w   ObjectMoveAndFall
                bsr.w   DisplaySprite
                move.w  ($FFFFF72E).w,d0
                addi.w  #$E0,d0
                cmp.w   $C(a0),d0
                bcs.s   loc_77D0
                rts
; ---------------------------------------------------------------------------

loc_77D0:
                bra.w   DeleteObject
; ---------------------------------------------------------------------------
Ani_Crabmeat:   include "Ani/Crabmeat.asm"

Map_Crabmeat:   include "Map/Crabmeat.asm"

; ---------------------------------------------------------------------------

ObjBuzzBomber:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  ObjBuzzBomber_Index(pc,d0.w),d1
                jmp     ObjBuzzBomber_Index(pc,d1.w)
; ---------------------------------------------------------------------------
ObjBuzzBomber_Index:dc.w ObjBuzzBomber_Init-ObjBuzzBomber_Index
                dc.w ObjBuzzBomber_Main-ObjBuzzBomber_Index
                dc.w ObjBuzzBomber_Delete-ObjBuzzBomber_Index
; ---------------------------------------------------------------------------

ObjBuzzBomber_Init:
                addq.b  #2,$24(a0)
                move.l  #unk_7AF0,4(a0)
                move.w  #$444,2(a0)
                move.b  #4,1(a0)
                move.b  #3,$19(a0)
                move.b  #8,$20(a0)
                move.b  #$18,$18(a0)

ObjBuzzBomber_Main:
                moveq   #0,d0
                move.b  $25(a0),d0
                move.w  index_78f2(pc,d0.w),d1
                jsr     index_78f2(pc,d1.w)
                lea     (Ani_BuzzBomber).l,a1
                bsr.w   AnimateObject
                bra.w   MarkObjectGone
; ---------------------------------------------------------------------------
index_78f2:     dc.w entry_78F6-index_78f2
                dc.w entry_798c-index_78f2
; ---------------------------------------------------------------------------

entry_78F6:
                subq.w  #1,$32(a0)
                bpl.s   locret_7926
                btst    #1,$34(a0)
                bne.s   loc_7928
                addq.b  #2,$25(a0)
                move.w  #$7F,$32(a0)
                move.w  #$400,$10(a0)
                move.b  #1,$1C(a0)
                btst    #0,$22(a0)
                bne.s   locret_7926
                neg.w   $10(a0)

locret_7926:
                rts
; ---------------------------------------------------------------------------

loc_7928:
                bsr.w   FindFreeObjectSlot
                bne.s   locret_798A
                move.b  #$23,0(a1) 
                move.w  8(a0),8(a1)
                move.w  $C(a0),$C(a1)
                addi.w  #$1C,$C(a1)
                move.w  #$200,$12(a1)
                move.w  #$200,$10(a1)
                move.w  #$18,d0
                btst    #0,$22(a0)
                bne.s   loc_7964
                neg.w   d0
                neg.w   $10(a1)

loc_7964:
                add.w   d0,8(a1)
                move.b  $22(a0),$22(a1)
                move.w  #$E,$32(a1)
                move.l  a0,$3C(a1)
                move.b  #1,$34(a0)
                move.w  #$3B,$32(a0) 
                move.b  #2,$1C(a0)

locret_798A:
                rts
; ---------------------------------------------------------------------------

entry_798c:
                subq.w  #1,$32(a0)
                bmi.s   loc_79C2
                bsr.w   ObjectMove
                tst.b   $34(a0)
                bne.s   locret_79E4
                move.w  ($FFFFD008).w,d0
                sub.w   8(a0),d0
                bpl.s   loc_79A8
                neg.w   d0

loc_79A8:
                cmpi.w  #$60,d0 
                bcc.s   locret_79E4
                tst.b   1(a0)
                bpl.s   locret_79E4
                move.b  #2,$34(a0)
                move.w  #$1D,$32(a0)
                bra.s   loc_79D4
; ---------------------------------------------------------------------------

loc_79C2:
                move.b  #0,$34(a0)
                bchg    #0,$22(a0)
                move.w  #$3B,$32(a0) 

loc_79D4:
                subq.b  #2,$25(a0)
                move.w  #0,$10(a0)
                move.b  #0,$1C(a0)

locret_79E4:
                rts
; ---------------------------------------------------------------------------

ObjBuzzBomber_Delete:
                bsr.w   DeleteObject
                rts

; =============== S U B R O U T I N E =======================================


ObjBuzzMissile:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  ObjBuzzMissile_Index(pc,d0.w),d1
                jmp     ObjBuzzMissile_Index(pc,d1.w)
; End of function ObjBuzzMissile

; ---------------------------------------------------------------------------
ObjBuzzMissile_Index:dc.w entry_7a04-ObjBuzzMissile_Index
                dc.w entry_7a4e-ObjBuzzMissile_Index
                dc.w entry_7a6c-ObjBuzzMissile_Index
                dc.w entry_7ab2-ObjBuzzMissile_Index
                dc.w entry_7ab8-ObjBuzzMissile_Index
; ---------------------------------------------------------------------------

entry_7a04:
                subq.w  #1,$32(a0)
                bpl.s   sub_7A5E
                addq.b  #2,$24(a0)
                move.l  #unk_7BC0,4(a0)
                move.w  #$2444,2(a0)
                move.b  #4,1(a0)
                move.b  #3,$19(a0)
                move.b  #8,$18(a0)
                andi.b  #3,$22(a0)
                tst.b   $28(a0)
                beq.s   entry_7a4e
                move.b  #8,$24(a0)
                move.b  #$87,$20(a0)
                move.b  #1,$1C(a0)
                bra.s   loc_7AC2
; ---------------------------------------------------------------------------

entry_7a4e:
                bsr.s   sub_7A5E
                lea     (Ani_BuzzMissile).l,a1
                bsr.w   AnimateObject
                bra.w   DisplaySprite

; =============== S U B R O U T I N E =======================================


sub_7A5E:

                movea.l $3C(a0),a1
                cmpi.b  #$27,0(a1) 
                beq.s   entry_7ab2
                rts
; ---------------------------------------------------------------------------

entry_7a6c:
                btst    #7,$22(a0)
                bne.s   loc_7AA2
                move.b  #$87,$20(a0)
                move.b  #1,$1C(a0)
                bsr.w   ObjectMove
                lea     (Ani_BuzzMissile).l,a1
                bsr.w   AnimateObject
                bsr.w   DisplaySprite
                move.w  ($FFFFF72E).w,d0
                addi.w  #$E0,d0
                cmp.w   $C(a0),d0
                bcs.s   entry_7ab2
                rts
; ---------------------------------------------------------------------------

loc_7AA2:
                move.b  #$24,0(a0) 
                move.b  #0,$24(a0)
                bra.w   ObjBallHogExplosion
; ---------------------------------------------------------------------------

entry_7ab2:
                bsr.w   DeleteObject
                rts
; End of function sub_7A5E

; ---------------------------------------------------------------------------

entry_7ab8:
                tst.b   1(a0)
                bpl.s   entry_7ab2
                bsr.w   ObjectMove

loc_7AC2:
                lea     (Ani_BuzzMissile).l,a1
                bsr.w   AnimateObject
                bsr.w   DisplaySprite
                rts
; ---------------------------------------------------------------------------
Ani_BuzzBomber: include "Ani/BuzzBomber.asm"

Ani_BuzzMissile:include "Ani/BuzzMissile.asm"

unk_7AF0:       include "Map/BuzzBomber.asm"

unk_7BC0:       include "Map/BuzzMissile.asm"
; ---------------------------------------------------------------------------

ObjRing:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  ObjRing_Index(pc,d0.w),d1
                jmp     ObjRing_Index(pc,d1.w)
; ---------------------------------------------------------------------------
ObjRing_Index:  dc.w entry_7c18-ObjRing_Index
                dc.w entry_7cd0-ObjRing_Index
                dc.w entry_7cf8-ObjRing_Index
                dc.w entry_7d1e-ObjRing_Index
                dc.w entry_7d2c-ObjRing_Index
unk_7BF8:       dc.b $10
byte_7BF9:      dc.b 0, $18, 0, $20, 0
                dc.b 0, $10, 0, $18, 0
                dc.b $20, $10, $10, $18, $18
                dc.b $20, $20, $F0, $10, $E8
                dc.b $18, $E0, $20, $10, 8
                dc.b $18, $10, $F0, 8, $E8
                dc.b $10
; ---------------------------------------------------------------------------

entry_7c18:
                lea     ($FFFFFC00).w,a2
                moveq   #0,d0
                move.b  $23(a0),d0
                lea     2(a2,d0.w),a2
                move.b  (a2),d4
                move.b  $28(a0),d1
                move.b  d1,d0
                andi.w  #7,d1
                cmpi.w  #7,d1
                bne.s   loc_7C3A
                moveq   #6,d1

loc_7C3A:
                swap    d1
                move.w  #0,d1
                lsr.b   #4,d0
                add.w   d0,d0
                move.b  unk_7BF8(pc,d0.w),d5
                ext.w   d5
                move.b  byte_7BF9(pc,d0.w),d6
                ext.w   d6
                movea.l a0,a1
                move.w  8(a0),d2
                move.w  $C(a0),d3
                lsr.b   #1,d4
                bcs.s   loc_7CBC
                bclr    #7,(a2)
                bra.s   loc_7C74
; ---------------------------------------------------------------------------

loc_7C64:
                swap    d1
                lsr.b   #1,d4
                bcs.s   loc_7CBC
                bclr    #7,(a2)
                bsr.w   FindFreeObjectSlot
                bne.s   loc_7CC8

loc_7C74:
                move.b  #$25,0(a1) 
                addq.b  #2,$24(a1)
                move.w  d2,8(a1)
                move.w  8(a0),$32(a1)
                move.w  d3,$C(a1)
                move.l  #Map_Signpost_Sparkle,4(a1)
                move.w  #$27B2,2(a1)
                move.b  #4,1(a1)
                move.b  #2,$19(a1)
                move.b  #$47,$20(a1) 
                move.b  #8,$18(a1)
                move.b  $23(a0),$23(a1)
                move.b  d1,$34(a1)

loc_7CBC:
                addq.w  #1,d1
                add.w   d5,d2
                add.w   d6,d3
                swap    d1
                dbf     d1,loc_7C64

loc_7CC8:
                btst    #0,(a2)
                bne.w   DeleteObject

entry_7cd0:
                move.b  ($FFFFFEC3).w,$1A(a0)
                bsr.w   DisplaySprite
                move.w  $32(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.s   entry_7d2c
                rts
; ---------------------------------------------------------------------------

entry_7cf8:
                addq.b  #2,$24(a0)
                move.b  #0,$20(a0)
                move.b  #1,$19(a0)
                bsr.w   sub_7D30
                lea     ($FFFFFC00).w,a2
                moveq   #0,d0
                move.b  $23(a0),d0
                move.b  $34(a0),d1
                bset    d1,2(a2,d0.w)

entry_7d1e:
                lea     (Ani_ObjRing).l,a1
                bsr.w   AnimateObject
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------

entry_7d2c:
                bra.w   DeleteObject

; =============== S U B R O U T I N E =======================================


sub_7D30:
                addq.w  #1,($FFFFFE20).w
                ori.b   #1,($FFFFFE1D).w
                move.w  #$B5,d0
                cmpi.w  #$32,($FFFFFE20).w 
                bcs.s   loc_7D6A
                bset    #0,($FFFFFE1B).w
                beq.s   loc_7D5E
                cmpi.w  #$64,($FFFFFE20).w 
                bcs.s   loc_7D6A
                bset    #1,($FFFFFE1B).w
                bne.s   loc_7D6A

loc_7D5E:
                addq.b  #1,($FFFFFE12).w
                addq.b  #1,($FFFFFE1C).w
                move.w  #$88,d0

loc_7D6A:
                jmp     (PlaySound_Special).l
; End of function sub_7D30


; =============== S U B R O U T I N E =======================================


Obj37:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  index_7d7e(pc,d0.w),d1
                jmp     index_7d7e(pc,d1.w)
; End of function Obj37

; ---------------------------------------------------------------------------
index_7d7e:     dc.w entry_7d88-index_7d7e
                dc.w entry_7e48-index_7d7e
                dc.w entry_7e9a-index_7d7e
                dc.w entry_7eae-index_7d7e
                dc.w entry_7ebc-index_7d7e
; ---------------------------------------------------------------------------

entry_7d88:
                movea.l a0,a1
                moveq   #0,d5
                move.w  ($FFFFFE20).w,d5
                moveq   #$20,d0 
                cmp.w   d0,d5
                bcs.s   loc_7D98
                move.w  d0,d5

loc_7D98:
                subq.w  #1,d5
                move.w  #$288,d4
                bra.s   loc_7DA8
; ---------------------------------------------------------------------------

loc_7DA0:
                bsr.w   FindFreeObjectSlot
                bne.w   loc_7E2C

loc_7DA8:
                move.b  #$37,0(a1) 
                addq.b  #2,$24(a1)
                move.b  #8,$16(a1)
                move.b  #8,$17(a1)
                move.w  8(a0),8(a1)
                move.w  $C(a0),$C(a1)
                move.l  #Map_Signpost_Sparkle,4(a1)
                move.w  #$27B2,2(a1)
                move.b  #4,1(a1)
                move.b  #2,$19(a1)
                move.b  #$47,$20(a1)
                move.b  #8,$18(a1)
                move.b  #$FF,($FFFFFEC6).w
                tst.w   d4
                bmi.s   loc_7E1C
                move.w  d4,d0
                bsr.w   CalcSine
                move.w  d4,d2
                lsr.w   #8,d2
                asl.w   d2,d0
                asl.w   d2,d1
                move.w  d0,d2
                move.w  d1,d3
                addi.b  #$10,d4
                bcc.s   loc_7E1C
                subi.w  #$80,d4
                bcc.s   loc_7E1C
                move.w  #$288,d4

loc_7E1C:
                move.w  d2,$10(a1)
                move.w  d3,$12(a1)
                neg.w   d2
                neg.w   d4
                dbf     d5,loc_7DA0

loc_7E2C:
                move.w  #0,($FFFFFE20).w
                move.b  #$80,($FFFFFE1D).w
                move.b  #0,($FFFFFE1B).w
                move.w  #$C6,d0
                jsr     (PlaySound_Special).l

entry_7e48:
                move.b  ($FFFFFEC7).w,$1A(a0)
                bsr.w   ObjectMove
                addi.w  #$18,$12(a0)
                bmi.s   loc_7E82
                move.b  ($FFFFFE0F).w,d0
                add.b   d7,d0
                andi.b  #3,d0
                bne.s   loc_7E82
                jsr     (ObjectHitFloor).l
                tst.w   d1
                bpl.s   loc_7E82
                add.w   d1,$C(a0)
                move.w  $12(a0),d0
                asr.w   #2,d0
                sub.w   d0,$12(a0)
                neg.w   $12(a0)

loc_7E82:
                tst.b   ($FFFFFEC6).w
                beq.s   entry_7ebc
                move.w  ($FFFFF72E).w,d0
                addi.w  #$E0,d0
                cmp.w   $C(a0),d0
                bcs.s   entry_7ebc
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------

entry_7e9a:
                addq.b  #2,$24(a0)
                move.b  #0,$20(a0)
                move.b  #1,$19(a0)
                bsr.w   sub_7D30

entry_7eae:
                lea     (Ani_ObjRing).l,a1
                bsr.w   AnimateObject
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------

entry_7ebc:
                bra.w   DeleteObject
; ---------------------------------------------------------------------------

ObjBigRing:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  ObjBigRing_Index(pc,d0.w),d1
                jmp     ObjBigRing_Index(pc,d1.w)
; ---------------------------------------------------------------------------
ObjBigRing_Index:dc.w ObjBigRing_Init-*
                dc.w ObjBigRing_Display-ObjBigRing_Index
                dc.w ObjBigRing_Touch-ObjBigRing_Index
                dc.w ObjBigRing_Delete-ObjBigRing_Index
; ---------------------------------------------------------------------------

ObjBigRing_Init:
                lea     ($FFFFFC00).w,a2
                moveq   #0,d0
                move.b  $23(a0),d0
                lea     2(a2,d0.w),a2
                bclr    #7,(a2)
                addq.b  #2,$24(a0)
                move.l  #$7FA4,4(a0)
                move.w  #$24EC,2(a0)
                move.b  #4,1(a0)
                move.b  #2,$19(a0)
                move.b  #$52,$20(a0)
                move.b  #$C,$18(a0)

ObjBigRing_Display:
                move.b  ($FFFFFEC3).w,$1A(a0)
                bsr.w   DisplaySprite
                move.w  8(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.w   DeleteObject
                rts
; ---------------------------------------------------------------------------

ObjBigRing_Touch:
                addq.b  #2,$24(a0)
                move.b  #0,$20(a0)
                move.b  #1,$19(a0)

ObjBigRing_Delete:
                move.b  #$4A,($FFFFD1C0).w 
                moveq   #$13,d0
                bsr.w   LoadPLCs
                bra.w   DeleteObject
; ---------------------------------------------------------------------------
Ani_ObjRing:    include "Ani/Ring.asm"

Map_Signpost_Sparkle:
                include "Map/Ring.asm"
; ---------------------------------------------------------------------------

ObjMonitor:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  ObjMonitor_Index(pc,d0.w),d1
                jmp     ObjMonitor_Index(pc,d1.w)
; ---------------------------------------------------------------------------
ObjMonitor_Index:dc.w entry_805e-ObjMonitor_Index
                dc.w entry_80c0-ObjMonitor_Index
                dc.w entry_81d2-ObjMonitor_Index
                dc.w entry_81a4-ObjMonitor_Index
                dc.w entry_81ae-ObjMonitor_Index
; ---------------------------------------------------------------------------

entry_805e:
                addq.b  #2,$24(a0)
                move.b  #$E,$16(a0)
                move.b  #$E,$17(a0)
                move.l  #Map_Monitor,4(a0)
                move.w  #$680,2(a0)
                move.b  #4,1(a0)
                move.b  #3,$19(a0)
                move.b  #$F,$18(a0)
                lea     ($FFFFFC00).w,a2
                moveq   #0,d0
                move.b  $23(a0),d0
                bclr    #7,2(a2,d0.w)
                btst    #0,2(a2,d0.w)
                beq.s   loc_80B4
                move.b  #8,$24(a0)
                move.b  #$B,$1A(a0)
                rts
; ---------------------------------------------------------------------------

loc_80B4:
                move.b  #$46,$20(a0) 
                move.b  $28(a0),$1C(a0)

entry_80c0:
                move.b  $25(a0),d0
                beq.s   loc_811A
                subq.b  #2,d0
                bne.s   loc_80FA
                moveq   #0,d1
                move.b  $18(a0),d1
                addi.w  #$B,d1
                bsr.w   ExitPlatform
                btst    #3,$22(a1)
                bne.w   loc_80EA
                clr.b   $25(a0)
                bra.w   entry_81a4
; ---------------------------------------------------------------------------

loc_80EA:
                move.w  #$10,d3
                move.w  8(a0),d2
                bsr.w   sub_560E
                bra.w   entry_81a4
; ---------------------------------------------------------------------------

loc_80FA:
                bsr.w   ObjectMoveAndFall
                jsr     (ObjectHitFloor).l
                tst.w   d1
                bpl.w   entry_81a4
                add.w   d1,$C(a0)
                clr.w   $12(a0)
                clr.b   $25(a0)
                bra.w   entry_81a4
; ---------------------------------------------------------------------------

loc_811A:
                move.w  #$1A,d1
                move.w  #$F,d2
                bsr.w   sub_83B4
                beq.w   loc_818A
                tst.w   $12(a1)
                bmi.s   loc_8138
                cmpi.b  #2,$1C(a1)
                beq.s   loc_818A

loc_8138:
                tst.w   d1
                bpl.s   loc_814E
                sub.w   d3,$C(a1)
                bsr.w   sub_4FD4
                move.b  #2,$25(a0)
                bra.w   entry_81a4
; ---------------------------------------------------------------------------

loc_814E:
                tst.w   d0
                beq.w   loc_8174
                bmi.s   loc_815E
                tst.w   $10(a1)
                bmi.s   loc_8174
                bra.s   loc_8164
; ---------------------------------------------------------------------------

loc_815E:
                tst.w   $10(a1)
                bpl.s   loc_8174

loc_8164:
                sub.w   d0,8(a1)
                move.w  #0,$14(a1)
                move.w  #0,$10(a1)

loc_8174:
                btst    #1,$22(a1)
                bne.s   loc_8198
                bset    #5,$22(a1)
                bset    #5,$22(a0)
                bra.s   entry_81a4
; ---------------------------------------------------------------------------

loc_818A:
                btst    #5,$22(a0)
                beq.s   entry_81a4
                move.w  #1,$1C(a1)

loc_8198:
                bclr    #5,$22(a0)
                bclr    #5,$22(a1)

entry_81a4:
                lea     (unk_8422).l,a1
                bsr.w   AnimateObject

entry_81ae:
                bsr.w   DisplaySprite
                move.w  8(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.w   DeleteObject
                rts
; ---------------------------------------------------------------------------

entry_81d2:
                addq.b  #2,$24(a0)
                move.b  #0,$20(a0)
                bsr.w   FindFreeObjectSlot
                bne.s   loc_81FA
                move.b  #$2E,0(a1)
                move.w  8(a0),8(a1)
                move.w  $C(a0),$C(a1)
                move.b  $1C(a0),$1C(a1)

loc_81FA:
                bsr.w   FindFreeObjectSlot
                bne.s   loc_8216
                move.b  #$27,0(a1) 
                addq.b  #2,$24(a1)
                move.w  8(a0),8(a1)
                move.w  $C(a0),$C(a1)

loc_8216:
                lea     ($FFFFFC00).w,a2
                moveq   #0,d0
                move.b  $23(a0),d0
                bset    #0,2(a2,d0.w)
                move.b  #9,$1C(a0)
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------

Obj2E:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  Obj2E_Index(pc,d0.w),d1
                jsr     Obj2E_Index(pc,d1.w)
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------
Obj2E_Index:	dc.w Obj2E_Init-Obj2E_Index
                dc.w Obj2E_Main-Obj2E_Index
                dc.w Obj2E_Delete-Obj2E_Index
; ---------------------------------------------------------------------------

Obj2E_Init:
                addq.b  #2,$24(a0)
                move.w  #$680,2(a0)
                move.b  #$24,1(a0) 
                move.b  #3,$19(a0)
                move.b  #8,$18(a0)
                move.w  #$FD00,$12(a0)
                moveq   #0,d0
                move.b  $1C(a0),d0
                addq.b  #2,d0
                move.b  d0,$1A(a0)
                movea.l #Map_Monitor,a1
                add.b   d0,d0
                adda.w  (a1,d0.w),a1
                addq.w  #1,a1
                move.l  a1,4(a0)

Obj2E_Main:
                tst.w   $12(a0)
                bpl.w   Obj2E_Eggman
                bsr.w   ObjectMove
                addi.w  #$18,$12(a0)
                rts
; ---------------------------------------------------------------------------

Obj2E_Eggman:
                addq.b  #2,$24(a0)
                move.w  #$1D,$1E(a0)
                move.b  $1C(a0),d0
                cmpi.b  #1,d0
                bne.s   Obj2E_Sonic
                rts
; ---------------------------------------------------------------------------

Obj2E_Sonic:
                cmpi.b  #2,d0
                bne.s   Obj2E_Shoes

AddLife:
                addq.b  #1,($FFFFFE12).w
                addq.b  #1,($FFFFFE1C).w
                move.w  #$88,d0
                jmp     (PlaySound).l
; ---------------------------------------------------------------------------

Obj2E_Shoes:
                cmpi.b  #3,d0
                bne.s   Obj2E_Shield
                move.b  #1,($FFFFFE2E).w
                move.w  #$4B0,($FFFFD034).w
                move.w  #$C00,($FFFFF760).w
                move.w  #$18,($FFFFF762).w
                move.w  #$80,($FFFFF764).w
                move.w  #$E2,d0
                jmp     (PlaySound).l
; ---------------------------------------------------------------------------

Obj2E_Shield:
                cmpi.b  #4,d0
                bne.s   Obj2E_Invinc
                move.b  #1,($FFFFFE2C).w
                move.b  #$38,($FFFFD180).w 
                move.w  #$AF,d0
                jmp     (PlaySound).l
; ---------------------------------------------------------------------------

Obj2E_Invinc:
                cmpi.b  #5,d0
                bne.s   Obj2E_Rings
                move.b  #1,($FFFFFE2D).w
                move.w  #$4B0,($FFFFD032).w
                move.b  #$38,($FFFFD200).w 
                move.b  #1,($FFFFD21C).w
                move.b  #$38,($FFFFD240).w 
                move.b  #2,($FFFFD25C).w
                move.b  #$38,($FFFFD280).w 
                move.b  #3,($FFFFD29C).w
                move.b  #$38,($FFFFD2C0).w 
                move.b  #4,($FFFFD2DC).w
                move.w  #$87,d0
                jmp     (PlaySound).l
; ---------------------------------------------------------------------------

Obj2E_Rings:
                cmpi.b  #6,d0
                bne.s   Obj2E_S
                addi.w  #$A,($FFFFFE20).w
                ori.b   #1,($FFFFFE1D).w
                cmpi.w  #$32,($FFFFFE20).w
                bcs.s   @PlayRingSound
                bset    #0,($FFFFFE1B).w
                beq.w   AddLife
                cmpi.w  #$64,($FFFFFE20).w 
                bcs.s   @PlayRingSound
                bset    #1,($FFFFFE1B).w
                beq.w   AddLife

@PlayRingSound:
                move.w  #$B5,d0
                jmp     (PlaySound).l
; ---------------------------------------------------------------------------

Obj2E_S:
                cmpi.b  #7,d0
                bne.s   Obj2E_End
                nop

Obj2E_End:
                rts
; ---------------------------------------------------------------------------

Obj2E_Delete:
                subq.w  #1,$1E(a0)
                bmi.w   DeleteObject
                rts

; =============== S U B R O U T I N E =======================================


sub_83B4:
                tst.w   ($FFFFFE08).w
                bne.w   loc_8400
                lea     ($FFFFD000).w,a1
                move.w  8(a1),d0
                sub.w   8(a0),d0
                add.w   d1,d0
                bmi.s   loc_8400
                move.w  d1,d3
                add.w   d3,d3
                cmp.w   d3,d0
                bhi.s   loc_8400
                move.b  $16(a1),d3
                ext.w   d3
                add.w   d3,d2
                move.w  $C(a1),d3
                sub.w   $C(a0),d3
                add.w   d2,d3
                bmi.s   loc_8400
                add.w   d2,d2
                cmp.w   d2,d3
                bcc.s   loc_8400
                cmp.w   d0,d1
                bcc.s   loc_83F6
                add.w   d1,d1
                sub.w   d1,d0

loc_83F6:
                cmpi.w  #$10,d3
                bcs.s   loc_8404

loc_83FC:
                moveq   #1,d1
                rts
; ---------------------------------------------------------------------------

loc_8400:
                moveq   #0,d1
                rts
; ---------------------------------------------------------------------------

loc_8404:
                moveq   #0,d1
                move.b  $18(a0),d1
                addq.w  #4,d1
                move.w  d1,d2
                add.w   d2,d2
                add.w   8(a1),d1
                sub.w   8(a0),d1
                bmi.s   loc_83FC
                cmp.w   d2,d1
                bcc.s   loc_83FC
                moveq   #$FFFFFFFF,d1
                rts
; End of function sub_83B4

; ---------------------------------------------------------------------------
unk_8422:       dc.b   0
                dc.b $14
                dc.b   0
                dc.b $1A
                dc.b   0
                dc.b $26 ; &
                dc.b   0
                dc.b $32 ; 2
                dc.b   0
                dc.b $3E ; >
                dc.b   0
                dc.b $4A ; J
                dc.b   0
                dc.b $56 ; V
                dc.b   0
                dc.b $62 ; b
                dc.b   0
                dc.b $6E ; n
                dc.b   0
                dc.b $7A ; z
                dc.b   1
                dc.b   0
                dc.b   1
                dc.b   2
                dc.b $FF
                dc.b   0
                dc.b   1
                dc.b   0
                dc.b   3
                dc.b   3
                dc.b   1
                dc.b   3
                dc.b   3
                dc.b   2
                dc.b   3
                dc.b   3
                dc.b $FF
                dc.b   0
                dc.b   1
                dc.b   0
                dc.b   4
                dc.b   4
                dc.b   1
                dc.b   4
                dc.b   4
                dc.b   2
                dc.b   4
                dc.b   4
                dc.b $FF
                dc.b   0
                dc.b   1
                dc.b   0
                dc.b   5
                dc.b   5
                dc.b   1
                dc.b   5
                dc.b   5
                dc.b   2
                dc.b   5
                dc.b   5
                dc.b $FF
                dc.b   0
                dc.b   1
                dc.b   0
                dc.b   6
                dc.b   6
                dc.b   1
                dc.b   6
                dc.b   6
                dc.b   2
                dc.b   6
                dc.b   6
                dc.b $FF
                dc.b   0
                dc.b   1
                dc.b   0
                dc.b   7
                dc.b   7
                dc.b   1
                dc.b   7
                dc.b   7
                dc.b   2
                dc.b   7
                dc.b   7
                dc.b $FF
                dc.b   0
                dc.b   1
                dc.b   0
                dc.b   8
                dc.b   8
                dc.b   1
                dc.b   8
                dc.b   8
                dc.b   2
                dc.b   8
                dc.b   8
                dc.b $FF
                dc.b   0
                dc.b   1
                dc.b   0
                dc.b   9
                dc.b   9
                dc.b   1
                dc.b   9
                dc.b   9
                dc.b   2
                dc.b   9
                dc.b   9
                dc.b $FF
                dc.b   0
                dc.b   1
                dc.b   0
                dc.b  $A
                dc.b  $A
                dc.b   1
                dc.b  $A
                dc.b  $A
                dc.b   2
                dc.b  $A
                dc.b  $A
                dc.b $FF
                dc.b   0
                dc.b   2
                dc.b   0
                dc.b   1
                dc.b   2
                dc.b  $B
                dc.b $FE
                dc.b   1
                dc.b   0
Map_Monitor:
 include "Map/Monitor.asm"

; -------------------------------------------------------------------------------
; This runs the code of all the objects that are at $FFFFD000
; -------------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; ObjectsLoad:
RunObjects:
                lea     ($FFFFD000).w,a0
                moveq   #$7F,d7
                moveq   #0,d0
                cmpi.b  #6,($FFFFD024).w
                bcc.s   RunObjectsWhenPlayerIsDead
	; continue straight to RunObject
; ---------------------------------------------------------------------------

; -------------------------------------------------------------------------------
; This is THE place where each individual object's code gets called from
; -------------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; sub_8546:
RunObject:
                move.b  (a0),d0
                beq.s   RunNextObject
                add.w   d0,d0
                add.w   d0,d0
                movea.l Obj_Index-4(pc,d0.w),a1
                jsr     (a1)
                moveq   #0,d0

; loc_8556:
RunNextObject:
                lea     $40(a0),a0
                dbf     d7,RunObject
                rts
; ---------------------------------------------------------------------------
; this skips certain objects to make enemies and things pause when Sonic dies
; loc_8560:
RunObjectsWhenPlayerIsDead:
                moveq   #$1F,d7
                bsr.s   RunObject
                moveq   #$5F,d7

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; loc_8566:
RunObjectDisplayOnly:
                moveq   #0,d0
                move.b  (a0),d0
                beq.s   loc_8576
                tst.b   1(a0)
                bpl.s   loc_8576
                bsr.w   DisplaySprite

loc_8576:
                lea     $40(a0),a0
                dbf     d7,RunObjectDisplayOnly
                rts
; End of function RunObject

; ===========================================================================
; ---------------------------------------------------------------------------
; OBJECT POINTER ARRAY ; object pointers ; sprite pointers ; object list ; sprite list
;
; This array contains the pointers to all the objects used (and unused) in the game.
; ---------------------------------------------------------------------------
; loc_8580:
Obj_Index:      dc.l Obj01			; Sonic
                dc.l Obj02			; Leftover from February 1990 prototype (glitchy box sprite)
                dc.l Obj03			; Leftover from February 1990 prototype (glitchy tall sprite)
                dc.l Obj04			; Leftover from February 1990 prototype (glitchy tall animated sprite)
                dc.l Obj05			; Leftover from February 1990 prototype
                dc.l Obj06			; Leftover from February 1990 prototype
                dc.l Obj07			; Leftover from February 1990 prototype (deletes itself upon initialization)
                dc.l ObjectMoveAndFall		; Obj08
                dc.l Obj09			; Sonic in the Special Stages
                dc.l ObjectMoveAndFall		; Obj0A
                dc.l ObjectMoveAndFall		; Obj0B
                dc.l ObjectMoveAndFall		; Obj0C
                dc.l Obj0D			; Signpost
                dc.l Obj0E			; Sonic on the title screen
                dc.l Obj0F			; "PRESS START BUTTON" on the title screen
                dc.l Obj10			; Animation test object (goes through all of Sonic's animations)
                dc.l ObjGHZBridge		; Bridge in Green Hill Zone
                dc.l ObjSYZLamp			; Lamp in Sparkling Zone
                dc.l Obj13			; Fireball spawner
                dc.l ObjFireBall		; Fireball in Marble Zone
                dc.l Obj15			; Swinging Platform
                dc.l ObjectMoveAndFall		; Obj16
                dc.l ObjGHZHelix		; Spike helix in Green Hill Zone
                dc.l ObjPlatform		; Moving/stationary/falling platform
                dc.l ObjRollingBall		; The Green Hill Zone Ball
                dc.l ObjGHZCliff		; Collapsable ledge in Green Hill Zone
                dc.l Obj1B			; Water surface in Labyrinth Zone (unused as there's obviously no water implemented)
                dc.l ObjScenery			; Scenery object
                dc.l ObjUnkSwitch		; Switch (unused)
                dc.l ObjBallHog			; Ballhog (unused)
                dc.l ObjCrabmeat		; Crabmeat
                dc.l ObjBallHogBall		; Ballhog's ball (unused)
                dc.l ObjHUD			; HUD
                dc.l ObjBuzzBomber		; Buzz Bomber
                dc.l ObjBuzzMissile		; Buzz Bomber missile
                dc.l ObjBallHogExplosion	; Ballhog's ball explosions (unused, graphics remained in REV00 but deleted in REV01)
                dc.l ObjRing			; Standard ring object
                dc.l ObjMonitor			; Monitors
                dc.l ObjEnemyExplode		; Badnik explosion
                dc.l ObjAnimals			; Animals from badniks
                dc.l ObjPoints			; Points
                dc.l Obj2A			; Door opened by swtich (replaced with one-way door for Scrap Brain Zone in the final)
                dc.l ObjChopper			; Chopper
                dc.l ObjJaws			; Jaws (unused)
                dc.l ObjBurrobot		; Burrobots (unused)
                dc.l Obj2E			; Power ups from monitor
                dc.l Obj2F
                dc.l Obj30
                dc.l Obj31
                dc.l Obj32
                dc.l Obj33
                dc.l Obj34                      ; Title Cards
                dc.l Obj35
                dc.l Obj36                      ; Spikes
                dc.l Obj37
                dc.l Obj38
                dc.l Obj39
                dc.l Obj3A
                dc.l Obj3B                      ; Green Hill Zone Purple Rock
                dc.l Obj3C
                dc.l Obj3D                      ; Green Hill Zone Boss
                dc.l Obj3E                      ; Animal Capsule
                dc.l Obj3F
                dc.l ObjMotobug
                dc.l ObjSprings
                dc.l ObjNewtron
                dc.l ObjRoller
                dc.l ObjWalls
                dc.l Obj45                      ; Sideways Stomper
                dc.l Obj46                      ; Brick
                dc.l ObjBumper
                dc.l Obj48
                dc.l Obj49
                dc.l ObjSpecialWarp
                dc.l ObjBigRing
                dc.l Obj4C
                dc.l Obj4D
                dc.l ObjMZLavaWall
                dc.l ObjSplats
                dc.l ObjYadrin
                dc.l Obj51
                dc.l Obj52
                dc.l Obj53
                dc.l Obj54
                dc.l Obj55
                dc.l Obj56
                dc.l Obj57
                dc.l Obj58
                dc.l Obj59
                dc.l Obj5A
                dc.l Obj5B
                dc.l Obj5C
                dc.l Obj5D
                dc.l Obj5E
; ===========================================================================
; ---------------------------------------------------------------------------
; Subroutine to make an object move and fall downward increasingly fast
; This moves the object horizontally and vertically
; and also applies gravity to its speed
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; ObjectFall:
ObjectMoveAndFall:
                move.l  8(a0),d2
                move.l  $C(a0),d3
                move.w  $10(a0),d0
                ext.l   d0
                asl.l   #8,d0
                add.l   d0,d2
                move.w  $12(a0),d0
                addi.w  #$38,d0
                move.w  d0,$12(a0)
                ext.l   d0
                asl.l   #8,d0
                add.l   d0,d3
                move.l  d2,8(a0)
                move.l  d3,$C(a0)
                rts
; End of function ObjectMoveAndFall

; >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

; ---------------------------------------------------------------------------
; Subroutine translating object speed to update object position
; This moves the object horizontally and vertically
; but does not apply gravity to it
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; SpeedToPos: ObjectSpeedtoPosition:
ObjectMove:
                move.l  8(a0),d2
                move.l  $C(a0),d3
                move.w  $10(a0),d0
                ext.l   d0
                asl.l   #8,d0
                add.l   d0,d2
                move.w  $12(a0),d0
                ext.l   d0
                asl.l   #8,d0
                add.l   d0,d3
                move.l  d2,8(a0)
                move.l  d3,$C(a0)
                rts
; End of function ObjectMove

; ---------------------------------------------------------------------------
; Subroutine to display a sprite/object, when a0 is the object RAM
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; DisplayObject:
DisplaySprite:
                lea     ($FFFFAC00).w,a1
                move.b  $19(a0),d0
                andi.w  #7,d0
                lsl.w   #7,d0
                adda.w  d0,a1
                cmpi.w  #$7E,(a1)
                bcc.s   locret_8768
                addq.w  #2,(a1)
                adda.w  (a1),a1
                move.w  a0,(a1)

locret_8768:
                rts
; End of function DisplaySprite

; ---------------------------------------------------------------------------
; Subroutine to display a sprite/object, when a1 is the object RAM
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; DisplayObject2:
DisplaySprite2:
                lea     ($FFFFAC00).w,a2
                move.b  $19(a1),d0
                andi.w  #7,d0
                lsl.w   #7,d0
                adda.w  d0,a2
                cmpi.w  #$7E,(a2)
                bcc.s   locret_8786
                addq.w  #2,(a2)
                adda.w  (a2),a2
                move.w  a1,(a2)

locret_8786:
                rts
; End of function DisplaySprite2

; ---------------------------------------------------------------------------
; Subroutine to delete an object
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


DeleteObject:
                movea.l a0,a1

loc_878A:
                moveq   #0,d1
                moveq   #$F,d0

loc_878E:
                move.l  d1,(a1)+
                dbf     d0,loc_878E
                rts
; End of function DeleteObject

; ---------------------------------------------------------------------------
BldSpr_ScrPos:  dc.l 0
                dc.l $FFF700
                dc.l $FFF708
                dc.l $FFF718

; =============== S U B R O U T I N E =======================================


BuildSprites:
                lea     ($FFFFF800).w,a2
                moveq   #0,d5
                lea     ($FFFFAC00).w,a4
                moveq   #7,d7

loc_87B2:
                tst.w   (a4)
                beq.w   loc_8876
                moveq   #2,d6

loc_87BA:
                movea.w (a4,d6.w),a0
                tst.b   (a0)
                beq.w   loc_886E
                bclr    #7,1(a0)
                move.b  1(a0),d0
                move.b  d0,d4
                andi.w  #$C,d0
                beq.s   loc_8826
                movea.l BldSpr_ScrPos(pc,d0.w),a1
                moveq   #0,d0
                move.b  $18(a0),d0
                move.w  8(a0),d3
                sub.w   (a1),d3
                move.w  d3,d1
                add.w   d0,d1
                bmi.w   loc_886E
                move.w  d3,d1
                sub.w   d0,d1
                cmpi.w  #$140,d1
                bge.s   loc_886E
                addi.w  #$80,d3
                btst    #4,d4
                beq.s   loc_8830
                moveq   #0,d0
                move.b  $16(a0),d0
                move.w  $C(a0),d2
                sub.w   4(a1),d2
                move.w  d2,d1
                add.w   d0,d1
                bmi.s   loc_886E
                move.w  d2,d1
                sub.w   d0,d1
                cmpi.w  #$E0,d1
                bge.s   loc_886E
                addi.w  #$80,d2
                bra.s   loc_8848
; ---------------------------------------------------------------------------

loc_8826:
                move.w  $A(a0),d2
                move.w  8(a0),d3
                bra.s   loc_8848
; ---------------------------------------------------------------------------

loc_8830:
                move.w  $C(a0),d2
                sub.w   4(a1),d2
                addi.w  #$80,d2
                cmpi.w  #$60,d2
                bcs.s   loc_886E
                cmpi.w  #$180,d2
                bcc.s   loc_886E

loc_8848:
                movea.l 4(a0),a1
                moveq   #0,d1
                btst    #5,d4
                bne.s   loc_8864
                move.b  $1A(a0),d1
                add.b   d1,d1
                adda.w  (a1,d1.w),a1
                move.b  (a1)+,d1
                subq.b  #1,d1
                bmi.s   loc_8868

loc_8864:
                bsr.w   sub_8898

loc_8868:
                bset    #7,1(a0)

loc_886E:
                addq.w  #2,d6
                subq.w  #2,(a4)
                bne.w   loc_87BA

loc_8876:
                lea     $80(a4),a4
                dbf     d7,loc_87B2
                move.b  d5,($FFFFF62C).w
                cmpi.b  #$50,d5
                beq.s   loc_8890
                move.l  #0,(a2)
                rts
; ---------------------------------------------------------------------------

loc_8890:
                move.b  #0,-5(a2)
                rts
; End of function BuildSprites


; =============== S U B R O U T I N E =======================================


sub_8898:
                movea.w 2(a0),a3
                btst    #0,d4
                bne.s   loc_88DE
                btst    #1,d4
                bne.w   loc_892C

loc_88AA:
                cmpi.b  #$50,d5 
                beq.s   locret_88DC
                move.b  (a1)+,d0
                ext.w   d0
                add.w   d2,d0
                move.w  d0,(a2)+
                move.b  (a1)+,(a2)+
                addq.b  #1,d5
                move.b  d5,(a2)+
                move.b  (a1)+,d0
                lsl.w   #8,d0
                move.b  (a1)+,d0
                add.w   a3,d0
                move.w  d0,(a2)+
                move.b  (a1)+,d0
                ext.w   d0
                add.w   d3,d0
                andi.w  #$1FF,d0
                bne.s   loc_88D6
                addq.w  #1,d0

loc_88D6:
                move.w  d0,(a2)+
                dbf     d1,loc_88AA

locret_88DC:
                rts
; ---------------------------------------------------------------------------

loc_88DE:
                btst    #1,d4
                bne.w   loc_8972

loc_88E6:
                cmpi.b  #$50,d5 
                beq.s   locret_892A
                move.b  (a1)+,d0
                ext.w   d0
                add.w   d2,d0
                move.w  d0,(a2)+
                move.b  (a1)+,d4
                move.b  d4,(a2)+
                addq.b  #1,d5
                move.b  d5,(a2)+
                move.b  (a1)+,d0
                lsl.w   #8,d0
                move.b  (a1)+,d0
                add.w   a3,d0
                eori.w  #$800,d0
                move.w  d0,(a2)+
                move.b  (a1)+,d0
                ext.w   d0
                neg.w   d0
                add.b   d4,d4
                andi.w  #$18,d4
                addq.w  #8,d4
                sub.w   d4,d0
                add.w   d3,d0
                andi.w  #$1FF,d0
                bne.s   loc_8924
                addq.w  #1,d0

loc_8924:
                move.w  d0,(a2)+
                dbf     d1,loc_88E6

locret_892A:
                rts
; ---------------------------------------------------------------------------

loc_892C:
                cmpi.b  #$50,d5 
                beq.s   locret_8970
                move.b  (a1)+,d0
                move.b  (a1),d4
                ext.w   d0
                neg.w   d0
                lsl.b   #3,d4
                andi.w  #$18,d4
                addq.w  #8,d4
                sub.w   d4,d0
                add.w   d2,d0
                move.w  d0,(a2)+
                move.b  (a1)+,(a2)+
                addq.b  #1,d5
                move.b  d5,(a2)+
                move.b  (a1)+,d0
                lsl.w   #8,d0
                move.b  (a1)+,d0
                add.w   a3,d0
                eori.w  #$1000,d0
                move.w  d0,(a2)+
                move.b  (a1)+,d0
                ext.w   d0
                add.w   d3,d0
                andi.w  #$1FF,d0
                bne.s   loc_896A
                addq.w  #1,d0

loc_896A:
                move.w  d0,(a2)+
                dbf     d1,loc_892C

locret_8970:
                rts
; ---------------------------------------------------------------------------

loc_8972:
                cmpi.b  #$50,d5 
                beq.s   locret_89C4
                move.b  (a1)+,d0
                move.b  (a1),d4
                ext.w   d0
                neg.w   d0
                lsl.b   #3,d4
                andi.w  #$18,d4
                addq.w  #8,d4
                sub.w   d4,d0
                add.w   d2,d0
                move.w  d0,(a2)+
                move.b  (a1)+,d4
                move.b  d4,(a2)+
                addq.b  #1,d5
                move.b  d5,(a2)+
                move.b  (a1)+,d0
                lsl.w   #8,d0
                move.b  (a1)+,d0
                add.w   a3,d0
                eori.w  #$1800,d0
                move.w  d0,(a2)+
                move.b  (a1)+,d0
                ext.w   d0
                neg.w   d0
                add.b   d4,d4
                andi.w  #$18,d4
                addq.w  #8,d4
                sub.w   d4,d0
                add.w   d3,d0
                andi.w  #$1FF,d0
                bne.s   loc_89BE
                addq.w  #1,d0

loc_89BE:
                move.w  d0,(a2)+
                dbf     d1,loc_8972

locret_89C4:
                rts
; End of function sub_8898


; =============== S U B R O U T I N E =======================================


sub_89C6:
                move.w  8(a0),d0
                sub.w   ($FFFFF700).w,d0
                bmi.s   loc_89EA
                cmpi.w  #$140,d0
                bge.s   loc_89EA
                move.w  $C(a0),d1
                sub.w   ($FFFFF704).w,d1
                bmi.s   loc_89EA
                cmpi.w  #$E0,d1
                bge.s   loc_89EA
                moveq   #0,d0
                rts
; ---------------------------------------------------------------------------

loc_89EA:
                moveq   #1,d0
                rts
; End of function sub_89C6


; =============== S U B R O U T I N E =======================================


ObjPosLoad:
                moveq   #0,d0
                move.b  ($FFFFF76C).w,d0
                move.w  OPL_Index(pc,d0.w),d0
                jmp     OPL_Index(pc,d0.w)
; End of function ObjPosLoad

; ---------------------------------------------------------------------------
OPL_Index:      dc.w code_8A00-OPL_Index
                dc.w OPL_Next-OPL_Index
; ---------------------------------------------------------------------------

code_8A00:
                addq.b  #2,($FFFFF76C).w
                move.w  ($FFFFFE10).w,d0
                lsl.b   #6,d0
                lsr.w   #4,d0
                lea     (ObjPos_Index).l,a0
                movea.l a0,a1
                adda.w  (a0,d0.w),a0
                move.l  a0,($FFFFF770).w
                move.l  a0,($FFFFF774).w
                adda.w  2(a1,d0.w),a1
                move.l  a1,($FFFFF778).w
                move.l  a1,($FFFFF77C).w
                lea     ($FFFFFC00).w,a2
                move.w  #$101,(a2)+
                move.w  #$5E,d0

OPL_ClrList:
                clr.l   (a2)+
                dbf     d0,OPL_ClrList
                move.w  #-1,($FFFFF76E).w

OPL_Next:
                lea     ($FFFFFC00).w,a2
                moveq   #0,d2
                move.w  ($FFFFF700).w,d6
                andi.w  #$FF80,d6
                cmp.w   ($FFFFF76E).w,d6
                beq.w   locret_8B20
                bge.s   loc_8ABA
                move.w  d6,($FFFFF76E).w
                movea.l ($FFFFF774).w,a0
                subi.w  #$80,d6
                bcs.s   loc_8A96

loc_8A6A:
                cmp.w   -6(a0),d6
                bge.s   loc_8A96
                subq.w  #6,a0
                tst.b   4(a0)
                bpl.s   loc_8A80
                subq.b  #1,1(a2)
                move.b  1(a2),d2

loc_8A80:
                bsr.w   sub_8B22
                bne.s   loc_8A8A
                subq.w  #6,a0
                bra.s   loc_8A6A
; ---------------------------------------------------------------------------

loc_8A8A:
                tst.b   4(a0)
                bpl.s   loc_8A94
                addq.b  #1,1(a2)

loc_8A94:
                addq.w  #6,a0

loc_8A96:
                move.l  a0,($FFFFF774).w
                movea.l ($FFFFF770).w,a0
                addi.w  #$300,d6

loc_8AA2:
                cmp.w   -6(a0),d6
                bgt.s   loc_8AB4
                tst.b   -2(a0)
                bpl.s   loc_8AB0
                subq.b  #1,(a2)

loc_8AB0:
                subq.w  #6,a0
                bra.s   loc_8AA2
; ---------------------------------------------------------------------------

loc_8AB4:
                move.l  a0,($FFFFF770).w
                rts
; ---------------------------------------------------------------------------

loc_8ABA:
                move.w  d6,($FFFFF76E).w
                movea.l ($FFFFF770).w,a0
                addi.w  #$280,d6

loc_8AC6:
                cmp.w   (a0),d6
                bls.s   loc_8ADA
                tst.b   4(a0)
                bpl.s   loc_8AD4
                move.b  (a2),d2
                addq.b  #1,(a2)

loc_8AD4:
                bsr.w   sub_8B22
                beq.s   loc_8AC6

loc_8ADA:
                move.l  a0,($FFFFF770).w
                movea.l ($FFFFF774).w,a0
                subi.w  #$300,d6
                bcs.s   loc_8AFA

loc_8AE8:
                cmp.w   (a0),d6
                bls.s   loc_8AFA
                tst.b   4(a0)
                bpl.s   loc_8AF6
                addq.b  #1,1(a2)

loc_8AF6:
                addq.w  #6,a0
                bra.s   loc_8AE8
; ---------------------------------------------------------------------------

loc_8AFA:
                move.l  a0,($FFFFF774).w
                rts
; ---------------------------------------------------------------------------

loc_8B00:
                movea.l ($FFFFF778).w,a0
                move.w  ($FFFFF718).w,d0
                addi.w  #$200,d0
                andi.w  #$FF80,d0
                cmp.w   (a0),d0
                bcs.s   locret_8B20
                bsr.w   sub_8B22
                move.l  a0,($FFFFF778).w
                bra.w   loc_8B00
; ---------------------------------------------------------------------------

locret_8B20:
                rts

; =============== S U B R O U T I N E =======================================


sub_8B22:
                tst.b   4(a0)
                bpl.s   OPL_MakeItem
                bset    #7,2(a2,d2.w)
                beq.s   OPL_MakeItem
                addq.w  #6,a0
                moveq   #0,d0
                rts
; ---------------------------------------------------------------------------

OPL_MakeItem:
                bsr.w   FindFreeObjectSlot
                bne.s   locret_8B70
                move.w  (a0)+,8(a1)
                move.w  (a0)+,d0
                move.w  d0,d1
                andi.w  #$FFF,d0
                move.w  d0,$C(a1)
                rol.w   #2,d1
                andi.b  #3,d1
                move.b  d1,1(a1)
                move.b  d1,$22(a1)
                move.b  (a0)+,d0
                bpl.s   loc_8B66
                andi.b  #$7F,d0
                move.b  d2,$23(a1)

loc_8B66:
                move.b  d0,0(a1)
                move.b  (a0)+,$28(a1)
                moveq   #0,d0

locret_8B70:
                rts
; End of function sub_8B22

; SingleObjLoad:

; =============== S U B R O U T I N E =======================================


FindFreeObjectSlot:
                lea     ($FFFFD800).w,a1
                move.w  #$5F,d0 

loc_8B7A:
                tst.b   (a1)
                beq.s   locret_8B86
                lea     $40(a1),a1
                dbf     d0,loc_8B7A

locret_8B86:
                rts
; End of function FindFreeObjectSlot

; SingleObjLoad2:

; =============== S U B R O U T I N E =======================================


FindFreeObjectSlot2:
                movea.l a0,a1
                move.w  #$F000,d0
                sub.w   a0,d0
                lsr.w   #6,d0
                subq.w  #1,d0
                bcs.s   locret_8BA2

loc_8B96:
                tst.b   (a1)
                beq.s   locret_8BA2
                lea     $40(a1),a1
                dbf     d0,loc_8B96

locret_8BA2:
                rts
; End of function FindFreeObjectSlot2


; =============== S U B R O U T I N E =======================================


ObjChopper:

                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  ObjChopper_Index(pc,d0.w),d1
                jsr     ObjChopper_Index(pc,d1.w)
                bra.w   MarkObjectGone
; End of function ObjChopper

; ---------------------------------------------------------------------------
ObjChopper_Index:dc.w entry_8BBA-ObjChopper_Index
                dc.w entry_8bf0-ObjChopper_Index
; ---------------------------------------------------------------------------

entry_8BBA:
                addq.b  #2,$24(a0)
                move.l  #unk_8C4E,4(a0)
                move.w  #$47B,2(a0)
                move.b  #4,1(a0)
                move.b  #4,$19(a0)
                move.b  #9,$20(a0)
                move.b  #$10,$18(a0)
                move.w  #$F900,$12(a0)
                move.w  $C(a0),$30(a0)

entry_8bf0:
                lea     (Ani_Chopper).l,a1
                bsr.w   AnimateObject
                bsr.w   ObjectMove
                addi.w  #$18,$12(a0)
                move.w  $30(a0),d0
                cmp.w   $C(a0),d0
                bcc.s   loc_8C18
                move.w  d0,$C(a0)
                move.w  #$F900,$12(a0)

loc_8C18:
                move.b  #1,$1C(a0)
                subi.w  #$C0,d0
                cmp.w   $C(a0),d0
                bcc.s   locret_8C3A
                move.b  #0,$1C(a0)
                tst.w   $12(a0)
                bmi.s   locret_8C3A
                move.b  #2,$1C(a0)

locret_8C3A:
                rts
; ---------------------------------------------------------------------------
Ani_Chopper:    include "Ani/Chopper.asm"

unk_8C4E:       include "Map/Chopper.asm"
; ---------------------------------------------------------------------------

ObjJaws:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  ObjJaws_Index(pc,d0.w),d1
                jsr     ObjJaws_Index(pc,d1.w)
                bra.w   MarkObjectGone
; ---------------------------------------------------------------------------
ObjJaws_Index:  dc.w entry_8C74-ObjJaws_Index
                dc.w entry_8ca4-ObjJaws_Index
; ---------------------------------------------------------------------------

entry_8C74:
                addq.b  #2,$24(a0)
                move.l  #unk_8CBA,4(a0)
                move.w  #$47B,2(a0)
                move.b  #4,1(a0)
                move.b  #$A,$20(a0)
                move.b  #4,$19(a0)
                move.b  #$10,$18(a0)
                move.w  #$FFC0,$10(a0)

entry_8ca4:
                lea     (unk_8CB2).l,a1
                bsr.w   AnimateObject
                bra.w   ObjectMove
; ---------------------------------------------------------------------------
unk_8CB2:       include "Ani/Jaws.asm"

unk_8CBA:       include "Map/Jaws.asm"
; ---------------------------------------------------------------------------

ObjBurrobot:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  ObjBurrobot_Index(pc,d0.w),d1
                jmp     ObjBurrobot_Index(pc,d1.w)
; ---------------------------------------------------------------------------
ObjBurrobot_Index:dc.w entry_8D02-ObjBurrobot_Index
                dc.w entry_8d56-ObjBurrobot_Index
                dc.w entry_8e46-ObjBurrobot_Index
; ---------------------------------------------------------------------------

entry_8D02:
                move.b  #$13,$16(a0)
                move.b  #8,$17(a0)
                move.l  #unk_8E64,4(a0)
                move.w  #$239C,2(a0)
                move.b  #4,1(a0)
                move.b  #4,$19(a0)
                move.b  #5,$20(a0)
                move.b  #$C,$18(a0)
                bset    #0,$22(a0)
                bsr.w   ObjectMoveAndFall
                bsr.w   ObjectHitFloor
                tst.w   d1
                bpl.s   locret_8D54
                add.w   d1,$C(a0)
                move.w  #0,$12(a0)
                addq.b  #2,$24(a0)

locret_8D54:
                rts
; ---------------------------------------------------------------------------

entry_8d56:
                moveq   #0,d0
                move.b  $25(a0),d0
                move.w  index_8d72(pc,d0.w),d1
                jsr     index_8d72(pc,d1.w)
                lea     (unk_8E4C).l,a1
                bsr.w   AnimateObject
                bra.w   MarkObjectGone
; ---------------------------------------------------------------------------
index_8d72:     dc.w entry_8D78-*
                dc.w entry_8da2-index_8d72
                dc.w entry_8e10-index_8d72
; ---------------------------------------------------------------------------

entry_8D78:
                subq.w  #1,$30(a0)
                bpl.s   locret_8DA0
                addq.b  #2,$25(a0)
                move.w  #$FF,$30(a0)
                move.w  #$80,$10(a0)
                move.b  #1,$1C(a0)
                bchg    #0,$22(a0)
                beq.s   locret_8DA0
                neg.w   $10(a0)

locret_8DA0:
                rts
; ---------------------------------------------------------------------------

entry_8da2:
                subq.w  #1,$30(a0)
                bmi.s   loc_8DDE
                bsr.w   ObjectMove
                bchg    #0,$32(a0)
                bne.s   loc_8DD4
                move.w  8(a0),d3
                addi.w  #$C,d3
                btst    #0,$22(a0)
                bne.s   loc_8DC8
                subi.w  #$18,d3

loc_8DC8:
                bsr.w   loc_105F4
                cmpi.w  #$C,d1
                bge.s   loc_8DDE
                rts
; ---------------------------------------------------------------------------

loc_8DD4:
                bsr.w   ObjectHitFloor
                add.w   d1,$C(a0)
                rts
; ---------------------------------------------------------------------------

loc_8DDE:
                btst    #2,($FFFFFE0F).w
                beq.s   loc_8DFE
                subq.b  #2,$25(a0)
                move.w  #$3B,$30(a0) 
                move.w  #0,$10(a0)
                move.b  #0,$1C(a0)
                rts
; ---------------------------------------------------------------------------

loc_8DFE:
                addq.b  #2,$25(a0)
                move.w  #$FC00,$12(a0)
                move.b  #2,$1C(a0)
                rts
; ---------------------------------------------------------------------------

entry_8e10:
                bsr.w   ObjectMove
                addi.w  #$18,$12(a0)
                bmi.s   locret_8E44
                move.b  #3,$1C(a0)
                bsr.w   ObjectHitFloor
                tst.w   d1
                bpl.s   locret_8E44
                add.w   d1,$C(a0)
                move.w  #0,$12(a0)
                move.b  #1,$1C(a0)
                move.w  #$FF,$30(a0)
                subq.b  #2,$25(a0)

locret_8E44:
                rts
; ---------------------------------------------------------------------------

entry_8e46:
                bsr.w   DeleteObject
                rts
; ---------------------------------------------------------------------------
unk_8E4C:       include "Ani/Burrobot.asm"

unk_8E64:       include "Map/Burrobot.asm"
; ---------------------------------------------------------------------------

Obj2F:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  Obj2F_Index(pc,d0.w),d1
                jmp     Obj2F_Index(pc,d1.w)
; ---------------------------------------------------------------------------
Obj2F_Index:    dc.w entry_8ede-Obj2F_Index
                dc.w entry_8f3c-Obj2F_Index
index_8ed2:     dc.w entry_9120-index_8ed2
                dc.b 0
                dc.b $40 ; @
                dc.w entry_9198-index_8ed2
                dc.b 1
                dc.b $40 ; @
                dc.w entry_916C-index_8ed2
                dc.b   2
                dc.b $20
; ---------------------------------------------------------------------------

entry_8ede:
                addq.b  #2,$24(a0)
                move.l  #unk_92DC,4(a0)
                move.w  #$C000,2(a0)
                move.b  #4,1(a0)
                move.b  #5,$19(a0)
                move.w  $C(a0),$2C(a0)
                move.w  8(a0),$2A(a0)
                moveq   #0,d0
                move.b  $28(a0),d0
                lsr.w   #2,d0
                andi.w  #$1C,d0
                lea     index_8ed2(pc,d0.w),a1
                move.w  (a1)+,d0
                lea     index_8ed2(pc,d0.w),a2
                move.l  a2,$30(a0)
                move.b  (a1)+,$1A(a0)
                move.b  (a1),$18(a0)
                andi.b  #$F,$28(a0)
                move.b  #$40,$16(a0) 
                bset    #4,1(a0)

entry_8f3c:
                bsr.w   sub_8FA6
                tst.b   $25(a0)
                beq.s   loc_8F7C
                moveq   #0,d1
                move.b  $18(a0),d1
                addi.w  #$B,d1
                bsr.w   ExitPlatform
                btst    #3,$22(a1)
                bne.w   loc_8F64
                clr.b   $25(a0)
                bra.s   loc_8F9E
; ---------------------------------------------------------------------------

loc_8F64:
                moveq   #0,d1
                move.b  $18(a0),d1
                addi.w  #$B,d1
                movea.l $30(a0),a2
                move.w  8(a0),d2
                bsr.w   sub_61E0
                bra.s   loc_8F9E
; ---------------------------------------------------------------------------

loc_8F7C:
                moveq   #0,d1
                move.b  $18(a0),d1
                addi.w  #$B,d1
                move.w  #$20,d2 
                cmpi.b  #2,$1A(a0)
                bne.s   loc_8F96
                move.w  #$30,d2 

loc_8F96:
                movea.l $30(a0),a2
                bsr.w   loc_A30C

loc_8F9E:
                bsr.w   DisplaySprite
                bra.w   loc_90C2

; =============== S U B R O U T I N E =======================================


sub_8FA6:
                moveq   #0,d0
                move.b  $28(a0),d0
                andi.w  #7,d0
                add.w   d0,d0
                move.w  index_8fba(pc,d0.w),d1
                jmp     index_8fba(pc,d1.w)
; End of function sub_8FA6

; ---------------------------------------------------------------------------
index_8fba:     dc.w entry_8fc6-index_8fba
                dc.w entry_8fc8-index_8fba
                dc.w entry_8fd2-index_8fba
                dc.w entry_8fdc-index_8fba
                dc.w entry_8fe6-index_8fba
                dc.w entry_9006-index_8fba
; ---------------------------------------------------------------------------

entry_8fc6:
                rts
; ---------------------------------------------------------------------------

entry_8fc8:
                move.b  ($FFFFFE60).w,d0
                move.w  #$20,d1 
                bra.s   loc_8FEE
; ---------------------------------------------------------------------------

entry_8fd2:
                move.b  ($FFFFFE64).w,d0
                move.w  #$30,d1 
                bra.s   loc_8FEE
; ---------------------------------------------------------------------------

entry_8fdc:
                move.b  ($FFFFFE68).w,d0
                move.w  #$40,d1 
                bra.s   loc_8FEE
; ---------------------------------------------------------------------------

entry_8fe6:
                move.b  ($FFFFFE6C).w,d0
                move.w  #$60,d1 

loc_8FEE:
                btst    #3,$28(a0)
                beq.s   loc_8FFA
                neg.w   d0
                add.w   d1,d0

loc_8FFA:
                move.w  $2C(a0),d1
                sub.w   d0,d1
                move.w  d1,$C(a0)
                rts
; ---------------------------------------------------------------------------

entry_9006:
                move.b  $34(a0),d0
                tst.b   $25(a0)
                bne.s   loc_9018
                subq.b  #2,d0
                bcc.s   loc_9024
                moveq   #0,d0
                bra.s   loc_9024
; ---------------------------------------------------------------------------

loc_9018:
                addq.b  #4,d0
                cmpi.b  #$40,d0 
                bcs.s   loc_9024
                move.b  #$40,d0 

loc_9024:
                move.b  d0,$34(a0)
                jsr     (CalcSine).l
                lsr.w   #4,d0
                move.w  d0,d1
                add.w   $2C(a0),d0
                move.w  d0,$C(a0)
                cmpi.b  #$20,$34(a0) 
                bne.s   loc_9082
                tst.b   $35(a0)
                bne.s   loc_9082
                move.b  #1,$35(a0)
                bsr.w   FindFreeObjectSlot2
                bne.s   loc_9082
                move.b  #$35,0(a1) 
                move.w  8(a0),8(a1)
                move.w  $2C(a0),$2C(a1)
                addq.w  #8,$2C(a1)
                subq.w  #3,$2C(a1)
                subi.w  #$40,8(a1) 
                move.l  $30(a0),$30(a1)
                move.l  a0,$38(a1)
                movea.l a0,a2
                bsr.s   sub_90A4

loc_9082:
                moveq   #0,d2
                lea     $36(a0),a2
                move.b  (a2)+,d2
                subq.b  #1,d2
                bcs.s   locret_90A2

loc_908E:
                moveq   #0,d0
                move.b  (a2)+,d0
                lsl.w   #6,d0
                addi.w  #-$3000,d0
                movea.w d0,a1
                move.w  d1,$3C(a1)
                dbf     d2,loc_908E

locret_90A2:
                rts

; =============== S U B R O U T I N E =======================================


sub_90A4:
                lea     $36(a2),a2
                moveq   #0,d0
                move.b  (a2),d0
                addq.b  #1,(a2)
                lea     1(a2,d0.w),a2
                move.w  a1,d0
                subi.w  #$D000,d0
                lsr.w   #6,d0
                andi.w  #$7F,d0
                move.b  d0,(a2)
                rts
; End of function sub_90A4

; ---------------------------------------------------------------------------

loc_90C2:
                tst.b   $35(a0)
                beq.s   loc_90CE
                tst.b   1(a0)
                bpl.s   loc_90EE

loc_90CE:
                move.w  $2A(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.w   DeleteObject
                rts
; ---------------------------------------------------------------------------

loc_90EE:
                moveq   #0,d2
                lea     $36(a0),a2
                move.b  (a2),d2
                clr.b   (a2)+
                subq.b  #1,d2
                bcs.s   locret_911E

loc_90FC:
                moveq   #0,d0
                move.b  (a2),d0
                clr.b   (a2)+
                lsl.w   #6,d0
                addi.w  #-$3000,d0
                movea.w d0,a1
                bsr.w   loc_878A
                dbf     d2,loc_90FC
                move.b  #0,$35(a0)
                move.b  #0,$34(a0)

locret_911E:
                rts
; ---------------------------------------------------------------------------
entry_9120:     dc.b $20, $20, $20, $20, $20, $20, $20, $20
                dc.b $20, $20, $20, $20, $20, $20, $21, $22
                dc.b $23, $24, $25, $26, $27, $28, $29, $2A
                dc.b $2B, $2C, $2D, $2E, $2F, $30, $30, $30
                dc.b $30, $30, $30, $30, $30, $30, $30, $30
                dc.b $30, $30, $30, $30, $30, $30, $30, $2F
                dc.b $2E, $2D, $2C, $2B, $2A, $29, $28, $27
                dc.b $26, $25, $24, $23, $22, $21, $20, $20
                dc.b $20, $20, $20, $20, $20, $20, $20, $20
                dc.b $20, $20, $20, $20
entry_916C:     dc.b $30, $30, $30, $30, $30, $30, $30, $30
                dc.b $30, $30, $30, $30, $30, $30, $30, $30
                dc.b $30, $30, $30, $30, $30, $30, $30, $30
                dc.b $30, $30, $30, $30, $30, $30, $30, $30
                dc.b $30, $30, $30, $30, $30, $30, $30, $30
                dc.b $30, $30, $30, $30
entry_9198:     dc.b $20, $20, $20, $20, $20, $20, $21, $22
                dc.b $23, $24, $25, $26, $27, $28, $29, $2A
                dc.b $2B, $2C, $2D, $2E, $2F, $30, $31, $32
                dc.b $33, $34, $35, $36, $37, $38, $39, $3A
                dc.b $3B, $3C, $3D, $3E, $3F, $40, $40, $40
                dc.b $40, $40, $40, $40, $40, $40, $40, $40
                dc.b $40, $40, $40, $40, $40, $40, $40, $3F
                dc.b $3E, $3D, $3C, $3B, $3A, $39, $38, $37
                dc.b $36, $35, $34, $33, $32, $31, $30, $30
                dc.b $30, $30, $30, $30
; ---------------------------------------------------------------------------

Obj35:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  index_91f2(pc,d0.w),d1
                jmp     index_91f2(pc,d1.w)
; ---------------------------------------------------------------------------
index_91f2:     dc.w entry_91F8-*
                dc.w entry_9240-index_91f2
                dc.w entry_92ba-index_91f2
; ---------------------------------------------------------------------------

entry_91F8:
                addq.b  #2,$24(a0)
                move.l  #Map_FireBall,4(a0)
                move.w  #$345,2(a0)
                move.w  8(a0),$2A(a0)
                move.b  #4,1(a0)
                move.b  #1,$19(a0)
                move.b  #$8B,$20(a0)
                move.b  #8,$18(a0)
                move.w  #$C8,d0
                jsr     (PlaySound_Special).l
                tst.b   $28(a0)
                beq.s   entry_9240
                addq.b  #2,$24(a0)
                bra.w   entry_92ba
; ---------------------------------------------------------------------------

entry_9240:
                movea.l $30(a0),a1
                move.w  8(a0),d1
                sub.w   $2A(a0),d1
                addi.w  #$C,d1
                move.w  d1,d0
                lsr.w   #1,d0
                move.b  (a1,d0.w),d0
                neg.w   d0
                add.w   $2C(a0),d0
                move.w  d0,d2
                add.w   $3C(a0),d0
                move.w  d0,$C(a0)
                cmpi.w  #$84,d1
                bcc.s   loc_92B8
                addi.l  #loc_10000,8(a0)
                cmpi.w  #$80,d1
                bcc.s   loc_92B8
                move.l  8(a0),d0
                addi.l  #$80000,d0
                andi.l  #$FFFFF,d0
                bne.s   loc_92B8
                bsr.w   FindFreeObjectSlot2
                bne.s   loc_92B8
                move.b  #$35,0(a1)
                move.w  8(a0),8(a1)
                move.w  d2,$2C(a1)
                move.w  $3C(a0),$3C(a1)
                move.b  #1,$28(a1)
                movea.l $38(a0),a2
                bsr.w   sub_90A4

loc_92B8:
                bra.s   loc_92C6
; ---------------------------------------------------------------------------

entry_92ba:
                move.w  $2C(a0),d0
                add.w   $3C(a0),d0
                move.w  d0,$C(a0)

loc_92C6:
                lea     (unk_92D4).l,a1
                bsr.w   AnimateObject
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------
unk_92D4:       dc.b   0
                dc.b   2
                dc.b   5
                dc.b   0
                dc.b $20
                dc.b   1
                dc.b $21 ; !
                dc.b $FF

unk_92DC:       include "Map/MZPlatform.asm"

Map_FireBall:   include "Map/MZFireball.asm"
; ---------------------------------------------------------------------------

Obj30:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  Obj30_Index(pc,d0.w),d1
                jsr     Obj30_Index(pc,d1.w)
                bsr.w   DisplaySprite
                move.w  8(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.w   loc_93D8
                rts
; ---------------------------------------------------------------------------

loc_93D8:
                bsr.w   DeleteObject
                rts
; ---------------------------------------------------------------------------
Obj30_Index:    dc.w entry_93fa-Obj30_Index
                dc.w entry_9498-Obj30_Index
                dc.w entry_94b0-Obj30_Index
                dc.w entry_94ca-Obj30_Index
                dc.w entry_94d8-Obj30_Index
                dc.w entry_9500-Obj30_Index
byte_93EA:      dc.b 2, 4, 0
                dc.b 4, $48, 1
                dc.b 6, 4, 2
                even
byte_93F4:      dc.b 8, 0, 3
                dc.b $A, 0, 2
; ---------------------------------------------------------------------------

entry_93fa:
                lea     (byte_93EA).l,a2
                moveq   #2,d1
                cmpi.b  #3,$28(a0)
                bcs.s   loc_9412
                lea     (byte_93F4).l,a2
                moveq   #1,d1

loc_9412:
                movea.l a0,a1
                bra.s   loc_941C
; ---------------------------------------------------------------------------

loc_9416:
                bsr.w   FindFreeObjectSlot2
                bne.s   loc_9486

loc_941C:
                move.b  (a2)+,$24(a1)
                move.b  #$30,0(a1) 
                move.w  8(a0),8(a1)
                move.b  (a2)+,d0
                ext.w   d0
                add.w   $C(a0),d0
                move.w  d0,$C(a1)
                move.l  #unk_9630,4(a1)
                move.w  #$C38E,2(a1)
                move.b  #4,1(a1)
                move.w  $C(a1),$30(a1)
                move.b  $28(a0),$28(a1)
                move.b  #$20,$18(a1) 
                move.b  #4,$19(a1)
                move.b  (a2)+,$1A(a1)
                move.l  a0,$3C(a1)
                dbf     d1,loc_9416
                move.b  #$10,$18(a1)
                move.b  #3,$19(a1)
                addq.b  #8,$28(a1)
                andi.b  #$F,$28(a1)

loc_9486:
                move.w  #$90,$32(a0)
                move.b  #$38,$16(a0) 
                bset    #4,1(a0)

entry_9498:
                bsr.w   sub_9514
                move.w  #$2B,d1 
                move.w  #$24,d2 
                move.w  #$24,d3 
                move.w  8(a0),d4
                bra.w   sub_A2BC
; ---------------------------------------------------------------------------

entry_94b0:
                movea.l $3C(a0),a1
                move.w  $32(a1),$32(a0)
                bsr.w   sub_9514
                move.w  #$2B,d1 
                move.w  #$24,d2
                bra.w   sub_6936
; ---------------------------------------------------------------------------

entry_94ca:
                movea.l $3C(a0),a1
                move.w  $32(a1),$32(a0)
                bra.w   sub_9514
; ---------------------------------------------------------------------------

entry_94d8:
                bsr.w   sub_9514
                move.w  #$2B,d1 
                move.w  #$38,d2 
                move.w  #$38,d3 
                move.w  8(a0),d4
                bsr.w   sub_A2BC
                cmpi.b  #8,$24(a0)
                beq.s   locret_94FE
                move.b  #8,$24(a0)

locret_94FE:
                rts
; ---------------------------------------------------------------------------

entry_9500:
                movea.l $3C(a0),a1
                move.w  $32(a1),$32(a0)
                move.w  $C(a1),$30(a0)
                bra.w   *+4

; =============== S U B R O U T I N E =======================================


sub_9514:
                moveq   #0,d0
                move.b  $28(a0),d0
                andi.w  #7,d0
                add.w   d0,d0
                move.w  index_9528(pc,d0.w),d1
                jmp     index_9528(pc,d1.w)
; End of function sub_9514

; ---------------------------------------------------------------------------
index_9528:     dc.w entry_9532-index_9528
                dc.w entry_9534-index_9528
                dc.w entry_9540-index_9528
                dc.w entry_9550-index_9528
                dc.w entry_95d6-index_9528
; ---------------------------------------------------------------------------

entry_9532:
                rts
; ---------------------------------------------------------------------------

entry_9534:
                move.b  ($FFFFFE70).w,d0
                move.w  #$40,d1 
                bra.w   loc_9616
; ---------------------------------------------------------------------------

entry_9540:
                move.b  ($FFFFFE70).w,d0
                move.w  #$40,d1 
                neg.w   d0
                add.w   d1,d0
                bra.w   loc_9616
; ---------------------------------------------------------------------------

entry_9550:
                btst    #3,$28(a0)
                beq.s   loc_9564
                move.b  ($FFFFFE70).w,d0
                subi.w  #$10,d0
                bra.w   loc_9624
; ---------------------------------------------------------------------------

loc_9564:
                btst    #3,$22(a0)
                bne.s   loc_9574
                bclr    #0,$34(a0)
                bra.s   loc_95A8
; ---------------------------------------------------------------------------

loc_9574:
                tst.b   $34(a0)
                bne.s   loc_95A8
                move.b  #1,$34(a0)
                bset    #0,$35(a0)
                beq.s   loc_95A8
                bset    #7,$34(a0)
                move.w  #$10,$36(a0)
                move.b  #$A,$38(a0)
                cmpi.w  #$40,$32(a0) 
                bne.s   loc_95A8
                move.w  #$40,$36(a0) 

loc_95A8:
                tst.b   $34(a0)
                bpl.s   loc_95D0
                tst.b   $38(a0)
                beq.s   loc_95BA
                subq.b  #1,$38(a0)
                bne.s   loc_95D0

loc_95BA:
                tst.w   $32(a0)
                beq.s   loc_95CA
                subq.w  #1,$32(a0)
                subq.w  #1,$36(a0)
                bne.s   loc_95D0

loc_95CA:
                bclr    #7,$34(a0)

loc_95D0:
                move.w  $32(a0),d0
                bra.s   loc_9624
; ---------------------------------------------------------------------------

entry_95d6:
                btst    #3,$28(a0)
                beq.s   loc_95E8
                move.b  ($FFFFFE70).w,d0
                subi.w  #$10,d0
                bra.s   loc_9624
; ---------------------------------------------------------------------------

loc_95E8:
                tst.b   $34(a0)
                bne.s   loc_9606
                lea     ($FFFFF7E0).w,a2
                moveq   #0,d0
                move.b  $28(a0),d0
                lsr.w   #4,d0
                tst.b   (a2,d0.w)
                beq.s   loc_9610
                move.b  #1,$34(a0)

loc_9606:
                tst.w   $32(a0)
                beq.s   loc_9610
                subq.w  #2,$32(a0)

loc_9610:
                move.w  $32(a0),d0
                bra.s   loc_9624
; ---------------------------------------------------------------------------

loc_9616:
                btst    #3,$28(a0)
                beq.s   loc_9624
                neg.w   d0
                add.w   d1,d0
                lsr.b   #1,d0

loc_9624:
                move.w  $30(a0),d1
                sub.w   d0,d1
                move.w  d1,$C(a0)
                rts
; ---------------------------------------------------------------------------
unk_9630:       include "Map/MZGlassPillar.asm"
; ---------------------------------------------------------------------------

Obj31:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  index_96c2(pc,d0.w),d1
                jmp     index_96c2(pc,d1.w)
; ---------------------------------------------------------------------------
index_96c2:     dc.w entry_96ea-index_96c2
                dc.w entry_97d0-index_96c2
                dc.w entry_9834-index_96c2
                dc.w entry_9846-index_96c2
                dc.w entry_9818-index_96c2
byte_96CC:      dc.b 0, 0
                dc.b 1, 0
byte_96D0:      dc.b 2, 0, 0
                dc.b 4, $1C, 1
                dc.b 8, $CC, 3
                dc.b 6, $F0, 2
word_96DC:      dc.w $7000, $A000
                dc.w $5000, $7800
                dc.w $3800, $5800
                dc.w $B800
; ---------------------------------------------------------------------------

entry_96ea:
                moveq   #0,d0
                move.b  $28(a0),d0
                bpl.s   loc_9706
                andi.w  #$7F,d0
                add.w   d0,d0
                lea     byte_96CC(pc,d0.w),a2
                move.b  (a2)+,$3A(a0)
                move.b  (a2)+,d0
                move.b  d0,$28(a0)

loc_9706:
                andi.b  #$F,d0
                add.w   d0,d0
                move.w  word_96DC(pc,d0.w),d2
                tst.w   d0
                bne.s   loc_9718
                move.w  d2,$32(a0)

loc_9718:
                lea     (byte_96D0).l,a2
                movea.l a0,a1
                moveq   #3,d1
                bra.s   loc_972C
; ---------------------------------------------------------------------------

loc_9724:
                bsr.w   FindFreeObjectSlot2
                bne.w   loc_97B0

loc_972C:
                move.b  (a2)+,$24(a1)
                move.b  #$31,0(a1)
                move.w  8(a0),8(a1)
                move.b  (a2)+,d0
                ext.w   d0
                add.w   $C(a0),d0
                move.w  d0,$C(a1)
                move.l  #unk_9B84,4(a1)
                move.w  #$300,2(a1)
                move.b  #4,1(a1)
                move.w  $C(a1),$30(a1)
                move.b  $28(a0),$28(a1)
                move.b  #$10,$18(a1)
                move.w  d2,$34(a1)
                move.b  #4,$19(a1)
                move.b  (a2)+,$1A(a1)
                cmpi.b  #1,$1A(a1)
                bne.s   loc_97A2
                subq.w  #1,d1
                move.b  $28(a0),d0
                andi.w  #$F0,d0
                cmpi.w  #$20,d0 
                beq.s   loc_972C
                move.b  #$38,$18(a1) 
                move.b  #$90,$20(a1)
                addq.w  #1,d1

loc_97A2:
                move.l  a0,$3C(a1)
                dbf     d1,loc_9724
                move.b  #3,$19(a1)

loc_97B0:
                moveq   #0,d0
                move.b  $28(a0),d0
                lsr.w   #3,d0
                andi.b  #$E,d0
                lea     byte_97CA(pc,d0.w),a2
                move.b  (a2)+,$18(a0)
                move.b  (a2)+,$1A(a0)
                bra.s   entry_97d0
; ---------------------------------------------------------------------------
byte_97CA:      dc.b $38, 0
                dc.b $30, 9
                dc.b $10, $A
; ---------------------------------------------------------------------------

entry_97d0:
                bsr.w   sub_986A
                move.w  $C(a0),($FFFFF7A4).w
                moveq   #0,d1
                move.b  $18(a0),d1
                addi.w  #$B,d1
                move.w  #$C,d2
                move.w  #$D,d3
                move.w  8(a0),d4
                bsr.w   sub_A2BC
                btst    #3,$22(a0)
                beq.s   loc_9810
                cmpi.b  #$10,$32(a0)
                bcc.s   loc_9810
                movea.l a0,a2
                lea     ($FFFFD000).w,a0
                bsr.w   loc_FD78
                movea.l a2,a0

loc_9810:
                bsr.w   DisplaySprite
                bra.w   loc_984A
; ---------------------------------------------------------------------------

entry_9818:
                move.b  #$80,$16(a0)
                bset    #4,1(a0)
                movea.l $3C(a0),a1
                move.b  $32(a1),d0
                lsr.b   #5,d0
                addq.b  #3,d0
                move.b  d0,$1A(a0)

entry_9834:
                movea.l $3C(a0),a1
                moveq   #0,d0
                move.b  $32(a1),d0
                add.w   $30(a0),d0
                move.w  d0,$C(a0)

entry_9846:
                bsr.w   DisplaySprite

loc_984A:
                move.w  8(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.w   DeleteObject
                rts

; =============== S U B R O U T I N E =======================================


sub_986A:
                move.b  $28(a0),d0
                andi.w  #$F,d0
                add.w   d0,d0
                move.w  index_987c(pc,d0.w),d1
                jmp     index_987c(pc,d1.w)
; End of function sub_986A

; ---------------------------------------------------------------------------
index_987c:     dc.w entry_988a-index_987c
                dc.w entry_9926-index_987c
                dc.w entry_9926-index_987c
                dc.w entry_99b6-index_987c
                dc.w entry_9926-index_987c
                dc.w entry_99b6-index_987c
                dc.w entry_9926-index_987c
; ---------------------------------------------------------------------------

entry_988a:
                lea     ($FFFFF7E0).w,a2
                moveq   #0,d0
                move.b  $3A(a0),d0
                tst.b   (a2,d0.w)
                beq.s   loc_98DE
                tst.w   ($FFFFF7A4).w
                bpl.s   loc_98A8
                cmpi.b  #$10,$32(a0)
                beq.s   loc_98D6

loc_98A8:
                tst.w   $32(a0)
                beq.s   loc_98D6
                move.b  ($FFFFFE0F).w,d0
                andi.b  #$F,d0
                bne.s   loc_98C8
                tst.b   1(a0)
                bpl.s   loc_98C8
                move.w  #$C7,d0
                jsr     (PlaySound_Special).l

loc_98C8:
                subi.w  #$80,$32(a0)
                bcc.s   loc_9916
                move.w  #0,$32(a0)

loc_98D6:
                move.w  #0,$12(a0)
                bra.s   loc_9916
; ---------------------------------------------------------------------------

loc_98DE:
                move.w  $34(a0),d1
                cmp.w   $32(a0),d1
                beq.s   loc_9916
                move.w  $12(a0),d0
                addi.w  #$70,$12(a0) 
                add.w   d0,$32(a0)
                cmp.w   $32(a0),d1
                bhi.s   loc_9916
                move.w  d1,$32(a0)
                move.w  #0,$12(a0)
                tst.b   1(a0)
                bpl.s   loc_9916
                move.w  #$BD,d0
                jsr     (PlaySound_Special).l

loc_9916:
                moveq   #0,d0
                move.b  $32(a0),d0
                add.w   $30(a0),d0
                move.w  d0,$C(a0)
                rts
; ---------------------------------------------------------------------------

entry_9926:
                tst.w   $36(a0)
                beq.s   loc_996E
                tst.w   $38(a0)
                beq.s   loc_9938
                subq.w  #1,$38(a0)
                bra.s   loc_99B2
; ---------------------------------------------------------------------------

loc_9938:
                move.b  ($FFFFFE0F).w,d0
                andi.b  #$F,d0
                bne.s   loc_9952
                tst.b   1(a0)
                bpl.s   loc_9952
                move.w  #$C7,d0
                jsr     (PlaySound_Special).l

loc_9952:
                subi.w  #$80,$32(a0)
                bcc.s   loc_99B2
                move.w  #0,$32(a0)
                move.w  #0,$12(a0)
                move.w  #0,$36(a0)
                bra.s   loc_99B2
; ---------------------------------------------------------------------------

loc_996E:
                move.w  $34(a0),d1
                cmp.w   $32(a0),d1
                beq.s   loc_99B2
                move.w  $12(a0),d0
                addi.w  #$70,$12(a0) 
                add.w   d0,$32(a0)
                cmp.w   $32(a0),d1
                bhi.s   loc_99B2
                move.w  d1,$32(a0)
                move.w  #0,$12(a0)
                move.w  #1,$36(a0)
                move.w  #$3C,$38(a0) 
                tst.b   1(a0)
                bpl.s   loc_99B2
                move.w  #$BD,d0
                jsr     (PlaySound_Special).l

loc_99B2:
                bra.w   loc_9916
; ---------------------------------------------------------------------------

entry_99b6:
                move.w  ($FFFFD008).w,d0
                sub.w   8(a0),d0
                bcc.s   loc_99C2
                neg.w   d0

loc_99C2:
                cmpi.w  #$90,d0
                bcc.s   loc_99CC
                addq.b  #1,$28(a0)

loc_99CC:
                bra.w   loc_9916
; ---------------------------------------------------------------------------

Obj45:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  index_99de(pc,d0.w),d1
                jmp     index_99de(pc,d1.w)
; ---------------------------------------------------------------------------
index_99de:     dc.w entry_99fa-index_99de
                dc.w entry_9a8e-index_99de
                dc.w entry_9ac4-index_99de
                dc.w entry_9ad8-index_99de
                dc.w entry_9ab0-index_99de
byte_99E8:      dc.b 2, 4, 0
                dc.b 4, $E4, 1
                dc.b 8, $34, 3
                dc.b 6, $28, 2
unk_99F4:       dc.b $38 ; 8
                dc.b   0
                dc.b $A0
                dc.b   0
                dc.b $50 ; P
                dc.b   0
; ---------------------------------------------------------------------------

entry_99fa:
                moveq   #0,d0
                move.b  $28(a0),d0
                add.w   d0,d0
                move.w  unk_99F4(pc,d0.w),d2
                lea     (byte_99E8).l,a2
                movea.l a0,a1
                moveq   #3,d1
                bra.s   loc_9A18
; ---------------------------------------------------------------------------

loc_9A12:
                bsr.w   FindFreeObjectSlot2
                bne.s   loc_9A88

loc_9A18:
                move.b  (a2)+,$24(a1)
                move.b  #$45,0(a1)
                move.w  $C(a0),$C(a1)
                move.b  (a2)+,d0
                ext.w   d0
                add.w   8(a0),d0
                move.w  d0,8(a1)
                move.l  #$9C90,4(a1)
                move.w  #$300,2(a1)
                move.b  #4,1(a1)
                move.w  8(a1),$30(a1)
                move.w  8(a0),$3A(a1)
                move.b  $28(a0),$28(a1)
                move.b  #$20,$18(a1) 
                move.w  d2,$34(a1)
                move.b  #4,$19(a1)
                cmpi.b  #1,(a2)
                bne.s   loc_9A76
                move.b  #$91,$20(a1)

loc_9A76:
                move.b  (a2)+,$1A(a1)
                move.l  a0,$3C(a1)
                dbf     d1,loc_9A12
                move.b  #3,$19(a1)

loc_9A88:
                move.b  #$10,$18(a0)

entry_9a8e:
                move.w  8(a0),-(sp)
                bsr.w   sub_9AFC
                move.w  #$17,d1
                move.w  #$20,d2 
                move.w  #$20,d3 
                move.w  (sp)+,d4
                bsr.w   sub_A2BC
                bsr.w   DisplaySprite
                bra.w   loc_9ADC
; ---------------------------------------------------------------------------

entry_9ab0:
                movea.l $3C(a0),a1
                move.b  $32(a1),d0
                addi.b  #$10,d0
                lsr.b   #5,d0
                addq.b  #3,d0
                move.b  d0,$1A(a0)

entry_9ac4:
                movea.l $3C(a0),a1
                moveq   #0,d0
                move.b  $32(a1),d0
                neg.w   d0
                add.w   $30(a0),d0
                move.w  d0,8(a0)

entry_9ad8:
                bsr.w   DisplaySprite

loc_9ADC:
                move.w  $3A(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.w   DeleteObject
                rts

; =============== S U B R O U T I N E =======================================


sub_9AFC:
                moveq   #0,d0
                move.b  $28(a0),d0
                add.w   d0,d0
                move.w  unk_9B0C(pc,d0.w),d1
                jmp     unk_9B0C(pc,d1.w)
; End of function sub_9AFC

; ---------------------------------------------------------------------------
unk_9B0C:       dc.b   0
                dc.b   4
                dc.b   0
                dc.b   4
                dc.b $4A ; J
                dc.b $68 ; h
                dc.b   0
                dc.b $36 ; 6
                dc.b $67 ; g
                dc.b $28 ; (
                dc.b $4A ; J
                dc.b $68 ; h
                dc.b   0
                dc.b $38 ; 8
                dc.b $67 ; g
                dc.b   6
                dc.b $53 ; S
                dc.b $68 ; h
                dc.b   0
                dc.b $38 ; 8
                dc.b $60 
                dc.b $50 ; P
                dc.b   4
                dc.b $68 ; h
                dc.b   0
                dc.b $80
                dc.b   0
                dc.b $32 ; 2
                dc.b $64 ; d
                dc.b $48 ; H
                dc.b $31 ; 1
                dc.b $7C ; |
                dc.b   0
                dc.b   0
                dc.b   0
                dc.b $32 ; 2
                dc.b $31 ; 1
                dc.b $7C ; |
                dc.b   0
                dc.b   0
                dc.b   0
                dc.b $10
                dc.b $31 ; 1
                dc.b $7C ; |
                dc.b   0
                dc.b   0
                dc.b   0
                dc.b $36 ; 6
                dc.b $60 
                dc.b $34 ; 4
                dc.b $32 ; 2
                dc.b $28 ; (
                dc.b   0
                dc.b $34 ; 4
                dc.b $B2
                dc.b $68 ; h
                dc.b   0
                dc.b $32 ; 2
                dc.b $67 ; g
                dc.b $2A 
                dc.b $30 ; 0
                dc.b $28 ; (
                dc.b   0
                dc.b $10
                dc.b   6
                dc.b $68 ; h
                dc.b   0
                dc.b $70 ; p
                dc.b   0
                dc.b $10
                dc.b $D1
                dc.b $68 ; h
                dc.b   0
                dc.b $32 ; 2
                dc.b $B2
                dc.b $68 ; h
                dc.b   0
                dc.b $32 ; 2
                dc.b $62 ; b
                dc.b $16
                dc.b $31 ; 1
                dc.b $41 
                dc.b   0
                dc.b $32 ; 2
                dc.b $31 ; 1
                dc.b $7C ; |
                dc.b   0
                dc.b   0
                dc.b   0
                dc.b $10
                dc.b $31 ; 1
                dc.b $7C ; |
                dc.b   0
                dc.b   1
                dc.b   0
                dc.b $36 ; 6
                dc.b $31 ; 1
                dc.b $7C ; |
                dc.b   0
                dc.b $3C ; <
                dc.b   0
                dc.b $38 ; 8
                dc.b $70 ; p
                dc.b   0
                dc.b $10
                dc.b $28 ; (
                dc.b   0
                dc.b $32 ; 2
                dc.b $44 ; D
                dc.b $40 ; @
                dc.b $D0
                dc.b $68 ; h
                dc.b   0
                dc.b $30 ; 0
                dc.b $31 ; 1
                dc.b $40 ; @
                dc.b   0
                dc.b   8
                dc.b $4E ; N
                dc.b $75 ; u

unk_9B84:       include "Map/SpikedWeight.asm"
; ---------------------------------------------------------------------------

Obj32:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  index_9d72(pc,d0.w),d1
                jmp     index_9d72(pc,d1.w)
; ---------------------------------------------------------------------------
index_9d72:     dc.w entry_9D76-*
                dc.w entry_9dac-index_9d72
; ---------------------------------------------------------------------------

entry_9D76:
                addq.b  #2,$24(a0)
                move.l  #unk_9ED4,4(a0)
                move.w  #$4513,2(a0)
                cmpi.b  #2,($FFFFFE10).w
                beq.s   loc_9D96
                move.w  #$513,2(a0)

loc_9D96:
                move.b  #4,1(a0)
                move.b  #$10,$18(a0)
                move.b  #4,$19(a0)
                addq.w  #3,$C(a0)

entry_9dac:
                tst.b   1(a0)
                bpl.s   loc_9E2E
                move.w  #$1B,d1
                move.w  #5,d2
                move.w  #5,d3
                move.w  8(a0),d4
                bsr.w   sub_A2BC
                bclr    #0,$1A(a0)
                move.b  $28(a0),d0
                andi.w  #$F,d0
                lea     ($FFFFF7E0).w,a3
                lea     (a3,d0.w),a3
                tst.b   $28(a0)
                bpl.s   loc_9DE8
                bsr.w   sub_9E58
                bne.s   loc_9DFE

loc_9DE8:
                moveq   #0,d3
                btst    #6,$28(a0)
                beq.s   loc_9DF4
                moveq   #7,d3

loc_9DF4:
                tst.b   $25(a0)
                bne.s   loc_9DFE
                bclr    d3,(a3)
                bra.s   loc_9E14
; ---------------------------------------------------------------------------

loc_9DFE:
                tst.b   (a3)
                bne.s   loc_9E0C
                move.w  #$CD,d0
                jsr     (PlaySound_Special).l

loc_9E0C:
                bset    #0,$1A(a0)
                bset    d3,(a3)

loc_9E14:
                btst    #5,$28(a0)
                beq.s   loc_9E2E
                subq.b  #1,$1E(a0)
                bpl.s   loc_9E2E
                move.b  #7,$1E(a0)
                bchg    #1,$1A(a0)

loc_9E2E:
                bsr.w   DisplaySprite
                move.w  8(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.w   loc_9E52
                rts
; ---------------------------------------------------------------------------

loc_9E52:
                bsr.w   DeleteObject
                rts

; =============== S U B R O U T I N E =======================================


sub_9E58:
                move.w  8(a0),d2
                move.w  $C(a0),d3
                subi.w  #$10,d2
                subq.w  #8,d3
                move.w  #$20,d4 
                move.w  #$10,d5
                lea     ($FFFFD800).w,a1
                move.w  #$5F,d6 

loc_9E76:
                tst.b   1(a1)
                bpl.s   loc_9E82
                cmpi.b  #$33,(a1)
                beq.s   loc_9E90

loc_9E82:
                lea     $40(a1),a1
                dbf     d6,loc_9E76
                moveq   #0,d0

locret_9E8C:
                rts
; ---------------------------------------------------------------------------
                dc.b $10
                dc.b $10
; ---------------------------------------------------------------------------

loc_9E90:
                moveq   #1,d0
                andi.w  #$3F,d0 
                add.w   d0,d0
                lea     locret_9E8C(pc,d0.w),a2
                move.b  (a2)+,d1
                ext.w   d1
                move.w  8(a1),d0
                sub.w   d1,d0
                sub.w   d2,d0
                bcc.s   loc_9EB2
                add.w   d1,d1
                add.w   d1,d0
                bcs.s   loc_9EB6
                bra.s   loc_9E82
; ---------------------------------------------------------------------------

loc_9EB2:
                cmp.w   d4,d0
                bhi.s   loc_9E82

loc_9EB6:
                move.b  (a2)+,d1
                ext.w   d1
                move.w  $C(a1),d0
                sub.w   d1,d0
                sub.w   d3,d0
                bcc.s   loc_9ECC
                add.w   d1,d1
                add.w   d1,d0
                bcs.s   loc_9ED0
                bra.s   loc_9E82
; ---------------------------------------------------------------------------

loc_9ECC:
                cmp.w   d5,d0
                bhi.s   loc_9E82

loc_9ED0:
                moveq   #1,d0
                rts
; End of function sub_9E58

; ---------------------------------------------------------------------------
unk_9ED4:       include "Map/Switch.asm"
; ---------------------------------------------------------------------------

Obj33:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  index_9f10(pc,d0.w),d1
                jmp     index_9f10(pc,d1.w)
; ---------------------------------------------------------------------------
index_9f10:     dc.w entry_9f1a-index_9f10
                dc.w entry_9f84-index_9f10
                dc.w entry_a00c-index_9f10
byte_9F16:      dc.b $10, 0
                dc.b $40, 1
; ---------------------------------------------------------------------------

entry_9f1a:
                addq.b  #2,$24(a0)
                move.b  #$F,$16(a0)
                move.b  #$F,$17(a0)
                move.l  #unk_A29C,4(a0)
                move.w  #$42B8,2(a0)
                move.b  #4,1(a0)
                move.b  #3,$19(a0)
                moveq   #0,d0
                move.b  $28(a0),d0
                add.w   d0,d0
                andi.w  #$E,d0
                lea     byte_9F16(pc,d0.w),a2
                move.b  (a2)+,$18(a0)
                move.b  (a2)+,$1A(a0)
                tst.b   $28(a0)
                beq.s   loc_9F68
                move.w  #$C2B8,2(a0)

loc_9F68:
                lea     ($FFFFFC00).w,a2
                moveq   #0,d0
                move.b  $23(a0),d0
                beq.s   entry_9f84
                bclr    #7,2(a2,d0.w)
                btst    #0,2(a2,d0.w)
                bne.w   DeleteObject

entry_9f84:
                moveq   #0,d1
                move.b  $18(a0),d1
                addi.w  #$B,d1
                move.w  #$10,d2
                move.w  #$11,d3
                move.w  8(a0),d4
                bsr.w   sub_A14E
                cmpi.w  #$200,($FFFFFE10).w
                bne.s   loc_9FD4
                bclr    #7,$28(a0)
                move.w  8(a0),d0
                cmpi.w  #$A20,d0
                bcs.s   loc_9FD4
                cmpi.w  #$AA1,d0
                bcc.s   loc_9FD4
                move.w  ($FFFFF7A4).w,d0
                subi.w  #$1C,d0
                move.w  d0,$C(a0)
                bset    #7,($FFFFF7A4).w
                bset    #7,$28(a0)

loc_9FD4:
                bsr.w   DisplaySprite
                move.w  8(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.s   loc_9FF6
                rts
; ---------------------------------------------------------------------------

loc_9FF6:
                lea     ($FFFFFC00).w,a2
                moveq   #0,d0
                move.b  $23(a0),d0
                beq.s   loc_A008
                bclr    #0,2(a2,d0.w)

loc_A008:
                bra.w   DeleteObject
; ---------------------------------------------------------------------------

entry_a00c:
                move.w  8(a0),-(sp)
                cmpi.b  #4,$25(a0)
                bcc.s   loc_A01C
                bsr.w   ObjectMove

loc_A01C:
                btst    #1,$22(a0)
                beq.s   loc_A05E
                addi.w  #$18,$12(a0)
                bsr.w   ObjectHitFloor
                tst.w   d1
                bpl.w   loc_A05C
                add.w   d1,$C(a0)
                clr.w   $12(a0)
                bclr    #1,$22(a0)
                move.w  (a1),d0
                andi.w  #$3FF,d0
                cmpi.w  #$2D2,d0
                bcs.s   loc_A05C
                move.w  $30(a0),d0
                asr.w   #3,d0
                move.w  d0,$10(a0)
                clr.w   $E(a0)

loc_A05C:
                bra.s   loc_A0A0
; ---------------------------------------------------------------------------

loc_A05E:
                tst.w   $10(a0)
                beq.w   loc_A090
                bmi.s   loc_A078
                moveq   #0,d3
                move.b  $18(a0),d3
                bsr.w   sub_106B2
                tst.w   d1
                bmi.s   loc_A08A
                bra.s   loc_A0A0
; ---------------------------------------------------------------------------

loc_A078:
                moveq   #0,d3
                move.b  $18(a0),d3
                not.w   d3
                bsr.w   sub_10844
                tst.w   d1
                bmi.s   loc_A08A
                bra.s   loc_A0A0
; ---------------------------------------------------------------------------

loc_A08A:
                clr.w   $10(a0)
                bra.s   loc_A0A0
; ---------------------------------------------------------------------------

loc_A090:
                addi.l  #$2001,$C(a0)
                cmpi.b  #$A0,$F(a0)
                bcc.s   loc_A0CC

loc_A0A0:
                moveq   #0,d1
                move.b  $18(a0),d1
                addi.w  #$B,d1
                move.w  #$10,d2
                move.w  #$11,d3
                move.w  (sp)+,d4
                bsr.w   sub_A14E
                cmpi.b  #4,$24(a0)
                beq.s   loc_A0C6
                move.b  #4,$24(a0)

loc_A0C6:
                bsr.s   sub_A0E2
                bra.w   loc_9FD4
; ---------------------------------------------------------------------------

loc_A0CC:
                move.w  (sp)+,d4
                lea     ($FFFFD000).w,a1
                bclr    #3,$22(a1)
                bclr    #3,$22(a0)
                bra.w   loc_9FF6

; =============== S U B R O U T I N E =======================================


sub_A0E2:
                cmpi.w  #$201,($FFFFFE10).w
                bne.s   loc_A108
                move.w  #$FFE0,d2
                cmpi.w  #$DD0,8(a0)
                beq.s   loc_A126
                cmpi.w  #$CC0,8(a0)
                beq.s   loc_A126
                cmpi.w  #$BA0,8(a0)
                beq.s   loc_A126
                rts
; ---------------------------------------------------------------------------

loc_A108:
                cmpi.w  #$202,($FFFFFE10).w
                bne.s   locret_A124
                move.w  #$20,d2 
                cmpi.w  #$560,8(a0)
                beq.s   loc_A126
                cmpi.w  #$5C0,8(a0)
                beq.s   loc_A126

locret_A124:
                rts
; ---------------------------------------------------------------------------

loc_A126:
                bsr.w   FindFreeObjectSlot
                bne.s   locret_A14C
                move.b  #$4C,0(a1)
                move.w  8(a0),8(a1)
                add.w   d2,8(a1)
                move.w  $C(a0),$C(a1)
                addi.w  #$10,$C(a1)
                move.l  a0,$3C(a1)

locret_A14C:
                rts
; End of function sub_A0E2


; =============== S U B R O U T I N E =======================================


sub_A14E:
                move.b  $25(a0),d0
                beq.w   loc_A1DE
                subq.b  #2,d0
                bne.s   loc_A172
                bsr.w   ExitPlatform
                btst    #3,$22(a1)
                bne.s   loc_A16C
                clr.b   $25(a0)
                rts
; ---------------------------------------------------------------------------

loc_A16C:
                move.w  d4,d2
                bra.w   sub_560E
; ---------------------------------------------------------------------------

loc_A172:
                subq.b  #2,d0
                bne.s   loc_A1B8
                bsr.w   ObjectMove
                addi.w  #$18,$12(a0)
                bsr.w   ObjectHitFloor
                tst.w   d1
                bpl.w   locret_A1B6
                add.w   d1,$C(a0)
                clr.w   $12(a0)
                clr.b   $25(a0)
                move.w  (a1),d0
                andi.w  #$3FF,d0
                cmpi.w  #$2D2,d0
                bcs.s   locret_A1B6
                move.w  $30(a0),d0
                asr.w   #3,d0
                move.w  d0,$10(a0)
                move.b  #4,$24(a0)
                clr.w   $E(a0)

locret_A1B6:
                rts
; ---------------------------------------------------------------------------

loc_A1B8:
                bsr.w   ObjectMove
                move.w  8(a0),d0
                andi.w  #$C,d0
                bne.w   locret_A29A
                andi.w  #$FFF0,8(a0)
                move.w  $10(a0),$30(a0)
                clr.w   $10(a0)
                subq.b  #2,$25(a0)
                rts
; ---------------------------------------------------------------------------

loc_A1DE:
                bsr.w   loc_A37C
                tst.w   d4
                beq.w   locret_A29A
                bmi.w   locret_A29A
                tst.w   d0
                beq.w   locret_A29A
                bmi.s   loc_A222
                btst    #0,$22(a1)
                bne.w   locret_A29A
                move.w  d0,-(sp)
                moveq   #0,d3
                move.b  $18(a0),d3
                bsr.w   sub_106B2
                move.w  (sp)+,d0
                tst.w   d1
                bmi.w   locret_A29A
                addi.l  #loc_10000,8(a0)
                moveq   #1,d0
                move.w  #$40,d1 
                bra.s   loc_A24C
; ---------------------------------------------------------------------------

loc_A222:
                btst    #0,$22(a1)
                beq.s   locret_A29A
                move.w  d0,-(sp)
                moveq   #0,d3
                move.b  $18(a0),d3
                not.w   d3
                bsr.w   sub_10844
                move.w  (sp)+,d0
                tst.w   d1
                bmi.s   locret_A29A
                subi.l  #loc_10000,8(a0)
                moveq   #$FFFFFFFF,d0
                move.w  #$FFC0,d1

loc_A24C:
                lea     ($FFFFD000).w,a1
                add.w   d0,8(a1)
                move.w  d1,$14(a1)
                move.w  #0,$10(a1)
                move.w  d0,-(sp)
                move.w  #$A7,d0
                jsr     (PlaySound_Special).l
                move.w  (sp)+,d0
                tst.b   $28(a0)
                bmi.s   locret_A29A
                move.w  d0,-(sp)
                bsr.w   ObjectHitFloor
                move.w  (sp)+,d0
                cmpi.w  #4,d1
                ble.s   loc_A296
                move.w  #$400,$10(a0)
                tst.w   d0
                bpl.s   loc_A28E
                neg.w   $10(a0)

loc_A28E:
                move.b  #6,$25(a0)
                bra.s   locret_A29A
; ---------------------------------------------------------------------------

loc_A296:
                add.w   d1,$C(a0)

locret_A29A:
                rts
; End of function sub_A14E

; ---------------------------------------------------------------------------
unk_A29C:       dc.b   0
                dc.b   4
                dc.b   0
                dc.b  $A
                dc.b   1
                dc.b $F0
                dc.b  $F
                dc.b   0
                dc.b   8
                dc.b $F0
                dc.b   4
                dc.b $F0
                dc.b  $F
                dc.b   0
                dc.b   8
                dc.b $C0
                dc.b $F0
                dc.b  $F
                dc.b   0
                dc.b   8
                dc.b $E0
                dc.b $F0
                dc.b  $F
                dc.b   0
                dc.b   8
                dc.b   0
                dc.b $F0
                dc.b  $F
                dc.b   0
                dc.b   8
                dc.b $20
                dc.b   0

; =============== S U B R O U T I N E =======================================


sub_A2BC:

                cmpi.b  #6,($FFFFD024).w
                bcc.w   loc_A2FE
                tst.b   $25(a0)
                beq.w   loc_A37C
                move.w  d1,d2
                add.w   d2,d2
                lea     ($FFFFD000).w,a1
                btst    #1,$22(a1)
                bne.s   loc_A2EE
                move.w  8(a1),d0
                sub.w   8(a0),d0
                add.w   d1,d0
                bmi.s   loc_A2EE
                cmp.w   d2,d0
                bcs.s   loc_A302

loc_A2EE:
                bclr    #3,$22(a1)
                bclr    #3,$22(a0)
                clr.b   $25(a0)

loc_A2FE:
                moveq   #0,d4
                rts
; ---------------------------------------------------------------------------

loc_A302:
                move.w  d4,d2
                bsr.w   sub_560E
                moveq   #0,d4
                rts
; ---------------------------------------------------------------------------

loc_A30C:
                tst.w   ($FFFFFE08).w
                bne.w   loc_A448
                tst.b   1(a0)
                bpl.w   loc_A42E
                lea     ($FFFFD000).w,a1
                move.w  8(a1),d0
                sub.w   8(a0),d0
                add.w   d1,d0
                bmi.w   loc_A42E
                move.w  d1,d3
                add.w   d3,d3
                cmp.w   d3,d0
                bhi.w   loc_A42E
                move.w  d0,d5
                btst    #0,1(a0)
                beq.s   loc_A346
                not.w   d5
                add.w   d3,d5

loc_A346:
                lsr.w   #1,d5
                moveq   #0,d3
                move.b  (a2,d5.w),d3
                sub.b   (a2),d3
                move.w  $C(a0),d5
                sub.w   d3,d5
                move.b  $16(a1),d3
                ext.w   d3
                add.w   d3,d2
                move.w  $C(a1),d3
                sub.w   d5,d3
                addq.w  #4,d3
                add.w   d2,d3
                bmi.w   loc_A42E
                subq.w  #4,d3
                move.w  d2,d4
                add.w   d4,d4
                cmp.w   d4,d3
                bcc.w   loc_A42E
                bra.w   loc_A3CC
; ---------------------------------------------------------------------------

loc_A37C:
                tst.w   ($FFFFFE08).w
                bne.w   loc_A448
                tst.b   1(a0)
                bpl.w   loc_A42E
                lea     ($FFFFD000).w,a1
                move.w  8(a1),d0
                sub.w   8(a0),d0
                add.w   d1,d0
                bmi.w   loc_A42E
                move.w  d1,d3
                add.w   d3,d3
                cmp.w   d3,d0
                bhi.w   loc_A42E
                move.b  $16(a1),d3
                ext.w   d3
                add.w   d3,d2
                move.w  $C(a1),d3
                sub.w   $C(a0),d3
                addq.w  #4,d3
                add.w   d2,d3
                bmi.w   loc_A42E
                subq.w  #4,d3
                move.w  d2,d4
                add.w   d4,d4
                cmp.w   d4,d3
                bcc.w   loc_A42E

loc_A3CC:
                move.w  d0,d5
                cmp.w   d0,d1
                bcc.s   loc_A3DA
                add.w   d1,d1
                sub.w   d1,d0
                move.w  d0,d5
                neg.w   d5

loc_A3DA:
                move.w  d3,d1
                cmp.w   d3,d2
                bcc.s   loc_A3E6
                sub.w   d4,d3
                move.w  d3,d1
                neg.w   d1

loc_A3E6:
                cmp.w   d1,d5
                bhi.w   loc_A44C
                tst.w   d0
                beq.s   loc_A40C
                bmi.s   loc_A3FA
                tst.w   $10(a1)
                bmi.s   loc_A40C
                bra.s   loc_A400
; ---------------------------------------------------------------------------

loc_A3FA:
                tst.w   $10(a1)
                bpl.s   loc_A40C

loc_A400:
                move.w  #0,$14(a1)
                move.w  #0,$10(a1)

loc_A40C:
                sub.w   d0,8(a1)
                btst    #1,$22(a1)
                bne.s   loc_A428
                bset    #5,$22(a1)
                bset    #5,$22(a0)
                moveq   #1,d4
                rts
; ---------------------------------------------------------------------------

loc_A428:
                bsr.s   sub_A43C
                moveq   #1,d4
                rts
; ---------------------------------------------------------------------------

loc_A42E:
                btst    #5,$22(a0)
                beq.s   loc_A448
                move.w  #1,$1C(a1)
; End of function sub_A2BC


; =============== S U B R O U T I N E =======================================


sub_A43C:
                bclr    #5,$22(a0)
                bclr    #5,$22(a1)

loc_A448:
                moveq   #0,d4
                rts
; End of function sub_A43C

; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR sub_A2BC

loc_A44C:
                tst.w   d3
                bmi.s   loc_A458
                cmpi.w  #$10,d3
                bcs.s   loc_A488
                bra.s   loc_A42E
; ---------------------------------------------------------------------------

loc_A458:
                tst.w   $12(a1)
                beq.s   loc_A472
                bpl.s   loc_A46E
                tst.w   d3
                bpl.s   loc_A46E
                sub.w   d3,$C(a1)
                move.w  #0,$12(a1)

loc_A46E:
                moveq   #$FFFFFFFF,d4
                rts
; ---------------------------------------------------------------------------

loc_A472:
                btst    #1,$22(a1)
                bne.s   loc_A46E
                move.l  a0,-(sp)
                movea.l a1,a0
                bsr.w   loc_FD78
                movea.l (sp)+,a0
                moveq   #$FFFFFFFF,d4
                rts
; ---------------------------------------------------------------------------

loc_A488:
                moveq   #0,d1
                move.b  $18(a0),d1
                addq.w  #4,d1
                move.w  d1,d2
                add.w   d2,d2
                add.w   8(a1),d1
                sub.w   8(a0),d1
                bmi.s   loc_A4C4
                cmp.w   d2,d1
                bcc.s   loc_A4C4
                tst.w   $12(a1)
                bmi.s   loc_A4C4
                sub.w   d3,$C(a1)
                subq.w  #1,$C(a1)
                bsr.w   sub_4FD4
                move.b  #2,$25(a0)
                bset    #3,$22(a0)
                moveq   #$FFFFFFFF,d4
                rts
; ---------------------------------------------------------------------------

loc_A4C4:
                moveq   #0,d4
                rts
; END OF FUNCTION CHUNK FOR sub_A2BC

; =============== S U B R O U T I N E =======================================
; ---------------------------------------------------------------------------
; Object 34 - Title Cards
; ---------------------------------------------------------------------------

Obj34:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  index_a4d6(pc,d0.w),d1
                jmp     index_a4d6(pc,d1.w)
; End of function Obj34

; ---------------------------------------------------------------------------
index_a4d6:     dc.w entry_A4DE-*
                dc.w entry_a556-index_a4d6
                dc.w entry_a57c-index_a4d6
                dc.w entry_a57c-index_a4d6
; ---------------------------------------------------------------------------

entry_A4DE:
                movea.l a0,a1
                moveq   #0,d0
                move.b  ($FFFFFE10).w,d0
                lea     (word_A5E4).l,a3
                lsl.w   #4,d0
                adda.w  d0,a3
                lea     (word_A5D4).l,a2
                moveq   #3,d1

loc_A4F8:
                move.b  #$34,0(a1)
                move.w  (a3),8(a1)
                move.w  (a3)+,$32(a1)
                move.w  (a3)+,$30(a1)
                move.w  (a2)+,$A(a1)
                move.b  (a2)+,$24(a1)
                move.b  (a2)+,d0
                bne.s   loc_A51A
                move.b  ($FFFFFE10).w,d0

loc_A51A:
                cmpi.b  #7,d0
                bne.s   loc_A524
                add.b   ($FFFFFE11).w,d0

loc_A524:
                move.b  d0,$1A(a1)
                move.l  #Map_obj34,4(a1)
                move.w  #$8580,2(a1)
                move.b  #$78,$18(a1)
                move.b  #0,1(a1)
                move.b  #0,$19(a1)
                move.w  #$3C,$1E(a1)
                lea     $40(a1),a1
                dbf     d1,loc_A4F8

entry_a556:
                moveq   #$10,d1
                move.w  $30(a0),d0
                cmp.w   8(a0),d0
                beq.s   loc_A56A
                bge.s   loc_A566
                neg.w   d1

loc_A566:
                add.w   d1,8(a0)

loc_A56A:
                move.w  8(a0),d0
                bmi.s   locret_A57A
                cmpi.w  #$200,d0
                bcc.s   locret_A57A
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------

locret_A57A:
                rts
; ---------------------------------------------------------------------------

entry_a57c:
                tst.w   $1E(a0)
                beq.s   loc_A58A
                subq.w  #1,$1E(a0)
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------

loc_A58A:
                moveq   #$20,d1
                move.w  $32(a0),d0
                cmp.w   8(a0),d0
                beq.s   loc_A5B0
                bge.s   loc_A59A
                neg.w   d1

loc_A59A:
                add.w   d1,8(a0)
                move.w  8(a0),d0
                bmi.s   locret_A5AE
                cmpi.w  #$200,d0
                bcc.s   locret_A5AE
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------

locret_A5AE:
                rts
; ---------------------------------------------------------------------------

loc_A5B0:
                cmpi.b  #4,$24(a0)
                bne.s   loc_A5D0
                moveq   #2,d0
                jsr     (LoadPLCs).l
                moveq   #0,d0
                move.b  ($FFFFFE10).w,d0
                addi.w  #$15,d0
                jsr     (LoadPLCs).l

loc_A5D0:
                bra.w   DeleteObject
; ---------------------------------------------------------------------------
word_A5D4:      dc.w $D0
                dc.b   2
                dc.b   0
                dc.w $E4
                dc.b   2
                dc.b   6
                dc.b 0
                dc.b $EA
                dc.b   2
                dc.b   7
                dc.w $E0
                dc.b   2
                dc.b  $A
word_A5E4:      dc.w 0, $120, $FEFC
                dc.w $13C
                dc.w $414
                dc.w $154
                dc.w $214
                dc.w $154
                dc.w 0
                dc.b   1
                dc.b $20
                dc.b $FE
                dc.b $F4
                dc.b   1
                dc.b $34 ; 4
                dc.b   4
                dc.b  $C
                dc.b   1
                dc.b $4C ; L
                dc.b   2
                dc.b  $C
                dc.b   1
                dc.b $4C ; L
                dc.b   0
                dc.b   0
                dc.b   1
                dc.b $20
                dc.b $FE
                dc.b $E0
                dc.b   1
                dc.b $20
                dc.b   3
                dc.b $F8
                dc.b   1
                dc.b $38 ; 8
                dc.b   1
                dc.b $F8
                dc.b   1
                dc.b $38 ; 8
                dc.b   0
                dc.b   0
                dc.b   1
                dc.b $20
                dc.b $FE
                dc.b $FC
                dc.b   1
                dc.b $3C ; <
                dc.b   4
                dc.b $14
                dc.b   1
                dc.b $54 ; T
                dc.b   2
                dc.b $14
                dc.b   1
                dc.b $54 ; T
                dc.b   0
                dc.b   0
                dc.b   1
                dc.b $20
                dc.b $FE
                dc.b $F4
                dc.b   1
                dc.b $34 ; 4
                dc.b   4
                dc.b  $C
                dc.b   1
                dc.b $4C ; L
                dc.b   2
                dc.b  $C
                dc.b   1
                dc.b $4C ; L
                dc.b   0
                dc.b   0
                dc.b   1
                dc.b $20
                dc.b $FF
                dc.b   0
                dc.b   1
                dc.b $40 ; @
                dc.b   4
                dc.b $18
                dc.b   1
                dc.b $58 ; X
                dc.b   2
                dc.b $18
                dc.b   1
                dc.b $58 ; X
; ---------------------------------------------------------------------------

Obj39:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  index_a652(pc,d0.w),d1
                jmp     index_a652(pc,d1.w)
; ---------------------------------------------------------------------------
index_a652:     dc.w entry_A658-*
                dc.w entry_a696-index_a652
                dc.w entry_a6b8-index_a652
; ---------------------------------------------------------------------------

entry_A658:
                tst.l   ($FFFFF680).w
                beq.s   loc_A660
                rts
; ---------------------------------------------------------------------------

loc_A660:
                addq.b  #2,$24(a0)
                move.w  #$50,8(a0)
                tst.b   $1A(a0)
                beq.s   loc_A676
                move.w  #$1F0,8(a0)

loc_A676:
                move.w  #$F0,$A(a0)
                move.l  #unk_AA20,4(a0)
                move.w  #$8580,2(a0)
                move.b  #0,1(a0)
                move.b  #0,$19(a0)

entry_a696:
                moveq   #$10,d1
                cmpi.w  #$120,8(a0)
                beq.s   loc_A6AC
                bcs.s   loc_A6A4
                neg.w   d1

loc_A6A4:
                add.w   d1,8(a0)
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------

loc_A6AC:
                move.w  #$258,$1E(a0)
                addq.b  #2,$24(a0)
                rts
; ---------------------------------------------------------------------------

entry_a6b8:
                move.b  ($FFFFF603).w,d0
                andi.b  #$70,d0
                bne.s   loc_A6D6
                tst.b   $1A(a0)
                bne.s   loc_A6DC
                tst.w   $1E(a0)
                beq.s   loc_A6D6
                subq.w  #1,$1E(a0)
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------

loc_A6D6:
                move.b  #0,($FFFFF600).w

loc_A6DC:
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------

Obj3A:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  Obj3A_Index(pc,d0.w),d1
                jmp     Obj3A_Index(pc,d1.w)
; ---------------------------------------------------------------------------
Obj3A_Index:    dc.w Obj3A_ChkPLC-Obj3A_Index
                dc.w Obj3A_ChkPos-Obj3A_Index
                dc.w Obj3A_Wait-Obj3A_Index
                dc.w Obj3A_TimeBonus-Obj3A_Index
                dc.w Obj3A_Wait-Obj3A_Index
                dc.w Obj3A_NextLevel-Obj3A_Index
; ---------------------------------------------------------------------------

Obj3A_ChkPLC:
                tst.l   ($FFFFF680).w
                beq.s   loc_A702
                rts
; ---------------------------------------------------------------------------

loc_A702:
                movea.l a0,a1
                lea     (Obj3A_Config).l,a2
                moveq   #6,d1

loc_A70C:
                move.b  #$3A,0(a1) 
                move.w  (a2)+,8(a1)
                move.w  (a2)+,$30(a1)
                move.w  (a2)+,$A(a1)
                move.b  (a2)+,$24(a1)
                move.b  (a2)+,d0
                cmpi.b  #6,d0
                bne.s   loc_A72E
                add.b   ($FFFFFE11).w,d0

loc_A72E:
                move.b  d0,$1A(a1)
                move.l  #unk_AA3A,4(a1)
                move.w  #$8580,2(a1)
                move.b  #0,1(a1)
                lea     $40(a1),a1
                dbf     d1,loc_A70C

Obj3A_ChkPos:
                moveq   #$10,d1
                move.w  $30(a0),d0
                cmp.w   8(a0),d0
                beq.s   loc_A774
                bge.s   loc_A75E
                neg.w   d1

loc_A75E:
                add.w   d1,8(a0)

loc_A762:
                move.w  8(a0),d0
                bmi.s   locret_A772
                cmpi.w  #$200,d0
                bcc.s   locret_A772
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------

locret_A772:
                rts
; ---------------------------------------------------------------------------

loc_A774:
                cmpi.b  #4,$1A(a0)
                bne.s   loc_A762
                addq.b  #2,$24(a0)
                move.w  #$B4,$1E(a0)

Obj3A_Wait:
                subq.w  #1,$1E(a0)
                bne.s   loc_A790
                addq.b  #2,$24(a0)

loc_A790:
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------

Obj3A_TimeBonus:
                bsr.w   DisplaySprite
                move.b  #1,($FFFFFE58).w
                moveq   #0,d0
                tst.w   ($FFFFFE54).w
                beq.s   Obj3A_RingBonus
                addi.w  #10,d0
                subi.w  #10,($FFFFFE54).w

Obj3A_RingBonus:
                tst.w   ($FFFFFE56).w
                beq.s   Obj3A_ChkBonus
                addi.w  #10,d0
                subi.w  #10,($FFFFFE56).w

Obj3A_ChkBonus:
                tst.w   d0
                bne.s   Obj3A_AddBonus
                move.w  #$C5,d0
                jsr     (PlaySound_Special).l
                addq.b  #2,$24(a0)

Obj3A_SetDelay:
                move.w  #$B4,$1E(a0)

locret_A7D8:
                rts
; ---------------------------------------------------------------------------

Obj3A_AddBonus:
                bsr.w   sub_1164E
                move.b  ($FFFFFE0F).w,d0
                andi.b  #3,d0
                bne.s   locret_A7D8
                move.w  #$CD,d0
                jmp     (PlaySound_Special).l
; ---------------------------------------------------------------------------

Obj3A_NextLevel:
                move.b  ($FFFFFE10).w,d0
                andi.w  #7,d0
                lsl.w   #3,d0
                move.b  ($FFFFFE11).w,d1
                andi.w  #3,d1
                add.w   d1,d1
                add.w   d1,d0
                move.w  LevelOrder(pc,d0.w),d0
                move.w  d0,($FFFFFE10).w
                tst.w   d0
                bne.s   loc_A81C
                move.b  #0,($FFFFF600).w
                bra.s   Obj3A_Display2
; ---------------------------------------------------------------------------

loc_A81C:
                move.w  #1,($FFFFFE02).w

Obj3A_Display2:
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------
LevelOrder:     dc.w 1
                dc.w 2
                dc.w $200
                dc.w 0
                dc.w $101
                dc.w $102
                dc.w $200
                dc.w 0
                dc.w $201
                dc.w $202
                dc.w $400
                dc.w 0
                dc.w 0
                dc.w $302
                dc.w $200
                dc.w 0
                dc.w $300
                dc.w $402
                dc.w $500
                dc.w 0
                dc.w $501
                dc.w $502
                dc.w 0
                dc.w 0
Obj3A_Config:   dc.w 4, $124, $BC
                dc.b 2, 0
                dc.w $FEE0, $120, $D0
                dc.b 2, 1
                dc.w $40C, $14C, $D6
                dc.b 2, 6
                dc.w $520, $120, $EC
                dc.b 2, 2
                dc.w $540, $120, $FC
                dc.b 2, 3
                dc.w $560, $120, $10C
                dc.b 2, 4
                dc.w $20C, $14C, $CC
                dc.b 2, 5
Map_obj34:      dc.b   0
                dc.b $16
                dc.b   0
                dc.b $44 ; D
                dc.b   0
                dc.b $72 ; r
                dc.b   0
                dc.b $92
                dc.b   0
                dc.b $C0
                dc.b   0
                dc.b $EE
                dc.b   1
                dc.b $18
                dc.b   1
                dc.b $2E ; .
                dc.b   1
                dc.b $39 ; 9
                dc.b   1
                dc.b $44 ; D
                dc.b   1
                dc.b $4F ; O
                dc.b   9
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $18
                dc.b $B4
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $3A ; :
                dc.b $C4
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $10
                dc.b $D4
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $10
                dc.b $E4
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $2E ; .
                dc.b $F4
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $1C
                dc.b $14
                dc.b $F8
                dc.b   1
                dc.b   0
                dc.b $20
                dc.b $24 ; $
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $26 ; &
                dc.b $2C ; ,
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $26 ; &
                dc.b $3C ; <
                dc.b   9
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $26 ; &
                dc.b $BC
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b   0
                dc.b $CC
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b   4
                dc.b $DC
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $4A ; J
                dc.b $EC
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $3A ; :
                dc.b $FC
                dc.b $F8
                dc.b   1
                dc.b   0
                dc.b $20
                dc.b  $C
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $2E ; .
                dc.b $14
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $42 ; B
                dc.b $24 ; $
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $1C
                dc.b $34 ; 4
                dc.b   6
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $2A 
                dc.b $CF
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b   0
                dc.b $E0
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $3A ; :
                dc.b $F0
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b   4
                dc.b   0
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $26 ; &
                dc.b $10
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $10
                dc.b $20
                dc.b   0
                dc.b   9
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $3E ; >
                dc.b $B4
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $42 ; B
                dc.b $C4
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b   0
                dc.b $D4
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $3A ; :
                dc.b $E4
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $26 ; &
                dc.b   4
                dc.b $F8
                dc.b   1
                dc.b   0
                dc.b $20
                dc.b $14
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $18
                dc.b $1C
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $1C
                dc.b $2C ; ,
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $42 ; B
                dc.b $3C ; <
                dc.b   9
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $3E ; >
                dc.b $BC
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $36 ; 6
                dc.b $CC
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b   0
                dc.b $DC
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $3A ; :
                dc.b $EC
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $22 ; "
                dc.b $FC
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $26 ; &
                dc.b  $C
                dc.b $F8
                dc.b   1
                dc.b   0
                dc.b $20
                dc.b $1C
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $2E ; .
                dc.b $24 ; $
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $18
                dc.b $34 ; 4
                dc.b   8
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b   8
                dc.b $B0
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $26 ; &
                dc.b $C0
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $32 ; 2
                dc.b $D0
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b   8
                dc.b $E0
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $22 ; "
                dc.b $F0
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $32 ; 2
                dc.b $20
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $3A ; :
                dc.b $30 ; 0
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $22 ; "
                dc.b $40 ; @
                dc.b   0
                dc.b   4
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $4E ; N
                dc.b $E0
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $32 ; 2
                dc.b $F0
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $2E ; .
                dc.b   0
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $10
                dc.b $10
                dc.b   0
                dc.b   2
                dc.b   4
                dc.b  $C
                dc.b   0
                dc.b $53 ; S
                dc.b $EC
                dc.b $F4
                dc.b   2
                dc.b   0
                dc.b $57 ; W
                dc.b  $C
                dc.b   2
                dc.b   4
                dc.b  $C
                dc.b   0
                dc.b $53 ; S
                dc.b $EC
                dc.b $F4
                dc.b   6
                dc.b   0
                dc.b $5A ; Z
                dc.b   8
                dc.b   2
                dc.b   4
                dc.b  $C
                dc.b   0
                dc.b $53 ; S
                dc.b $EC
                dc.b $F4
                dc.b   6
                dc.b   0
                dc.b $60 
                dc.b   8
                dc.b  $D
                dc.b $E4
                dc.b  $C
                dc.b   0
                dc.b $70 ; p
                dc.b $F4
                dc.b $E4
                dc.b   2
                dc.b   0
                dc.b $74 ; t
                dc.b $14
                dc.b $EC
                dc.b   4
                dc.b   0
                dc.b $77 ; w
                dc.b $EC
                dc.b $F4
                dc.b   5
                dc.b   0
                dc.b $79 ; y
                dc.b $E4
                dc.b $14
                dc.b  $C
                dc.b $18
                dc.b $70 ; p
                dc.b $EC
                dc.b   4
                dc.b   2
                dc.b $18
                dc.b $74 ; t
                dc.b $E4
                dc.b  $C
                dc.b   4
                dc.b $18
                dc.b $77 ; w
                dc.b   4
                dc.b $FC
                dc.b   5
                dc.b $18
                dc.b $79 ; y
                dc.b  $C
                dc.b $EC
                dc.b   8
                dc.b   0
                dc.b $7D ; }
                dc.b $FC
                dc.b $F4
                dc.b  $C
                dc.b   0
                dc.b $7C ; |
                dc.b $F4
                dc.b $FC
                dc.b   8
                dc.b   0
                dc.b $7C ; |
                dc.b $F4
                dc.b   4
                dc.b  $C
                dc.b   0
                dc.b $7C ; |
                dc.b $EC
                dc.b  $C
                dc.b   8
                dc.b   0
                dc.b $7C ; |
                dc.b $EC
                dc.b   0
unk_AA20:       dc.b   0
                dc.b   4
                dc.b   0
                dc.b  $F
                dc.b   2
                dc.b $F8
                dc.b  $D
                dc.b   0
                dc.b   0
                dc.b $B8
                dc.b $F8
                dc.b  $D
                dc.b   0
                dc.b   8
                dc.b $D8
                dc.b   2
                dc.b $F8
                dc.b  $D
                dc.b   0
                dc.b $14
                dc.b   8
                dc.b $F8
                dc.b  $D
                dc.b   0
                dc.b  $C
                dc.b $28 ; (
unk_AA3A:       dc.b   0
                dc.b $12
                dc.b   0
                dc.b $3B ; ;
                dc.b   0
                dc.b $5A ; Z
                dc.b   0
                dc.b $79 ; y
                dc.b   0
                dc.b $9D
                dc.b $FF
                dc.b $A3
                dc.b $FF
                dc.b $82
                dc.b $FF
                dc.b $8D
                dc.b $FF
                dc.b $98
                dc.b   8
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $3E ; >
                dc.b $B8
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $32 ; 2
                dc.b $C8
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $2E ; .
                dc.b $D8
                dc.b $F8
                dc.b   1
                dc.b   0
                dc.b $20
                dc.b $E8
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b   8
                dc.b $F0
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $1C
                dc.b $10
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b   0
                dc.b $20
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $3E ; >
                dc.b $30 ; 0
                dc.b   6
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $36 ; 6
                dc.b $D0
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b   0
                dc.b $E0
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $3E ; >
                dc.b $F0
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $3E ; >
                dc.b   0
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $10
                dc.b $10
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b  $C
                dc.b $20
                dc.b   6
                dc.b $F8
                dc.b  $D
                dc.b   1
                dc.b $4A ; J
                dc.b $B0
                dc.b $F8
                dc.b   1
                dc.b   1
                dc.b $62 ; b
                dc.b $D0
                dc.b $F8
                dc.b   9
                dc.b   1
                dc.b $64 ; d
                dc.b $18
                dc.b $F8
                dc.b  $D
                dc.b   1
                dc.b $6A ; j
                dc.b $30 ; 0
                dc.b $F7
                dc.b   4
                dc.b   0
                dc.b $6E ; n
                dc.b $CD
                dc.b $FF
                dc.b   4
                dc.b $18
                dc.b $6E ; n
                dc.b $CD
                dc.b   7
                dc.b $F8
                dc.b  $D
                dc.b   1
                dc.b $5A ; Z
                dc.b $B0
                dc.b $F8
                dc.b  $D
                dc.b   0
                dc.b $66 
                dc.b $D9
                dc.b $F8
                dc.b   1
                dc.b   1
                dc.b $4A ; J
                dc.b $F9
                dc.b $F7
                dc.b   4
                dc.b   0
                dc.b $6E ; n
                dc.b $F6
                dc.b $FF
                dc.b   4
                dc.b $18
                dc.b $6E ; n
                dc.b $F6
                dc.b $F8
                dc.b  $D
                dc.b $FF
                dc.b $F0
                dc.b $28 ; (
                dc.b $F8
                dc.b   1
                dc.b   1
                dc.b $70 ; p
                dc.b $48 ; H
                dc.b   7
                dc.b $F8
                dc.b  $D
                dc.b   1
                dc.b $52 ; R
                dc.b $B0
                dc.b $F8
                dc.b  $D
                dc.b   0
                dc.b $66 
                dc.b $D9
                dc.b $F8
                dc.b   1
                dc.b   1
                dc.b $4A ; J
                dc.b $F9
                dc.b $F7
                dc.b   4
                dc.b   0
                dc.b $6E ; n
                dc.b $F6
                dc.b $FF
                dc.b   4
                dc.b $18
                dc.b $6E ; n
                dc.b $F6
                dc.b $F8
                dc.b  $D
                dc.b $FF
                dc.b $F8
                dc.b $28 ; (
                dc.b $F8
                dc.b   1
                dc.b   1
                dc.b $70 ; p
                dc.b $48 ; H
                dc.b   0
; ---------------------------------------------------------------------------

Obj36:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  index_ab0a(pc,d0.w),d1
                jmp     index_ab0a(pc,d1.w)
; ---------------------------------------------------------------------------
index_ab0a:     dc.w entry_ab1a-index_ab0a
                dc.w entry_ab64-index_ab0a
byte_AB0E:      dc.b 0, $14
                dc.b 1, $10
                dc.b 2, 4
                dc.b 3, $1C
                dc.b 4, $40
                dc.b 5, $10
; ---------------------------------------------------------------------------

entry_ab1a:
                addq.b  #2,$24(a0)
                move.l  #unk_ACA4,4(a0)
                move.w  #$51B,2(a0)
                ori.b   #4,1(a0)
                move.b  #4,$19(a0)
                move.b  $28(a0),d0
                andi.b  #$F,$28(a0)
                andi.w  #$F0,d0
                lea     (byte_AB0E).l,a1
                lsr.w   #3,d0
                adda.w  d0,a1
                move.b  (a1)+,$1A(a0)
                move.b  (a1)+,$18(a0)
                move.w  8(a0),$30(a0)
                move.w  $C(a0),$32(a0)

entry_ab64:
                bsr.w   sub_AC02
                move.w  #4,d2
                cmpi.b  #5,$1A(a0)
                beq.s   loc_AB80
                cmpi.b  #1,$1A(a0)
                bne.s   loc_AB9E
                move.w  #$14,d2

loc_AB80:
                move.w  #$1B,d1
                move.w  d2,d3
                subq.w  #2,d3
                move.w  8(a0),d4
                bsr.w   sub_A2BC
                tst.b   $25(a0)
                bne.s   loc_ABDE
                cmpi.w  #1,d4
                beq.s   loc_ABBE
                bra.s   loc_ABDE
; ---------------------------------------------------------------------------

loc_AB9E:
                moveq   #0,d1
                move.b  $18(a0),d1
                addi.w  #$B,d1
                move.w  #$10,d2
                bsr.w   sub_6936
                tst.w   d4
                bpl.s   loc_ABDE
                tst.w   $12(a1)
                beq.s   loc_ABDE
                tst.w   d3
                bmi.s   loc_ABDE

loc_ABBE:
                move.l  a0,-(sp)
                movea.l a0,a2
                lea     ($FFFFD000).w,a0
                move.l  $C(a0),d3
                move.w  $12(a0),d0
                ext.l   d0
                asl.l   #8,d0
                sub.l   d0,d3
                move.l  d3,$C(a0)
                bsr.w   loc_FCF4
                movea.l (sp)+,a0

loc_ABDE:
                bsr.w   DisplaySprite
                move.w  $30(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.w   DeleteObject
                rts

; =============== S U B R O U T I N E =======================================


sub_AC02:
                moveq   #0,d0
                move.b  $28(a0),d0
                add.w   d0,d0
                move.w  index_ac12(pc,d0.w),d1
                jmp     index_ac12(pc,d1.w)
; End of function sub_AC02

; ---------------------------------------------------------------------------
index_ac12:     dc.w entry_AC18-*
                dc.w entry_AC1A-index_ac12
                dc.w entry_ac2e-index_ac12
; ---------------------------------------------------------------------------

entry_AC18:
                rts
; ---------------------------------------------------------------------------

entry_AC1A:
                bsr.w   sub_AC42
                moveq   #0,d0
                move.b  $34(a0),d0
                add.w   $32(a0),d0
                move.w  d0,$C(a0)
                rts
; ---------------------------------------------------------------------------

entry_ac2e:
                bsr.w   sub_AC42
                moveq   #0,d0
                move.b  $34(a0),d0
                add.w   $30(a0),d0
                move.w  d0,8(a0)
                rts

; =============== S U B R O U T I N E =======================================


sub_AC42:
                tst.w   $38(a0)
                beq.s   loc_AC60
                subq.w  #1,$38(a0)
                bne.s   locret_ACA2
                tst.b   1(a0)
                bpl.s   locret_ACA2
                move.w  #$B6,d0
                jsr     (PlaySound_Special).l
                bra.s   locret_ACA2
; ---------------------------------------------------------------------------

loc_AC60:
                tst.w   $36(a0)
                beq.s   loc_AC82
                subi.w  #$800,$34(a0)
                bcc.s   locret_ACA2
                move.w  #0,$34(a0)
                move.w  #0,$36(a0)
                move.w  #$3C,$38(a0) 
                bra.s   locret_ACA2
; ---------------------------------------------------------------------------

loc_AC82:
                addi.w  #$800,$34(a0)
                cmpi.w  #$2000,$34(a0)
                bcs.s   locret_ACA2
                move.w  #$2000,$34(a0)
                move.w  #1,$36(a0)
                move.w  #$3C,$38(a0) 

locret_ACA2:
                rts
; End of function sub_AC42

; ---------------------------------------------------------------------------
unk_ACA4:       include "Map/Spikes.asm"
; ---------------------------------------------------------------------------

Obj3B:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  index_ad1a(pc,d0.w),d1
                jmp     index_ad1a(pc,d1.w)
; ---------------------------------------------------------------------------
index_ad1a:     dc.w entry_AD1E-*
                dc.w entry_ad42-index_ad1a
; ---------------------------------------------------------------------------

entry_AD1E:
                addq.b  #2,$24(a0)
                move.l  #unk_ADCA,4(a0)
                move.w  #$63D0,2(a0)
                move.b  #4,1(a0)
                move.b  #$13,$18(a0)
                move.b  #4,$19(a0)

entry_ad42:
                move.w  #$1B,d1
                move.w  #$10,d2
                move.w  #$10,d3
                move.w  8(a0),d4
                bsr.w   sub_A2BC
                bsr.w   DisplaySprite
                move.w  8(a0),d0
                andi.w  #65408,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.w   DeleteObject
                rts

; =============== S U B R O U T I N E =======================================


Obj49:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  index_ad88(pc,d0.w),d1
                jmp     index_ad88(pc,d1.w)
; End of function Obj49

; ---------------------------------------------------------------------------
index_ad88:     dc.w entry_AD8C-*
                dc.w entry_ad96-index_ad88
; ---------------------------------------------------------------------------

entry_AD8C:
                addq.b  #2,$24(a0)
                move.b  #4,1(a0)

entry_ad96:
                move.b  ($FFFFFE0F).w,d0
                andi.b  #$3F,d0 
                bne.s   loc_ADAA
                move.w  #$D0,d0
                jsr     (PlaySound_Special).l

loc_ADAA:
                move.w  8(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.w   DeleteObject
                rts
; ---------------------------------------------------------------------------
unk_ADCA:       include "Map/PurpleRock.asm"
; ---------------------------------------------------------------------------

Obj3C:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  index_adea(pc,d0.w),d1
                jsr     index_adea(pc,d1.w)
                bra.w   MarkObjectGone
; ---------------------------------------------------------------------------
index_adea:     dc.w entry_ADF0-*
                dc.w entry_ae1a-index_adea
                dc.w entry_ae92-index_adea
; ---------------------------------------------------------------------------

entry_ADF0:
                addq.b  #2,$24(a0)
                move.l  #unk_AF72,4(a0)
                move.w  #$450F,2(a0)
                move.b  #4,1(a0)
                move.b  #$10,$18(a0)
                move.b  #4,$19(a0)
                move.b  $28(a0),$1A(a0)

entry_ae1a:
                move.w  ($FFFFD010).w,$30(a0)
                move.w  #$1B,d1
                move.w  #$20,d2 
                move.w  #$20,d3 
                move.w  8(a0),d4
                bsr.w   sub_A2BC
                btst    #5,$22(a0)
                bne.s   loc_AE3E

locret_AE3C:
                rts
; ---------------------------------------------------------------------------

loc_AE3E:
                cmpi.b  #2,$1C(a1)
                bne.s   locret_AE3C
                move.w  $30(a0),d0
                bpl.s   loc_AE4E
                neg.w   d0

loc_AE4E:
                cmpi.w  #$480,d0
                bcs.s   locret_AE3C
                move.w  $30(a0),$10(a1)
                addq.w  #4,8(a1)
                lea     (unk_AF32).l,a4
                move.w  8(a0),d0
                cmp.w   8(a1),d0
                bcs.s   loc_AE78
                subq.w  #8,8(a1)
                lea     (unk_AF52).l,a4

loc_AE78:
                move.w  $10(a1),$14(a1)
                bclr    #5,$22(a0)
                bclr    #5,$22(a1)
                moveq   #7,d1
                move.w  #$70,d2 
                bsr.s   sub_AEAA

entry_ae92:
                bsr.w   ObjectMove
                addi.w  #$70,$12(a0) 
                bsr.w   DisplaySprite
                tst.b   1(a0)
                bpl.w   DeleteObject
                rts

; =============== S U B R O U T I N E =======================================


sub_AEAA:
                moveq   #0,d0
                move.b  $1A(a0),d0
                add.w   d0,d0
                movea.l 4(a0),a3
                adda.w  (a3,d0.w),a3
                addq.w  #1,a3
                bset    #5,1(a0)
                move.b  0(a0),d4
                move.b  1(a0),d5
                movea.l a0,a1
                bra.s   loc_AED6
; ---------------------------------------------------------------------------

loc_AECE:
                bsr.w   FindFreeObjectSlot
                bne.s   loc_AF28
                addq.w  #5,a3

loc_AED6:
                move.b  #4,$24(a1)
                move.b  d4,0(a1)
                move.l  a3,4(a1)
                move.b  d5,1(a1)
                move.w  8(a0),8(a1)
                move.w  $C(a0),$C(a1)
                move.w  2(a0),2(a1)
                move.b  $19(a0),$19(a1)
                move.b  $18(a0),$18(a1)
                move.w  (a4)+,$10(a1)
                move.w  (a4)+,$12(a1)
                cmpa.l  a0,a1
                bcc.s   loc_AF24
                move.l  a0,-(sp)
                movea.l a1,a0
                bsr.w   ObjectMove
                add.w   d2,$12(a0)
                movea.l (sp)+,a0
                bsr.w   DisplaySprite2

loc_AF24:
                dbf     d1,loc_AECE

loc_AF28:
                move.w  #$CB,d0
                jmp     (PlaySound_Special).l
; End of function sub_AEAA

; ---------------------------------------------------------------------------
unk_AF32:       dc.b   4
                dc.b   0
                dc.b $FB
                dc.b   0
                dc.b   6
                dc.b   0
                dc.b $FF
                dc.b   0
                dc.b   6
                dc.b   0
                dc.b   1
                dc.b   0
                dc.b   4
                dc.b   0
                dc.b   5
                dc.b   0
                dc.b   6
                dc.b   0
                dc.b $FA
                dc.b   0
                dc.b   8
                dc.b   0
                dc.b $FE
                dc.b   0
                dc.b   8
                dc.b   0
                dc.b   2
                dc.b   0
                dc.b   6
                dc.b   0
                dc.b   6
                dc.b   0
unk_AF52:       dc.b $FA
                dc.b   0
                dc.b $FA
                dc.b   0
                dc.b $F8
                dc.b   0
                dc.b $FE
                dc.b   0
                dc.b $F8
                dc.b   0
                dc.b   2
                dc.b   0
                dc.b $FA
                dc.b   0
                dc.b   6
                dc.b   0
                dc.b $FC
                dc.b   0
                dc.b $FB
                dc.b   0
                dc.b $FA
                dc.b   0
                dc.b $FF
                dc.b   0
                dc.b $FA
                dc.b   0
                dc.b   1
                dc.b   0
                dc.b $FC
                dc.b   0
                dc.b   5
                dc.b   0
unk_AF72:       dc.b   0
                dc.b   6
                dc.b   0
                dc.b $2F ; /
                dc.b   0
                dc.b $58 ; X
                dc.b   8
                dc.b $E0
                dc.b   5
                dc.b   0
                dc.b   0
                dc.b $F0
                dc.b $F0
                dc.b   5
                dc.b   0
                dc.b   0
                dc.b $F0
                dc.b   0
                dc.b   5
                dc.b   0
                dc.b   0
                dc.b $F0
                dc.b $10
                dc.b   5
                dc.b   0
                dc.b   0
                dc.b $F0
                dc.b $E0
                dc.b   5
                dc.b   0
                dc.b   4
                dc.b   0
                dc.b $F0
                dc.b   5
                dc.b   0
                dc.b   4
                dc.b   0
                dc.b   0
                dc.b   5
                dc.b   0
                dc.b   4
                dc.b   0
                dc.b $10
                dc.b   5
                dc.b   0
                dc.b   4
                dc.b   0
                dc.b   8
                dc.b $E0
                dc.b   5
                dc.b   0
                dc.b   4
                dc.b $F0
                dc.b $F0
                dc.b   5
                dc.b   0
                dc.b   4
                dc.b $F0
                dc.b   0
                dc.b   5
                dc.b   0
                dc.b   4
                dc.b $F0
                dc.b $10
                dc.b   5
                dc.b   0
                dc.b   4
                dc.b $F0
                dc.b $E0
                dc.b   5
                dc.b   0
                dc.b   4
                dc.b   0
                dc.b $F0
                dc.b   5
                dc.b   0
                dc.b   4
                dc.b   0
                dc.b   0
                dc.b   5
                dc.b   0
                dc.b   4
                dc.b   0
                dc.b $10
                dc.b   5
                dc.b   0
                dc.b   4
                dc.b   0
                dc.b   8
                dc.b $E0
                dc.b   5
                dc.b   0
                dc.b   4
                dc.b $F0
                dc.b $F0
                dc.b   5
                dc.b   0
                dc.b   4
                dc.b $F0
                dc.b   0
                dc.b   5
                dc.b   0
                dc.b   4
                dc.b $F0
                dc.b $10
                dc.b   5
                dc.b   0
                dc.b   4
                dc.b $F0
                dc.b $E0
                dc.b   5
                dc.b   0
                dc.b   8
                dc.b   0
                dc.b $F0
                dc.b   5
                dc.b   0
                dc.b   8
                dc.b   0
                dc.b   0
                dc.b   5
                dc.b   0
                dc.b   8
                dc.b   0
                dc.b $10
                dc.b   5
                dc.b   0
                dc.b   8
                dc.b   0
                dc.b   0
; ---------------------------------------------------------------------------

Obj3D:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  index_b002(pc,d0.w),d1
                jmp     index_b002(pc,d1.w)
; ---------------------------------------------------------------------------
index_b002:     dc.w entry_b010-index_b002
                dc.w entry_b07c-index_b002
                dc.w entry_b2ae-index_b002
                dc.w entry_b2d6-index_b002
word_B00A:      dc.w $200
                dc.w $401
                dc.w $607
; ---------------------------------------------------------------------------

entry_b010:
                lea     (word_B00A).l,a2
                movea.l a0,a1
                moveq   #2,d1
                bra.s   loc_B022
; ---------------------------------------------------------------------------

loc_B01C:
                bsr.w   FindFreeObjectSlot2
                bne.s   loc_B064

loc_B022:
                move.b  (a2)+,$24(a1)
                move.b  #$3D,0(a1)
                move.w  8(a0),8(a1)
                move.w  $C(a0),$C(a1)
                move.l  #unk_B536,4(a1)
                move.w  #$400,2(a1)
                move.b  #4,1(a1)
                move.b  #$20,$18(a1) 
                move.b  #3,$19(a1)
                move.b  (a2)+,$1C(a1)
                move.l  a0,$34(a1)
                dbf     d1,loc_B01C

loc_B064:
                move.w  8(a0),$30(a0)
                move.w  $C(a0),$38(a0)
                move.b  #$F,$20(a0)
                move.b  #8,$21(a0)

entry_b07c:
                moveq   #0,d0
                move.b  $25(a0),d0
                move.w  index_b0aa(pc,d0.w),d1
                jsr     index_b0aa(pc,d1.w)
                lea     (unk_B4F2).l,a1
                bsr.w   AnimateObject
                move.b  $22(a0),d0
                andi.b  #3,d0
                andi.b  #$FC,1(a0)
                or.b    d0,1(a0)
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------
index_b0aa:     dc.w entry_b0b6-index_b0aa
                dc.w entry_b1ae-index_b0aa
                dc.w entry_b1fc-index_b0aa
                dc.w entry_b236-index_b0aa
                dc.w entry_b25c-index_b0aa
                dc.w entry_b290-index_b0aa
; ---------------------------------------------------------------------------

entry_b0b6:
                move.w  #$100,$12(a0)
                bsr.w   sub_B188
                cmpi.w  #$338,$38(a0)
                bne.s   loc_B0D2
                move.w  #0,$12(a0)
                addq.b  #2,$25(a0)

loc_B0D2:
                move.b  $3F(a0),d0
                jsr     (CalcSine).l
                asr.w   #6,d0
                add.w   $38(a0),d0
                move.w  d0,$C(a0)
                move.w  $30(a0),8(a0)
                addq.b  #2,$3F(a0)
                cmpi.b  #8,$25(a0)
                bcc.s   locret_B136
                tst.b   $22(a0)
                bmi.s   loc_B138
                tst.b   $20(a0)
                bne.s   locret_B136
                tst.b   $3E(a0)
                bne.s   loc_B11A
                move.b  #$20,$3E(a0) 
                move.w  #$AC,d0
                jsr     (PlaySound_Special).l

loc_B11A:
                lea     ($FFFFFB22).w,a1
                moveq   #0,d0
                tst.w   (a1)
                bne.s   loc_B128
                move.w  #$EEE,d0

loc_B128:
                move.w  d0,(a1)
                subq.b  #1,$3E(a0)
                bne.s   locret_B136
                move.b  #$F,$20(a0)

locret_B136:
                rts
; ---------------------------------------------------------------------------

loc_B138:
                move.b  #8,$25(a0)
                move.w  #$B3,$3C(a0)
                rts

; =============== S U B R O U T I N E =======================================


sub_B146:
                move.b  ($FFFFFE0F).w,d0
                andi.b  #7,d0
                bne.s   locret_B186
                bsr.w   FindFreeObjectSlot
                bne.s   locret_B186
                move.b  #$3F,0(a1) 
                move.w  8(a0),8(a1)
                move.w  $C(a0),$C(a1)
                jsr     (RandomNumber).l
                move.w  d0,d1
                moveq   #0,d1
                move.b  d0,d1
                lsr.b   #2,d1
                subi.w  #$20,d1 
                add.w   d1,8(a1)
                lsr.w   #8,d0
                lsr.b   #3,d0
                add.w   d0,$C(a1)

locret_B186:
                rts
; End of function sub_B146


; =============== S U B R O U T I N E =======================================


sub_B188:
                move.l  $30(a0),d2
                move.l  $38(a0),d3
                move.w  $10(a0),d0
                ext.l   d0
                asl.l   #8,d0
                add.l   d0,d2
                move.w  $12(a0),d0
                ext.l   d0
                asl.l   #8,d0
                add.l   d0,d3
                move.l  d2,$30(a0)
                move.l  d3,$38(a0)
                rts
; End of function sub_B188

; ---------------------------------------------------------------------------

entry_b1ae:
                move.w  #$FF00,$10(a0)
                move.w  #$FFC0,$12(a0)
                bsr.w   sub_B188
                cmpi.w  #$2A00,$30(a0)
                bne.s   loc_B1F8
                move.w  #0,$10(a0)
                move.w  #0,$12(a0)
                addq.b  #2,$25(a0)
                bsr.w   FindFreeObjectSlot2
                bne.s   loc_B1F2
                move.b  #$48,0(a1) 
                move.w  $30(a0),8(a1)
                move.w  $38(a0),$C(a1)
                move.l  a0,$34(a1)

loc_B1F2:
                move.w  #$77,$3C(a0)

loc_B1F8:
                bra.w   loc_B0D2
; ---------------------------------------------------------------------------

entry_b1fc:
                subq.w  #1,$3C(a0)
                bpl.s   loc_B226
                addq.b  #2,$25(a0)
                move.w  #$3F,$3C(a0) 
                move.w  #$100,$10(a0)
                cmpi.w  #$2A00,$30(a0)
                bne.s   loc_B226
                move.w  #$7F,$3C(a0)
                move.w  #$40,$10(a0) 

loc_B226:
                btst    #0,$22(a0)
                bne.s   loc_B232
                neg.w   $10(a0)

loc_B232:
                bra.w   loc_B0D2
; ---------------------------------------------------------------------------

entry_b236:
                subq.w  #1,$3C(a0)
                bmi.s   loc_B242
                bsr.w   sub_B188
                bra.s   loc_B258
; ---------------------------------------------------------------------------

loc_B242:
                bchg    #0,$22(a0)
                move.w  #$3F,$3C(a0) 
                subq.b  #2,$25(a0)
                move.w  #0,$10(a0)

loc_B258:
                bra.w   loc_B0D2
; ---------------------------------------------------------------------------

entry_b25c:
                subq.w  #1,$3C(a0)
                bmi.s   loc_B266
                bra.w   sub_B146
; ---------------------------------------------------------------------------

loc_B266:
                bset    #0,$22(a0)
                bclr    #7,$22(a0)
                move.w  #$400,$10(a0)
                move.w  #$FFC0,$12(a0)
                addq.b  #2,$25(a0)
                tst.b   ($FFFFF7A7).w
                bne.s   locret_B28E
                move.b  #1,($FFFFF7A7).w

locret_B28E:
                rts
; ---------------------------------------------------------------------------

entry_b290:
                cmpi.w  #$2AC0,($FFFFF72A).w
                beq.s   loc_B29E
                addq.w  #2,($FFFFF72A).w
                bra.s   loc_B2A6
; ---------------------------------------------------------------------------

loc_B29E:
                tst.b   1(a0)
                bpl.w   DeleteObject

loc_B2A6:
                bsr.w   sub_B188
                bra.w   loc_B0D2
; ---------------------------------------------------------------------------

entry_b2ae:
                movea.l $34(a0),a1
                cmpi.b  #$A,$25(a1)
                bne.s   loc_B2C2
                tst.b   1(a0)
                bpl.w   DeleteObject

loc_B2C2:
                move.b  #1,$1C(a0)
                tst.b   $20(a1)
                bne.s   loc_B2D4
                move.b  #5,$1C(a0)

loc_B2D4:
                bra.s   loc_B2FC
; ---------------------------------------------------------------------------

entry_b2d6:
                movea.l $34(a0),a1
                cmpi.b  #$A,$25(a1)
                bne.s   loc_B2EA
                tst.b   1(a0)
                bpl.w   DeleteObject

loc_B2EA:
                move.b  #7,$1C(a0)
                move.w  $10(a1),d0
                beq.s   loc_B2FC
                move.b  #8,$1C(a0)

loc_B2FC:
                movea.l $34(a0),a1
                move.w  8(a1),8(a0)
                move.w  $C(a1),$C(a0)
                move.b  $22(a1),$22(a0)
                lea     (unk_B4F2).l,a1
                bsr.w   AnimateObject
                move.b  $22(a0),d0
                andi.b  #3,d0
                andi.b  #$FC,1(a0)
                or.b    d0,1(a0)
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------

Obj48:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  index_b340(pc,d0.w),d1
                jmp     index_b340(pc,d1.w)
; ---------------------------------------------------------------------------
index_b340:     dc.w entry_b34a-index_b340
                dc.w entry_b404-index_b340
                dc.w entry_b462-index_b340
                dc.w entry_b49e-index_b340
                dc.w entry_b4b8-index_b340
; ---------------------------------------------------------------------------

entry_b34a:
                addq.b  #2,$24(a0)
                move.w  #$4080,$26(a0)
                move.w  #$FE00,$3E(a0)
                move.l  #unk_B5E4,4(a0)
                move.w  #$46C,2(a0)
                lea     $28(a0),a2
                move.b  #0,(a2)+
                moveq   #5,d1
                movea.l a0,a1
                bra.s   loc_B3AC
; ---------------------------------------------------------------------------

loc_B376:
                bsr.w   FindFreeObjectSlot2
                bne.s   loc_B3D6
                move.w  8(a0),8(a1)
                move.w  $C(a0),$C(a1)
                move.b  #$48,0(a1)
                move.b  #6,$24(a1)
                move.l  #Map_Obj15,4(a1)
                move.w  #$380,2(a1)
                move.b  #1,$1A(a1)
                addq.b  #1,$28(a0)

loc_B3AC:
                move.w  a1,d5
                subi.w  #$D000,d5
                lsr.w   #6,d5
                andi.w  #$7F,d5
                move.b  d5,(a2)+
                move.b  #4,1(a1)
                move.b  #8,$18(a1)
                move.b  #6,$19(a1)
                move.l  $34(a0),$34(a1)
                dbf     d1,loc_B376

loc_B3D6:
                move.b  #8,$24(a1)
                move.l  #$5E7A,4(a1)
                move.w  #$43AA,2(a1)
                move.b  #1,$1A(a1)
                move.b  #5,$19(a1)
                move.b  #$81,$20(a1)
                rts
; ---------------------------------------------------------------------------
unk_B3FE:       dc.b   0
                dc.b $10
                dc.b $20
                dc.b $30 ; 0
                dc.b $40 ; @
                dc.b $60 
; ---------------------------------------------------------------------------

entry_b404:
                lea     (unk_B3FE).l,a3
                lea     $28(a0),a2
                moveq   #0,d6
                move.b  (a2)+,d6

loc_B412:
                moveq   #0,d4
                move.b  (a2)+,d4
                lsl.w   #6,d4
                addi.l  #$FFD000,d4
                movea.l d4,a1
                move.b  (a3)+,d0
                cmp.b   $3C(a1),d0
                beq.s   loc_B42C
                addq.b  #1,$3C(a1)

loc_B42C:
                dbf     d6,loc_B412
                cmp.b   $3C(a1),d0
                bne.s   loc_B446
                movea.l $34(a0),a1
                cmpi.b  #6,$25(a1)
                bne.s   loc_B446
                addq.b  #2,$24(a0)

loc_B446:
                cmpi.w  #$20,$32(a0) 
                beq.s   loc_B452
                addq.w  #1,$32(a0)

loc_B452:
                bsr.w   sub_B46E
                move.b  $26(a0),d0
                bsr.w   loc_5692
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------

entry_b462:
                bsr.w   sub_B46E
                bsr.w   loc_5652
                bra.w   DisplaySprite

; =============== S U B R O U T I N E =======================================


sub_B46E:
                movea.l $34(a0),a1
                move.w  8(a1),$3A(a0)
                move.w  $C(a1),d0
                add.w   $32(a0),d0
                move.w  d0,$38(a0)
                move.b  $22(a1),$22(a0)
                tst.b   $22(a1)
                bpl.s   locret_B49C
                move.b  #$3F,0(a0) 
                move.b  #0,$24(a0)

locret_B49C:
                rts
; End of function sub_B46E

; ---------------------------------------------------------------------------

entry_b49e:
                movea.l $34(a0),a1
                tst.b   $22(a1)
                bpl.s   loc_B4B4
                move.b  #$3F,0(a0) 
                move.b  #0,$24(a0)

loc_B4B4:
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------

entry_b4b8:
                moveq   #0,d0
                tst.b   $1A(a0)
                bne.s   loc_B4C2
                addq.b  #1,d0

loc_B4C2:
                move.b  d0,$1A(a0)
                movea.l $34(a0),a1
                tst.b   $22(a1)
                bpl.w   DisplaySprite
                move.b  #0,$20(a0)
                bsr.w   sub_B146
                subq.b  #1,$3C(a0)
                bpl.s   loc_B4EE
                move.b  #$3F,0(a0) 
                move.b  #0,$24(a0)

loc_B4EE:
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------
unk_B4F2:       dc.b   0
                dc.b $14
                dc.b   0
                dc.b $18
                dc.b   0
                dc.b $1C
                dc.b   0
                dc.b $20
                dc.b   0
                dc.b $24 ; $
                dc.b   0
                dc.b $30 ; 0
                dc.b   0
                dc.b $34 ; 4
                dc.b   0
                dc.b $38 ; 8
                dc.b   0
                dc.b $3C ; <
                dc.b   0
                dc.b $40 ; @
                dc.b  $F
                dc.b   0
                dc.b $FF
                dc.b   0
                dc.b   5
                dc.b   1
                dc.b   2
                dc.b $FF
                dc.b   3
                dc.b   1
                dc.b   2
                dc.b $FF
                dc.b   1
                dc.b   1
                dc.b   2
                dc.b $FF
                dc.b   3
                dc.b   3
                dc.b   4
                dc.b   3
                dc.b   4
                dc.b   3
                dc.b   4
                dc.b   3
                dc.b   4
                dc.b $FD
                dc.b   1
                dc.b   0
                dc.b $1F
                dc.b   5
                dc.b   1
                dc.b $FF
                dc.b   3
                dc.b   6
                dc.b   1
                dc.b $FF
                dc.b  $F
                dc.b  $A
                dc.b $FF
                dc.b   0
                dc.b   3
                dc.b   8
                dc.b   9
                dc.b $FF
                dc.b   1
                dc.b   8
                dc.b   9
                dc.b $FF
unk_B536:       dc.b   0
                dc.b $16
                dc.b   0
                dc.b $35 ; 5
                dc.b   0
                dc.b $40 ; @
                dc.b   0
                dc.b $4B ; K
                dc.b   0
                dc.b $5B ; [
                dc.b   0
                dc.b $6B ; k
                dc.b   0
                dc.b $7B ; {
                dc.b   0
                dc.b $8B
                dc.b   0
                dc.b $A0
                dc.b   0
                dc.b $A6
                dc.b   0
                dc.b $AC
                dc.b   6
                dc.b $EC
                dc.b   1
                dc.b   0
                dc.b  $A
                dc.b $E4
                dc.b $EC
                dc.b   5
                dc.b   0
                dc.b  $C
                dc.b  $C
                dc.b $FC
                dc.b  $E
                dc.b $20
                dc.b $10
                dc.b $E4
                dc.b $FC
                dc.b  $E
                dc.b $20
                dc.b $1C
                dc.b   4
                dc.b $14
                dc.b  $C
                dc.b $20
                dc.b $28 ; (
                dc.b $EC
                dc.b $14
                dc.b   0
                dc.b $20
                dc.b $2C ; ,
                dc.b  $C
                dc.b   2
                dc.b $E4
                dc.b   4
                dc.b   0
                dc.b   0
                dc.b $F4
                dc.b $EC
                dc.b  $D
                dc.b   0
                dc.b   2
                dc.b $EC
                dc.b   2
                dc.b $E4
                dc.b   4
                dc.b   0
                dc.b   0
                dc.b $F4
                dc.b $EC
                dc.b  $D
                dc.b   0
                dc.b $35 ; 5
                dc.b $EC
                dc.b   3
                dc.b $E4
                dc.b   8
                dc.b   0
                dc.b $3D ; =
                dc.b $F4
                dc.b $EC
                dc.b   9
                dc.b   0
                dc.b $40 ; @
                dc.b $EC
                dc.b $EC
                dc.b   5
                dc.b   0
                dc.b $46 
                dc.b   4
                dc.b   3
                dc.b $E4
                dc.b   8
                dc.b   0
                dc.b $4A ; J
                dc.b $F4
                dc.b $EC
                dc.b   9
                dc.b   0
                dc.b $4D ; M
                dc.b $EC
                dc.b $EC
                dc.b   5
                dc.b   0
                dc.b $53 ; S
                dc.b   4
                dc.b   3
                dc.b $E4
                dc.b   8
                dc.b   0
                dc.b $57 ; W
                dc.b $F4
                dc.b $EC
                dc.b   9
                dc.b   0
                dc.b $5A ; Z
                dc.b $EC
                dc.b $EC
                dc.b   5
                dc.b   0
                dc.b $60 
                dc.b   4
                dc.b   3
                dc.b $E2
                dc.b   4
                dc.b   0
                dc.b $64 ; d
                dc.b  $C
                dc.b $E4
                dc.b   4
                dc.b   0
                dc.b   0
                dc.b $F4
                dc.b $EC
                dc.b  $D
                dc.b   0
                dc.b $35 ; 5
                dc.b $EC
                dc.b   4
                dc.b $E4
                dc.b   9
                dc.b   0
                dc.b $66 
                dc.b $F4
                dc.b $E4
                dc.b   8
                dc.b   0
                dc.b $57 ; W
                dc.b $F4
                dc.b $EC
                dc.b   9
                dc.b   0
                dc.b $5A ; Z
                dc.b $EC
                dc.b $EC
                dc.b   5
                dc.b   0
                dc.b $60 
                dc.b   4
                dc.b   1
                dc.b   4
                dc.b   5
                dc.b   0
                dc.b $2D ; -
                dc.b $22 ; "
                dc.b   1
                dc.b   4
                dc.b   5
                dc.b   0
                dc.b $31 ; 1
                dc.b $22 ; "
                dc.b   0
                dc.b   0

unk_B5E4:       include "Map/Obj48.asm"
; ---------------------------------------------------------------------------

Obj3E:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  index_b66c(pc,d0.w),d1
                jsr     index_b66c(pc,d1.w)
                bsr.w   DisplaySprite
                move.w  8(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.w   DeleteObject
                rts
; ---------------------------------------------------------------------------
index_b66c:     dc.w entry_b68c-index_b66c
                dc.w entry_b6d6-index_b66c
                dc.w entry_b710-index_b66c
                dc.w entry_b760-index_b66c
                dc.w entry_b760-index_b66c
                dc.w entry_b760-index_b66c
                dc.w entry_b7c6-index_b66c
                dc.w entry_b7fa-index_b66c

byte_B67C:      dc.b 2, $20, 4, 0
                dc.b 4, $C, 5, 1
                dc.b 6, $10, 4, 3
                dc.b 8, $10, 3, 5
; ---------------------------------------------------------------------------

entry_b68c:
                move.l  #Map_Capsule,4(a0)
                move.w  #$49D,2(a0)
                move.b  #4,1(a0)
                move.w  $C(a0),$30(a0)
                moveq   #0,d0
                move.b  $28(a0),d0
                lsl.w   #2,d0
                lea     byte_B67C(pc,d0.w),a1
                move.b  (a1)+,$24(a0)
                move.b  (a1)+,$18(a0)
                move.b  (a1)+,$19(a0)
                move.b  (a1)+,$1A(a0)
                cmpi.w  #8,d0
                bne.s   locret_B6D4
                move.b  #6,$20(a0)
                move.b  #8,$21(a0)

locret_B6D4:
                rts
; ---------------------------------------------------------------------------

entry_b6d6:
                cmpi.b  #2,($FFFFF7A7).w
                beq.s   loc_B6F2
                move.w  #$2B,d1 
                move.w  #$18,d2
                move.w  #$18,d3
                move.w  8(a0),d4
                bra.w   sub_A2BC
; ---------------------------------------------------------------------------

loc_B6F2:
                tst.b   $25(a0)
                beq.s   loc_B708
                clr.b   $25(a0)
                bclr    #3,($FFFFD022).w
                bset    #1,($FFFFD022).w

loc_B708:
                move.b  #2,$1A(a0)
                rts
; ---------------------------------------------------------------------------

entry_b710:
                move.w  #$17,d1
                move.w  #8,d2
                move.w  #8,d3
                move.w  8(a0),d4
                bsr.w   sub_A2BC
                lea     (unk_B80A).l,a1
                bsr.w   AnimateObject
                move.w  $30(a0),$C(a0)
                tst.b   $25(a0)
                beq.s   locret_B75E
                addq.w  #8,$C(a0)
                move.b  #$A,$24(a0)
                move.w  #$3C,$1E(a0) 
                clr.b   ($FFFFFE1E).w
                clr.b   $25(a0)
                bclr    #3,($FFFFD022).w
                bset    #1,($FFFFD022).w

locret_B75E:
                rts
; ---------------------------------------------------------------------------

entry_b760:
                move.b  ($FFFFFE0F).w,d0
                andi.b  #7,d0
                bne.s   loc_B7A0
                bsr.w   FindFreeObjectSlot
                bne.s   loc_B7A0
                move.b  #$3F,0(a1) 
                move.w  8(a0),8(a1)
                move.w  $C(a0),$C(a1)
                jsr     (RandomNumber).l
                move.w  d0,d1
                moveq   #0,d1
                move.b  d0,d1
                lsr.b   #2,d1
                subi.w  #$20,d1 
                add.w   d1,8(a1)
                lsr.w   #8,d0
                lsr.b   #3,d0
                add.w   d0,$C(a1)

loc_B7A0:
                subq.w  #1,$1E(a0)
                bne.s   locret_B7C4
                move.b  #2,($FFFFF7A7).w
                move.b  #$C,$24(a0)
                move.b  #9,$1A(a0)
                move.w  #$B4,$1E(a0)
                addi.w  #$20,$C(a0) 

locret_B7C4:
                rts
; ---------------------------------------------------------------------------

entry_b7c6:
                move.b  ($FFFFFE0F).w,d0
                andi.b  #7,d0
                bne.s   loc_B7E8
                bsr.w   FindFreeObjectSlot
                bne.s   loc_B7E8
                move.b  #$28,0(a1) 
                move.w  8(a0),8(a1)
                move.w  $C(a0),$C(a1)

loc_B7E8:
                subq.w  #1,$1E(a0)
                bne.s   locret_B7F8
                addq.b  #2,$24(a0)
                move.w  #$3C,$1E(a0) 

locret_B7F8:
                rts
; ---------------------------------------------------------------------------

entry_b7fa:
                subq.w  #1,$1E(a0)
                bne.s   locret_B808
                bsr.w   sub_C81C
                bra.w   DeleteObject
; ---------------------------------------------------------------------------

locret_B808:
                rts
; ---------------------------------------------------------------------------
Map_Capsule:    include "Map/Capsule.asm"

unk_B80A:       dc.b   0
                dc.b   4
                dc.b   0
                dc.b   4
                dc.b   2
                dc.b   1
                dc.b   3
                dc.b $FF
                dc.b   0
                dc.b  $E
                dc.b   0
                dc.b $32 ; 2
                dc.b   0
                dc.b $38 ; 8
                dc.b   0
                dc.b $57 ; W
                dc.b   0
                dc.b $5D ; ]
                dc.b   0
                dc.b $68 ; h
                dc.b   0
                dc.b $6E ; n
                dc.b   7
                dc.b $E0
                dc.b  $C
                dc.b $20
                dc.b   0
                dc.b $F0
                dc.b $E8
                dc.b  $D
                dc.b $20
                dc.b   4
                dc.b $E0
                dc.b $E8
                dc.b  $D
                dc.b $20
                dc.b  $C
                dc.b   0
                dc.b $F8
                dc.b  $E
                dc.b $20
                dc.b $14
                dc.b $E0
                dc.b $F8
                dc.b  $E
                dc.b $20
                dc.b $20
                dc.b   0
                dc.b $10
                dc.b  $D
                dc.b $20
                dc.b $2C ; ,
                dc.b $E0
                dc.b $10
                dc.b  $D
                dc.b $20
                dc.b $34 ; 4
                dc.b   0
                dc.b   1
                dc.b $F8
                dc.b   9
                dc.b   0
                dc.b $3C ; <
                dc.b $F4
                dc.b   6
                dc.b   0
                dc.b   8
                dc.b $20
                dc.b $42 ; B
                dc.b $E0
                dc.b   8
                dc.b  $C
                dc.b $20
                dc.b $45 ; E
                dc.b $E0
                dc.b   0
                dc.b   4
                dc.b $20
                dc.b $49 ; I
                dc.b $10
                dc.b   8
                dc.b  $C
                dc.b $20
                dc.b $4B ; K
                dc.b   0
                dc.b $10
                dc.b  $D
                dc.b $20
                dc.b $2C ; ,
                dc.b $E0
                dc.b $10
                dc.b  $D
                dc.b $20
                dc.b $34 ; 4
                dc.b   0
                dc.b   1
                dc.b $F8
                dc.b   9
                dc.b   0
                dc.b $4F ; O
                dc.b $F4
                dc.b   2
                dc.b $E8
                dc.b  $E
                dc.b $20
                dc.b $55 ; U
                dc.b $F0
                dc.b   0
                dc.b  $E
                dc.b $20
                dc.b $61 
                dc.b $F0
                dc.b   1
                dc.b $F0
                dc.b   7
                dc.b $20
                dc.b $6D ; m
                dc.b $F8
                dc.b   0
                dc.b   0
; ---------------------------------------------------------------------------

ObjMotobug:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  ObjMotobug_Index(pc,d0.w),d1
                jmp     ObjMotobug_Index(pc,d1.w)
; ---------------------------------------------------------------------------
ObjMotobug_Index:dc.w entry_B898-*
                dc.w entry_b8fa-ObjMotobug_Index
                dc.w entry_b9d8-ObjMotobug_Index
                dc.w entry_b9e6-ObjMotobug_Index
; ---------------------------------------------------------------------------

entry_B898:
                move.l  #unk_BA08,4(a0)
                move.w  #$4F0,2(a0)
                move.b  #4,1(a0)
                move.b  #4,$19(a0)
                move.b  #$14,$18(a0)
                tst.b   $1C(a0)
                bne.s   loc_B8F2
                move.b  #$E,$16(a0)
                move.b  #8,$17(a0)
                move.b  #$C,$20(a0)
                bsr.w   ObjectMoveAndFall
                bsr.w   ObjectHitFloor
                tst.w   d1
                bpl.s   locret_B8F0
                add.w   d1,$C(a0)
                move.w  #0,$12(a0)
                addq.b  #2,$24(a0)
                bchg    #0,$22(a0)

locret_B8F0:
                rts
; ---------------------------------------------------------------------------

loc_B8F2:
                addq.b  #4,$24(a0)
                bra.w   entry_b9d8
; ---------------------------------------------------------------------------

entry_b8fa:
                moveq   #0,d0
                move.b  $25(a0),d0
                move.w  index_b94e(pc,d0.w),d1
                jsr     index_b94e(pc,d1.w)
                lea     (unk_B9EA).l,a1
                bsr.w   AnimateObject

MarkObjectGone:
                move.w  8(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                bmi.w   loc_B938
                cmpi.w  #$280,d0
                bhi.w   loc_B938
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------

loc_B938:
                lea     ($FFFFFC00).w,a2
                moveq   #0,d0
                move.b  $23(a0),d0
                beq.s   loc_B94A
                bclr    #7,2(a2,d0.w)

loc_B94A:
                bra.w   DeleteObject
; END OF FUNCTION CHUNK FOR entry_5f60
; ---------------------------------------------------------------------------
index_b94e:     dc.w entry_B952-*
                dc.w entry_b976-index_b94e
; ---------------------------------------------------------------------------

entry_B952:
                subq.w  #1,$30(a0)
                bpl.s   locret_B974
                addq.b  #2,$25(a0)
                move.w  #$FF00,$10(a0)
                move.b  #1,$1C(a0)
                bchg    #0,$22(a0)
                bne.s   locret_B974
                neg.w   $10(a0)

locret_B974:
                rts
; ---------------------------------------------------------------------------

entry_b976:
                bsr.w   ObjectMove
                bsr.w   ObjectHitFloor
                cmpi.w  #$FFF8,d1
                blt.s   loc_B9C0
                cmpi.w  #$C,d1
                bge.s   loc_B9C0
                add.w   d1,$C(a0)
                subq.b  #1,$33(a0)
                bpl.s   locret_B9BE
                move.b  #$F,$33(a0)
                bsr.w   FindFreeObjectSlot
                bne.s   locret_B9BE
                move.b  #$40,0(a1) 
                move.w  8(a0),8(a1)
                move.w  $C(a0),$C(a1)
                move.b  $22(a0),$22(a1)
                move.b  #2,$1C(a1)

locret_B9BE:
                rts
; ---------------------------------------------------------------------------

loc_B9C0:
                subq.b  #2,$25(a0)
                move.w  #$3B,$30(a0) 
                move.w  #0,$10(a0)
                move.b  #0,$1C(a0)
                rts
; ---------------------------------------------------------------------------

entry_b9d8:
                lea     (unk_B9EA).l,a1
                bsr.w   AnimateObject
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------

entry_b9e6:
                bra.w   DeleteObject
; ---------------------------------------------------------------------------
unk_B9EA:       dc.b   0
                dc.b   6
                dc.b   0
                dc.b  $A
                dc.b   0
                dc.b $10
                dc.b  $F
                dc.b   2
                dc.b $FF
                dc.b   0
                dc.b   7
                dc.b   0
                dc.b   1
                dc.b   0
                dc.b   2
                dc.b $FF
                dc.b   1
                dc.b   3
                dc.b   6
                dc.b   3
                dc.b   6
                dc.b   4
                dc.b   6
                dc.b   4
                dc.b   6
                dc.b   4
                dc.b   6
                dc.b   5
                dc.b $FC
                dc.b   0

unk_BA08:       include "Map/Motobug.asm"
; ---------------------------------------------------------------------------

ObjSprings:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  ObjSprings_Index(pc,d0.w),d1
                jsr     ObjSprings_Index(pc,d1.w)
                bsr.w   DisplaySprite
                move.w  8(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.w   DeleteObject
                rts
; ---------------------------------------------------------------------------
ObjSprings_Index:dc.w entry_bab8-ObjSprings_Index
                dc.w entry_bb2e-ObjSprings_Index
                dc.w entry_bb84-ObjSprings_Index
                dc.w entry_bb8e-ObjSprings_Index
                dc.w entry_bb9a-ObjSprings_Index
                dc.w entry_bc1c-ObjSprings_Index
                dc.w entry_bc26-ObjSprings_Index
                dc.w entry_bc32-ObjSprings_Index
                dc.w entry_bc98-ObjSprings_Index
                dc.w entry_bca2-ObjSprings_Index
word_BAB4:      dc.w -$1000
                dc.w -$A00
; ---------------------------------------------------------------------------

entry_bab8:
                addq.b  #2,$24(a0)
                move.l  #unk_BCCA,4(a0)
                move.w  #$523,2(a0)
                ori.b   #4,1(a0)
                move.b  #$10,$18(a0)
                move.b  #4,$19(a0)
                move.b  $28(a0),d0
                btst    #4,d0
                beq.s   loc_BB04
                move.b  #8,$24(a0)
                move.b  #1,$1C(a0)
                move.b  #3,$1A(a0)
                move.w  #$533,2(a0)
                move.b  #8,$18(a0)

loc_BB04:
                btst    #5,d0
                beq.s   loc_BB16
                move.b  #$E,$24(a0)
                bset    #1,$22(a0)

loc_BB16:
                btst    #1,d0
                beq.s   loc_BB22
                bset    #5,2(a0)

loc_BB22:
                andi.w  #$F,d0
                move.w  word_BAB4(pc,d0.w),$30(a0)
                rts
; ---------------------------------------------------------------------------

entry_bb2e:
                move.w  #$1B,d1
                move.w  #8,d2
                move.w  #$10,d3
                move.w  8(a0),d4
                bsr.w   sub_A2BC
                tst.b   $25(a0)
                bne.s   loc_BB4A
                rts
; ---------------------------------------------------------------------------

loc_BB4A:
                addq.b  #2,$24(a0)
                addq.w  #8,$C(a1)
                move.w  $30(a0),$12(a1)
                bset    #1,$22(a1)
                bclr    #3,$22(a1)
                move.b  #$10,$1C(a1)
                move.b  #2,$24(a1)
                bclr    #3,$22(a0)
                clr.b   $25(a0)
                move.w  #$CC,d0
                jsr     (PlaySound_Special).l

entry_bb84:
                lea     (unk_BCAE).l,a1
                bra.w   AnimateObject
; ---------------------------------------------------------------------------

entry_bb8e:
                move.b  #1,$1D(a0)
                subq.b  #4,$24(a0)
                rts
; ---------------------------------------------------------------------------

entry_bb9a:
                move.w  #$13,d1
                move.w  #$E,d2
                move.w  #$F,d3
                move.w  8(a0),d4
                bsr.w   sub_A2BC
                cmpi.b  #2,$24(a0)
                bne.s   loc_BBBC
                move.b  #8,$24(a0)

loc_BBBC:
                btst    #5,$22(a0)
                bne.s   loc_BBC6
                rts
; ---------------------------------------------------------------------------

loc_BBC6:
                addq.b  #2,$24(a0)
                move.w  $30(a0),$10(a1)
                addq.w  #8,8(a1)
                btst    #0,$22(a0)
                bne.s   loc_BBE6
                subi.w  #$10,8(a1)
                neg.w   $10(a1)

loc_BBE6:
                move.w  #$F,$3E(a1)
                move.w  $10(a1),$14(a1)
                bchg    #0,$22(a1)
                btst    #2,$22(a1)
                bne.s   loc_BC06
                move.b  #0,$1C(a1)

loc_BC06:
                bclr    #5,$22(a0)
                bclr    #5,$22(a1)
                move.w  #$CC,d0
                jsr     (PlaySound_Special).l

entry_bc1c:
                lea     (unk_BCAE).l,a1
                bra.w   AnimateObject
; ---------------------------------------------------------------------------

entry_bc26:
                move.b  #2,$1D(a0)
                subq.b  #4,$24(a0)
                rts
; ---------------------------------------------------------------------------

entry_bc32:
                move.w  #$1B,d1
                move.w  #8,d2
                move.w  #$10,d3
                move.w  8(a0),d4
                bsr.w   sub_A2BC
                cmpi.b  #2,$24(a0)
                bne.s   loc_BC54
                move.b  #$E,$24(a0)

loc_BC54:
                tst.b   $25(a0)
                bne.s   locret_BC5E
                tst.w   d4
                bmi.s   loc_BC60

locret_BC5E:
                rts
; ---------------------------------------------------------------------------

loc_BC60:
                addq.b  #2,$24(a0)
                subq.w  #8,$C(a1)
                move.w  $30(a0),$12(a1)
                neg.w   $12(a1)
                bset    #1,$22(a1)
                bclr    #3,$22(a1)
                move.b  #2,$24(a1)
                bclr    #3,$22(a0)
                clr.b   $25(a0)
                move.w  #$CC,d0
                jsr     (PlaySound_Special).l

entry_bc98:
                lea     (unk_BCAE).l,a1
                bra.w   AnimateObject
; ---------------------------------------------------------------------------

entry_bca2:
                move.b  #1,$1D(a0)
                subq.b  #4,$24(a0)
                rts
; ---------------------------------------------------------------------------
unk_BCAE:       dc.b   0
                dc.b   4
                dc.b   0
                dc.b $10
                dc.b   0
                dc.b   1
                dc.b   0
                dc.b   0
                dc.b   2
                dc.b   2
                dc.b   2
                dc.b   2
                dc.b   2
                dc.b   2
                dc.b   0
                dc.b $FC
                dc.b   0
                dc.b   4
                dc.b   3
                dc.b   3
                dc.b   5
                dc.b   5
                dc.b   5
                dc.b   5
                dc.b   5
                dc.b   5
                dc.b   3
                dc.b $FC

unk_BCCA:       include "Map/Spring.asm"

; ---------------------------------------------------------------------------

ObjNewtron:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  index_bd26(pc,d0.w),d1
                jmp     index_bd26(pc,d1.w)
; ---------------------------------------------------------------------------
index_bd26:     dc.w entry_BD2C-*
                dc.w entry_bd5c-index_bd26
                dc.w entry_bec6-index_bd26
; ---------------------------------------------------------------------------

entry_BD2C:
                addq.b  #2,$24(a0)
                move.l  #unk_BEF2,4(a0)
                move.w  #$249B,2(a0)
                move.b  #4,1(a0)
                move.b  #4,$19(a0)
                move.b  #$14,$18(a0)
                move.b  #$10,$16(a0)
                move.b  #8,$17(a0)

entry_bd5c:
                moveq   #0,d0
                move.b  $25(a0),d0
                move.w  index_bd78(pc,d0.w),d1
                jsr     index_bd78(pc,d1.w)
                lea     (unk_BECA).l,a1
                bsr.w   AnimateObject
                bra.w   MarkObjectGone
; ---------------------------------------------------------------------------
index_bd78:     dc.w entry_bd82-index_bd78
                dc.w entry_bdc4-index_bd78
                dc.w entry_be38-index_bd78
                dc.w entry_be58-index_bd78
                dc.w entry_be5e-index_bd78
; ---------------------------------------------------------------------------

entry_bd82:
                bset    #0,$22(a0)
                move.w  ($FFFFD008).w,d0
                sub.w   8(a0),d0
                bcc.s   loc_BD9A
                neg.w   d0
                bclr    #0,$22(a0)

loc_BD9A:
                cmpi.w  #$80,d0
                bcc.s   locret_BDC2
                addq.b  #2,$25(a0)
                move.b  #1,$1C(a0)
                tst.b   $28(a0)
                beq.s   locret_BDC2
                move.w  #$49B,2(a0)
                move.b  #8,$25(a0)
                move.b  #4,$1C(a0)

locret_BDC2:
                rts
; ---------------------------------------------------------------------------

entry_bdc4:
                cmpi.b  #4,$1A(a0)
                bcc.s   loc_BDE4
                bset    #0,$22(a0)
                move.w  ($FFFFD008).w,d0
                sub.w   8(a0),d0
                bcc.s   locret_BDE2
                bclr    #0,$22(a0)

locret_BDE2:
                rts
; ---------------------------------------------------------------------------

loc_BDE4:
                cmpi.b  #1,$1A(a0)
                bne.s   loc_BDF2
                move.b  #$C,$20(a0)

loc_BDF2:
                bsr.w   ObjectMoveAndFall
                bsr.w   ObjectHitFloor
                tst.w   d1
                bpl.s   locret_BE36
                add.w   d1,$C(a0)
                move.w  #0,$12(a0)
                addq.b  #2,$25(a0)
                move.b  #2,$1C(a0)
                btst    #5,2(a0)
                beq.s   loc_BE1E
                addq.b  #1,$1C(a0)

loc_BE1E:
                move.b  #$D,$20(a0)
                move.w  #$200,$10(a0)
                btst    #0,$22(a0)
                bne.s   locret_BE36
                neg.w   $10(a0)

locret_BE36:
                rts
; ---------------------------------------------------------------------------

entry_be38:
                bsr.w   ObjectMove
                bsr.w   ObjectHitFloor
                cmpi.w  #$FFF8,d1
                blt.s   loc_BE52
                cmpi.w  #$C,d1
                bge.s   loc_BE52
                add.w   d1,$C(a0)
                rts
; ---------------------------------------------------------------------------

loc_BE52:
                addq.b  #2,$25(a0)
                rts
; ---------------------------------------------------------------------------

entry_be58:
                bsr.w   ObjectMove
                rts
; ---------------------------------------------------------------------------

entry_be5e:
                cmpi.b  #1,$1A(a0)
                bne.s   loc_BE6C
                move.b  #$C,$20(a0)

loc_BE6C:
                cmpi.b  #2,$1A(a0)
                bne.s   locret_BEC4
                tst.b   $32(a0)
                bne.s   locret_BEC4
                move.b  #1,$32(a0)
                bsr.w   FindFreeObjectSlot
                bne.s   locret_BEC4
                move.b  #$23,0(a1) 
                move.w  8(a0),8(a1)
                move.w  $C(a0),$C(a1)
                subq.w  #8,$C(a1)
                move.w  #$200,$10(a1)
                move.w  #$14,d0
                btst    #0,$22(a0)
                bne.s   loc_BEB4
                neg.w   d0
                neg.w   $10(a1)

loc_BEB4:
                add.w   d0,8(a1)
                move.b  $22(a0),$22(a1)
                move.b  #1,$28(a1)

locret_BEC4:
                rts
; ---------------------------------------------------------------------------

entry_bec6:
                bra.w   DeleteObject
; ---------------------------------------------------------------------------
unk_BECA:       dc.b   0
                dc.b  $A
                dc.b   0
                dc.b  $E
                dc.b   0
                dc.b $16
                dc.b   0
                dc.b $1A
                dc.b   0
                dc.b $1E
                dc.b  $F
                dc.b  $A
                dc.b $FF
                dc.b   0
                dc.b $13
                dc.b   0
                dc.b   1
                dc.b   3
                dc.b   4
                dc.b   5
                dc.b $FE
                dc.b   1
                dc.b   2
                dc.b   6
                dc.b   7
                dc.b $FF
                dc.b   2
                dc.b   8
                dc.b   9
                dc.b $FF
                dc.b $13
                dc.b   0
                dc.b   1
                dc.b   1
                dc.b   2
                dc.b   1
                dc.b   1
                dc.b   0
                dc.b $FC
                dc.b   0

unk_BEF2:       include "Map/Newtron.asm"
; ---------------------------------------------------------------------------

ObjRoller:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  index_bfb8(pc,d0.w),d1
                jmp     index_bfb8(pc,d1.w)
; ---------------------------------------------------------------------------
index_bfb8:     dc.w entry_BFBE-*
                dc.w entry_c00c-index_bfb8
                dc.w entry_c0b0-index_bfb8
; ---------------------------------------------------------------------------

entry_BFBE:
                move.b  #$E,$16(a0)
                move.b  #8,$17(a0)
                bsr.w   ObjectMoveAndFall
                bsr.w   ObjectHitFloor
                tst.w   d1
                bpl.s   locret_C00A
                add.w   d1,$C(a0)
                move.w  #0,$12(a0)
                addq.b  #2,$24(a0)
                move.l  #unk_C0CA,4(a0)
                move.w  #$24B8,2(a0)
                move.b  #4,1(a0)
                move.b  #4,$19(a0)
                move.b  #$10,$18(a0)
                move.b  #$8E,$20(a0)

locret_C00A:
                rts
; ---------------------------------------------------------------------------

entry_c00c:
                moveq   #0,d0
                move.b  $25(a0),d0
                move.w  index_c028(pc,d0.w),d1
                jsr     index_c028(pc,d1.w)
                lea     (unk_C0B4).l,a1
                bsr.w   AnimateObject
                bra.w   MarkObjectGone
; ---------------------------------------------------------------------------
index_c028:     dc.w entry_C030-*
                dc.w entry_c052-index_c028
                dc.w entry_c060-index_c028
                dc.w entry_c08e-index_c028
; ---------------------------------------------------------------------------

entry_C030:
                move.w  ($FFFFD008).w,d0
                sub.w   8(a0),d0
                bcs.s   locret_C050
                cmpi.w  #$20,d0 
                bcc.s   locret_C050
                addq.b  #2,$25(a0)
                move.b  #1,$1C(a0)
                move.w  #$400,$10(a0)

locret_C050:
                rts
; ---------------------------------------------------------------------------

entry_c052:
                cmpi.b  #2,$1C(a0)
                bne.s   locret_C05E
                addq.b  #2,$25(a0)

locret_C05E:
                rts
; ---------------------------------------------------------------------------

entry_c060:
                bsr.w   ObjectMove
                bsr.w   ObjectHitFloor
                cmpi.w  #$FFF8,d1
                blt.s   loc_C07A
                cmpi.w  #$C,d1
                bge.s   loc_C07A
                add.w   d1,$C(a0)
                rts
; ---------------------------------------------------------------------------

loc_C07A:
                addq.b  #2,$25(a0)
                bset    #0,$32(a0)
                beq.s   locret_C08C
                move.w  #$FA00,$12(a0)

locret_C08C:
                rts
; ---------------------------------------------------------------------------

entry_c08e:
                bsr.w   ObjectMoveAndFall
                tst.w   $12(a0)
                bmi.s   locret_C0AE
                bsr.w   ObjectHitFloor
                tst.w   d1
                bpl.s   locret_C0AE
                add.w   d1,$C(a0)
                subq.b  #2,$25(a0)
                move.w  #0,$12(a0)

locret_C0AE:
                rts
; ---------------------------------------------------------------------------

entry_c0b0:
                bra.w   DeleteObject
; ---------------------------------------------------------------------------
unk_C0B4:       dc.b   0
                dc.b   6
                dc.b   0
                dc.b  $A
                dc.b   0
                dc.b $10
                dc.b  $F
                dc.b   0
                dc.b $FF
                dc.b   0
                dc.b  $F
                dc.b   1
                dc.b   2
                dc.b $FD
                dc.b   2
                dc.b   0
                dc.b   3
                dc.b   2
                dc.b   3
                dc.b   4
                dc.b $FF
                dc.b   0

unk_C0CA:       include "Map/Roller.asm"
; ---------------------------------------------------------------------------

ObjWalls:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  index_c10a(pc,d0.w),d1
                jmp     index_c10a(pc,d1.w)
; ---------------------------------------------------------------------------
index_c10a:     dc.w entry_C110-*
                dc.w entry_c148-index_c10a
                dc.w entry_c154-index_c10a
; ---------------------------------------------------------------------------

entry_C110:
                addq.b  #2,$24(a0)
                move.l  #unk_C178,4(a0)
                move.w  #$434C,2(a0)
                ori.b   #4,1(a0)
                move.b  #8,$18(a0)
                move.b  #6,$19(a0)
                move.b  $28(a0),$1A(a0)
                bclr    #4,$1A(a0)
                beq.s   entry_c148
                addq.b  #2,$24(a0)
                bra.s   entry_c154
; ---------------------------------------------------------------------------

entry_c148:
                move.w  #$13,d1
                move.w  #$28,d2 
                bsr.w   sub_6936

entry_c154:
                bsr.w   DisplaySprite
                move.w  8(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.w   DeleteObject
                rts
; ---------------------------------------------------------------------------
unk_C178:       include "Map/GHZWall.asm"
; ---------------------------------------------------------------------------

Obj13:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  Obj13_Index(pc,d0.w),d1
                jsr     Obj13_Index(pc,d1.w)
                bra.w   loc_C2E6
; ---------------------------------------------------------------------------
Obj13_Index:    dc.w entry_C1DA-Obj13_Index
                dc.w entry_c1fa-Obj13_Index
byte_C1D4:      dc.b $1E, $3C, $5A, $78, $96, $B4
; ---------------------------------------------------------------------------

entry_C1DA:
                addq.b  #2,$24(a0)
                move.b  $28(a0),d0
                lsr.w   #4,d0
                andi.w  #$F,d0
                move.b  byte_C1D4(pc,d0.w),$1F(a0)
                move.b  $1F(a0),$1E(a0)
                andi.b  #$F,$28(a0)

entry_c1fa:
                subq.b  #1,$1E(a0)
                bne.s   locret_C22A
                move.b  $1F(a0),$1E(a0)
                bsr.w   sub_89C6
                bne.s   locret_C22A
                bsr.w   FindFreeObjectSlot
                bne.s   locret_C22A
                move.b  #$14,0(a1)
                move.w  8(a0),8(a1)
                move.w  $C(a0),$C(a1)
                move.b  $28(a0),$28(a1)

locret_C22A:
                rts

; =============== S U B R O U T I N E =======================================


ObjFireBall:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  ObjFireBall_Index(pc,d0.w),d1
                jsr     ObjFireBall_Index(pc,d1.w)
                bra.w   DisplaySprite
; End of function ObjFireBall

; ---------------------------------------------------------------------------
ObjFireBall_Index:dc.w entry_c254-ObjFireBall_Index
                dc.w entry_c2c8-ObjFireBall_Index
                dc.w entry_c3ce-ObjFireBall_Index
ObjFireBall_Speeds:dc.w -$400
                dc.w -$500
                dc.w -$600
                dc.w -$700
                dc.w -$200
                dc.w $200
                dc.w -$200
                dc.w $200
; ---------------------------------------------------------------------------

entry_c254:
                addq.b  #2,$24(a0)
                move.b  #8,$16(a0)
                move.b  #8,$17(a0)
                move.l  #Map_FireBall,4(a0)
                move.w  #$345,2(a0)
                move.b  #4,1(a0)
                move.b  #3,$19(a0)
                move.b  #$8B,$20(a0)
                move.w  $C(a0),$30(a0)
                moveq   #0,d0
                move.b  $28(a0),d0
                add.w   d0,d0
                move.w  ObjFireBall_Speeds(pc,d0.w),$12(a0)
                move.b  #8,$18(a0)
                cmpi.b  #6,$28(a0)
                bcs.s   loc_C2BE
                move.b  #$10,$18(a0)
                move.b  #2,$1C(a0)
                move.w  $12(a0),$10(a0)
                move.w  #0,$12(a0)

loc_C2BE:
                move.w  #$AE,d0
                jsr     (PlaySound_Special).l

entry_c2c8:
                moveq   #0,d0
                move.b  $28(a0),d0
                add.w   d0,d0
                move.w  unk_C306(pc,d0.w),d1
                jsr     unk_C306(pc,d1.w)
                bsr.w   ObjectMove
                lea     (Ani_FireBall).l,a1
                bsr.w   AnimateObject

loc_C2E6:
                move.w  8(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.w   DeleteObject
                rts
; ---------------------------------------------------------------------------
unk_C306:       dc.b   0
                dc.b $12
                dc.b   0
                dc.b $12
                dc.b   0
                dc.b $12
                dc.b   0
                dc.b $12
                dc.b   0
                dc.b $3A ; :
                dc.b   0
                dc.b $5C ; \
                dc.b   0
                dc.b $7E ; ~
                dc.b   0
                dc.b $A2
                dc.b   0
                dc.b $C6
                dc.b   6
                dc.b $68 ; h
                dc.b   0
                dc.b $18
                dc.b   0
                dc.b $12
                dc.b $30 ; 0
                dc.b $28 ; (
                dc.b   0
                dc.b $30 ; 0
                dc.b $B0
                dc.b $68 ; h
                dc.b   0
                dc.b  $C
                dc.b $64 ; d
                dc.b   4
                dc.b $54 ; T
                dc.b $28 ; (
                dc.b   0
                dc.b $24 ; $
                dc.b   8
                dc.b $A8
                dc.b   0
                dc.b   1
                dc.b   0
                dc.b $22 ; "
                dc.b $4A ; J
                dc.b $68 ; h
                dc.b   0
                dc.b $12
                dc.b $6A ; j
                dc.b   6
                dc.b   8
                dc.b $E8
                dc.b   0
                dc.b   1
                dc.b   0
                dc.b $22 ; "
                dc.b $4E ; N
                dc.b $75 ; u
                dc.b   8
                dc.b $E8
                dc.b   0
                dc.b   1
                dc.b   0
                dc.b $22 ; "
                dc.b $61 
                dc.b   0
                dc.b $44 ; D
                dc.b $2E ; .
                dc.b $4A ; J
                dc.b $41 
                dc.b $6A ; j
                dc.b $12
                dc.b $11
                dc.b $7C ; |
                dc.b   0
                dc.b   8
                dc.b   0
                dc.b $28 ; (
                dc.b $11
                dc.b $7C ; |
                dc.b   0
                dc.b   1
                dc.b   0
                dc.b $1C
                dc.b $31 ; 1
                dc.b $7C ; |
                dc.b   0
                dc.b   0
                dc.b   0
                dc.b $12
                dc.b $4E ; N
                dc.b $75 ; u
                dc.b   8
                dc.b $A8
                dc.b   0
                dc.b   1
                dc.b   0
                dc.b $22 ; "
                dc.b $61 
                dc.b   0
                dc.b $42 ; B
                dc.b $86
                dc.b $4A ; J
                dc.b $41 
                dc.b $6A ; j
                dc.b $12
                dc.b $11
                dc.b $7C ; |
                dc.b   0
                dc.b   8
                dc.b   0
                dc.b $28 ; (
                dc.b $11
                dc.b $7C ; |
                dc.b   0
                dc.b   1
                dc.b   0
                dc.b $1C
                dc.b $31 ; 1
                dc.b $7C ; |
                dc.b   0
                dc.b   0
                dc.b   0
                dc.b $12
                dc.b $4E ; N
                dc.b $75 ; u
                dc.b   8
                dc.b $E8
                dc.b   0
                dc.b   0
                dc.b   0
                dc.b $22 ; "
                dc.b $76 ; v
                dc.b $F8
                dc.b $61 
                dc.b   0
                dc.b $44 ; D
                dc.b $B6
                dc.b $4A ; J
                dc.b $41 
                dc.b $6A ; j
                dc.b $12
                dc.b $11
                dc.b $7C ; |
                dc.b   0
                dc.b   8
                dc.b   0
                dc.b $28 ; (
                dc.b $11
                dc.b $7C ; |
                dc.b   0
                dc.b   3
                dc.b   0
                dc.b $1C
                dc.b $31 ; 1
                dc.b $7C ; |
                dc.b   0
                dc.b   0
                dc.b   0
                dc.b $10
                dc.b $4E ; N
                dc.b $75 ; u
                dc.b   8
                dc.b $A8
                dc.b   0
                dc.b   0
                dc.b   0
                dc.b $22 ; "
                dc.b $76 ; v
                dc.b   8
                dc.b $61 
                dc.b   0
                dc.b $43 ; C
                dc.b   0
                dc.b $4A ; J
                dc.b $41 
                dc.b $6A ; j
                dc.b $12
                dc.b $11
                dc.b $7C ; |
                dc.b   0
                dc.b   8
                dc.b   0
                dc.b $28 ; (
                dc.b $11
                dc.b $7C ; |
                dc.b   0
                dc.b   3
                dc.b   0
                dc.b $1C
                dc.b $31 ; 1
                dc.b $7C ; |
                dc.b   0
                dc.b   0
                dc.b   0
                dc.b $10
                dc.b $4E ; N
                dc.b $75 ; u
                dc.b $4E ; N
                dc.b $75 ; u
; ---------------------------------------------------------------------------

entry_c3ce:
                bra.w   DeleteObject
; ---------------------------------------------------------------------------
Ani_FireBall:   dc.w entry_C3DA-Ani_FireBall
                dc.w entry_c3e0-Ani_FireBall
                dc.w entry_c3e4-Ani_FireBall
                dc.w entry_c3ea-Ani_FireBall
entry_C3DA:     dc.b 5, 0, $20, 1, $21, $FF
entry_c3e0:     dc.b 5, 2, $FC, 0
entry_c3e4:     dc.b 5, 3, $43, 4, $44, $FF
entry_c3ea:     dc.b 5, 5, $FC, 0
; ---------------------------------------------------------------------------

Obj46:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  index_c3fc(pc,d0.w),d1
                jmp     index_c3fc(pc,d1.w)
; ---------------------------------------------------------------------------
index_c3fc:     dc.w entry_C400-*
                dc.w entry_c43c-index_c3fc
; ---------------------------------------------------------------------------

entry_C400:
                addq.b  #2,$24(a0)
                move.b  #$F,$16(a0)
                move.b  #$F,$17(a0)
                move.l  #word_C522,4(a0)
                move.w  #$4000,2(a0)
                move.b  #4,1(a0)
                move.b  #3,$19(a0)
                move.b  #$10,$18(a0)
                move.w  $C(a0),$30(a0)
                move.w  #$5C0,$32(a0)

entry_c43c:
                tst.b   1(a0)
                bpl.s   loc_C46A
                moveq   #0,d0
                move.b  $28(a0),d0
                andi.w  #7,d0
                add.w   d0,d0
                move.w  index_c48e(pc,d0.w),d1
                jsr     index_c48e(pc,d1.w)
                move.w  #$1B,d1
                move.w  #$10,d2
                move.w  #$11,d3
                move.w  8(a0),d4
                bsr.w   sub_A2BC

loc_C46A:
                bsr.w   DisplaySprite
                move.w  8(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.w   DeleteObject
                rts
; ---------------------------------------------------------------------------
index_c48e:     dc.w entry_c498-index_c48e
                dc.w entry_c4b2-index_c48e
                dc.w entry_c49a-index_c48e
                dc.w entry_c4d2-index_c48e
                dc.w entry_c50e-index_c48e
; ---------------------------------------------------------------------------

entry_c498:
                rts
; ---------------------------------------------------------------------------

entry_c49a:
                move.w  ($FFFFD008).w,d0
                sub.w   8(a0),d0
                bcc.s   loc_C4A6
                neg.w   d0

loc_C4A6:
                cmpi.w  #$90,d0
                bcc.s   entry_c4b2
                move.b  #3,$28(a0)

entry_c4b2:
                moveq   #0,d0
                move.b  ($FFFFFE74).w,d0
                btst    #3,$28(a0)
                beq.s   loc_C4C6
                neg.w   d0
                addi.w  #$10,d0

loc_C4C6:
                move.w  $30(a0),d1
                sub.w   d0,d1
                move.w  d1,$C(a0)
                rts
; ---------------------------------------------------------------------------

entry_c4d2:
                bsr.w   ObjectMove
                addi.w  #$18,$12(a0)
                bsr.w   ObjectHitFloor
                tst.w   d1
                bpl.w   locret_C50C
                add.w   d1,$C(a0)
                clr.w   $12(a0)
                move.w  $C(a0),$30(a0)
                move.b  #4,$28(a0)
                move.w  (a1),d0
                andi.w  #$3FF,d0
                cmpi.w  #$2E8,d0
                bcc.s   locret_C50C
                move.b  #0,$28(a0)

locret_C50C:
                rts
; ---------------------------------------------------------------------------

entry_c50e:
                moveq   #0,d0
                move.b  ($FFFFFE70).w,d0
                lsr.w   #3,d0
                move.w  $30(a0),d1
                sub.w   d0,d1
                move.w  d1,$C(a0)
                rts
; ---------------------------------------------------------------------------
word_C522:      include "Map/Brick.asm"
; ---------------------------------------------------------------------------

ObjSYZLamp:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  ObjSYZLamp_Index(pc,d0.w),d1
                jmp     ObjSYZLamp_Index(pc,d1.w)
; ---------------------------------------------------------------------------
ObjSYZLamp_Index:dc.w entry_C53C-ObjSYZLamp_Index
                dc.w entry_c560-ObjSYZLamp_Index
; ---------------------------------------------------------------------------

entry_C53C:
                addq.b  #2,$24(a0)
                move.l  #Map_SYZLamp,4(a0)
                move.w  #0,2(a0)
                move.b  #4,1(a0)
                move.b  #$10,$18(a0)
                move.b  #6,$19(a0)

entry_c560:
                subq.b  #1,$1E(a0)
                bpl.s   loc_C57E
                move.b  #7,$1E(a0)
                addq.b  #1,$1A(a0)
                cmpi.b  #6,$1A(a0)
                bcs.s   loc_C57E
                move.b  #0,$1A(a0)

loc_C57E:
                bsr.w   DisplaySprite
                move.w  8(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.w   DeleteObject
                rts
; ---------------------------------------------------------------------------
Map_SYZLamp:    include "Map/SZLamp.asm"
; ---------------------------------------------------------------------------

ObjBumper:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  index_c5fe(pc,d0.w),d1
                jmp     index_c5fe(pc,d1.w)
; ---------------------------------------------------------------------------
index_c5fe:     dc.w entry_C602-*
                dc.w entry_c62c-index_c5fe
; ---------------------------------------------------------------------------

entry_C602:
                addq.b  #2,$24(a0)
                move.l  #unk_C6C2,4(a0)
                move.w  #$380,2(a0)
                move.b  #4,1(a0)
                move.b  #$10,$18(a0)
                move.b  #1,$19(a0)
                move.b  #$D7,$20(a0)

entry_c62c:
                tst.b   $21(a0)
                beq.s   loc_C684
                clr.b   $21(a0)
                lea     ($FFFFD000).w,a1
                move.w  8(a0),d1
                move.w  $C(a0),d2
                sub.w   8(a1),d1
                sub.w   $C(a1),d2
                jsr     (CalcAngle).l
                jsr     (CalcSine).l
                muls.w  #$F900,d1
                asr.l   #8,d1
                move.w  d1,$10(a1)
                muls.w  #$F900,d0
                asr.l   #8,d0
                move.w  d0,$12(a1)
                bset    #1,$22(a1)
                clr.b   $3C(a1)
                move.b  #1,$1C(a0)
                move.w  #$B4,d0
                jsr     (PlaySound_Special).l

loc_C684:
                lea     (unk_C6B2).l,a1
                bsr.w   AnimateObject
                bsr.w   DisplaySprite
                move.w  8(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.w   DeleteObject
                rts
; ---------------------------------------------------------------------------
unk_C6B2:       dc.b   0
                dc.b   4
                dc.b   0
                dc.b   8
                dc.b  $F
                dc.b   0
                dc.b $FF
                dc.b   0
                dc.b   3
                dc.b   1
                dc.b   2
                dc.b   1
                dc.b   2
                dc.b $FD
                dc.b   0
                dc.b   0

unk_C6C2:       include "Map/Bumper.asm"
; ---------------------------------------------------------------------------

Obj0D:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  Obj0D_Index(pc,d0.w),d1
                jsr     Obj0D_Index(pc,d1.w)
                lea     (Ani_obj0D).l,a1
                bsr.w   AnimateObject
                bsr.w   DisplaySprite
                move.w  8(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.w   DeleteObject
                rts
; ---------------------------------------------------------------------------
Obj0D_Index:dc.w Obj0D_Main-Obj0D_Index
                dc.w Obj0D_Touch-Obj0D_Index
                dc.w Obj0D_Spin-Obj0D_Index
                dc.w Obj0D_SonicRun-Obj0D_Index
; ---------------------------------------------------------------------------

Obj0D_Main:
                addq.b  #2,$24(a0)
                move.l  #Map_Obj0D,4(a0)
                move.w  #$680,2(a0)
                move.b  #4,1(a0)
                move.b  #$18,$18(a0)
                move.b  #4,$19(a0)

Obj0D_Touch:
                move.w  ($FFFFD008).w,d0
                sub.w   8(a0),d0
                bcs.s   locret_C77A
                cmpi.w  #$20,d0
                bcc.s   locret_C77A
                move.w  #$CF,d0
                jsr     (PlaySound).l
                clr.b   ($FFFFFE1E).w
                move.w  ($FFFFF72A).w,($FFFFF728).w
                addq.b  #2,$24(a0)

locret_C77A:
                rts
; ---------------------------------------------------------------------------

Obj0D_Spin:
                subq.w  #1,$30(a0)
                bpl.s   Obj0D_Sparkle
                move.w  #$3C,$30(a0) 
                addq.b  #1,$1C(a0)
                cmpi.b  #3,$1C(a0)
                bne.s   Obj0D_Sparkle
                addq.b  #2,$24(a0)

Obj0D_Sparkle:
                subq.w  #1,$32(a0)
                bpl.s   locret_C802
                move.w  #$B,$32(a0)
                moveq   #0,d0
                move.b  $34(a0),d0
                addq.b  #2,$34(a0)
                andi.b  #$E,$34(a0)
                lea     Obj0D_SparkPos(pc,d0.w),a2
                bsr.w   FindFreeObjectSlot
                bne.s   locret_C802
                move.b  #$25,0(a1)
                move.b  #6,$24(a1)
                move.b  (a2)+,d0
                ext.w   d0
                add.w   8(a0),d0
                move.w  d0,8(a1)
                move.b  (a2)+,d0
                ext.w   d0
                add.w   $C(a0),d0
                move.w  d0,$C(a1)
                move.l  #Map_Signpost_Sparkle,4(a1)
                move.w  #$27B2,2(a1)
                move.b  #4,1(a1)
                move.b  #2,$19(a1)
                move.b  #8,$18(a1)

locret_C802:
                rts
; ---------------------------------------------------------------------------
Obj0D_SparkPos: dc.b $E8, $F0
                dc.b 8, 8
                dc.b $F0, 0
                dc.b $18, $F8
                dc.b 0, $F8
                dc.b $10, 0
                dc.b $E8, 8
                dc.b $18, $10
; ---------------------------------------------------------------------------

Obj0D_SonicRun:
                tst.w   ($FFFFFE08).w
                bne.w   locret_C880

; =============== S U B R O U T I N E =======================================


sub_C81C:
                tst.b   ($FFFFD600).w
                bne.s   locret_C880
                move.w  ($FFFFF72A).w,($FFFFF728).w
                clr.b   ($FFFFFE2D).w
                clr.b   ($FFFFFE1E).w
                move.b  #$3A,($FFFFD600).w
                moveq   #$10,d0
                jsr     (LoadPLC2).l
                move.b  #1,($FFFFFE58).w
                moveq   #0,d0
                move.b  ($FFFFFE23).w,d0
                mulu.w  #$3C,d0 
                moveq   #0,d1
                move.b  ($FFFFFE24).w,d1
                add.w   d1,d0
                divu.w  #$F,d0
                moveq   #$14,d1
                cmp.w   d1,d0
                bcs.s   loc_C862
                move.w  d1,d0

loc_C862:
                add.w   d0,d0
                move.w  unk_C882(pc,d0.w),($FFFFFE54).w
                move.w  ($FFFFFE20).w,d0
                mulu.w  #$A,d0
                move.w  d0,($FFFFFE56).w
                move.w  #$8E,d0
                jsr     (PlaySound_Special).l

locret_C880:
                rts
; End of function sub_C81C

; ---------------------------------------------------------------------------
unk_C882:       dc.b $13
                dc.b $88
                dc.b   3
                dc.b $E8
                dc.b   1
                dc.b $F4
                dc.b   1
                dc.b $90
                dc.b   1
                dc.b $2C ; ,
                dc.b   1
                dc.b $2C ; ,
                dc.b   0
                dc.b $C8
                dc.b   0
                dc.b $C8
                dc.b   0
                dc.b $64 ; d
                dc.b   0
                dc.b $64 ; d
                dc.b   0
                dc.b $64 ; d
                dc.b   0
                dc.b $64 ; d
                dc.b   0
                dc.b $32 ; 2
                dc.b   0
                dc.b $32 ; 2
                dc.b   0
                dc.b $32 ; 2
                dc.b   0
                dc.b $32 ; 2
                dc.b   0
                dc.b  $A
                dc.b   0
                dc.b  $A
                dc.b   0
                dc.b  $A
                dc.b   0
                dc.b  $A
                dc.b   0
                dc.b   0
                
Ani_obj0D:      dc.w code_C8B4-Ani_obj0D
                dc.w code_c8b8-Ani_obj0D
                dc.w code_c8be-Ani_obj0D
                dc.w code_c8c4-Ani_obj0D
code_C8B4:      dc.b $F, 0, $FF, 0
code_c8b8:      dc.b 1, 0, 1, 2, 3, $FF
code_c8be:      dc.b 1, 4, 1, 2, 3, $FF
code_c8c4:      dc.b $F, 4, $FF, 0

Map_Obj0D:      include "Map/Signpost.asm"
; ---------------------------------------------------------------------------

Obj4C:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  index_c926(pc,d0.w),d1
                jsr     index_c926(pc,d1.w)
                bra.w   loc_CB28
; ---------------------------------------------------------------------------
index_c926:     dc.w entry_c932-index_c926
                dc.w entry_c95c-index_c926
                dc.w entry_c9ce-index_c926
                dc.w entry_c982-index_c926
                dc.w entry_c9da-index_c926
                dc.w entry_c9ea-index_c926
; ---------------------------------------------------------------------------

entry_c932:
                addq.b  #2,$24(a0)
                move.l  #unk_CE24,4(a0)
                move.w  #$E3A8,2(a0)
                move.b  #4,1(a0)
                move.b  #1,$19(a0)
                move.b  #$38,$18(a0) 
                move.w  #$78,$34(a0) 

entry_c95c:
                subq.w  #1,$32(a0)
                bpl.s   locret_C980
                move.w  $34(a0),$32(a0)
                move.w  ($FFFFD00C).w,d0
                move.w  $C(a0),d1
                cmp.w   d1,d0
                bcc.s   locret_C980
                subi.w  #$170,d1
                cmp.w   d1,d0
                bcs.s   locret_C980
                addq.b  #2,$24(a0)

locret_C980:
                rts
; ---------------------------------------------------------------------------

entry_c982:
                addq.b  #2,$24(a0)
                bsr.w   FindFreeObjectSlot2
                bne.s   loc_C9A8
                move.b  #$4D,0(a1) 
                move.w  8(a0),8(a1)
                move.w  $C(a0),$C(a1)
                move.b  $28(a0),$28(a1)
                move.l  a0,$3C(a1)

loc_C9A8:
                move.b  #1,$1C(a0)
                tst.b   $28(a0)
                beq.s   loc_C9BC
                move.b  #4,$1C(a0)
                bra.s   entry_c9da
; ---------------------------------------------------------------------------

loc_C9BC:
                movea.l $3C(a0),a1
                bset    #1,$22(a1)
                move.w  #$FA80,$12(a1)
                bra.s   entry_c9da
; ---------------------------------------------------------------------------

entry_c9ce:
                tst.b   $28(a0)
                beq.s   entry_c9da
                addq.b  #2,$24(a0)
                rts
; ---------------------------------------------------------------------------

entry_c9da:
                lea     (unk_CDEE).l,a1
                bsr.w   AnimateObject
                bsr.w   DisplaySprite
                rts
; ---------------------------------------------------------------------------

entry_c9ea:
                move.b  #0,$1C(a0)
                move.b  #2,$24(a0)
                tst.b   $28(a0)
                beq.w   DeleteObject
                rts

; =============== S U B R O U T I N E =======================================


Obj4D:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  index_ca12(pc,d0.w),d1
                jsr     index_ca12(pc,d1.w)
                bra.w   DisplaySprite
; End of function Obj4D

; ---------------------------------------------------------------------------
index_ca12:     dc.w entry_ca1e-index_ca12
                dc.w entry_cb0a-index_ca12
                dc.w entry_cb8c-index_ca12
                dc.w entry_cbea-index_ca12
word_CA1A:      dc.w $FB00
                dc.w 0
; ---------------------------------------------------------------------------

entry_ca1e:
                addq.b  #2,$24(a0)
                move.w  $C(a0),$30(a0)
                tst.b   $28(a0)
                beq.s   loc_CA34
                subi.w  #$250,$C(a0)

loc_CA34:
                moveq   #0,d0
                move.b  $28(a0),d0
                add.w   d0,d0
                move.w  word_CA1A(pc,d0.w),$12(a0)
                movea.l a0,a1
                moveq   #1,d1
                bsr.s   sub_CA50
                bra.s   loc_CAA0

; =============== S U B R O U T I N E =======================================


sub_CA4A:
                bsr.w   FindFreeObjectSlot2
                bne.s   loc_CA9A
; End of function sub_CA4A


; =============== S U B R O U T I N E =======================================


sub_CA50:
                move.b  #$4D,0(a1)
                move.l  #unk_CE24,4(a1)
                move.w  #$63A8,2(a1)
                move.b  #4,1(a1)
                move.b  #$20,$18(a1) 
                move.w  8(a0),8(a1)
                move.w  $C(a0),$C(a1)
                move.b  $28(a0),$28(a1)
                move.b  #1,$19(a1)
                move.b  #5,$1C(a1)
                tst.b   $28(a0)
                beq.s   loc_CA9A
                move.b  #2,$1C(a1)

loc_CA9A:
                dbf     d1,sub_CA4A
                rts
; End of function sub_CA50

; ---------------------------------------------------------------------------

loc_CAA0:
                addi.w  #$60,$C(a1) 
                move.w  $30(a0),$30(a1)
                addi.w  #$60,$30(a1) 
                move.b  #$93,$20(a1)
                move.b  #$80,$16(a1)
                bset    #4,1(a1)
                addq.b  #4,$24(a1)
                move.l  a0,$3C(a1)
                tst.b   $28(a0)
                beq.s   loc_CB00
                moveq   #0,d1
                bsr.w   sub_CA4A
                addq.b  #2,$24(a1)
                bset    #4,2(a1)
                addi.w  #$100,$C(a1)
                move.b  #0,$19(a1)
                move.w  $30(a0),$30(a1)
                move.l  $3C(a0),$3C(a1)
                move.b  #0,$28(a0)

loc_CB00:
                move.w  #$C8,d0
                jsr     (PlaySound_Special).l

entry_cb0a:
                moveq   #0,d0
                move.b  $28(a0),d0
                add.w   d0,d0
                move.w  index_cb48(pc,d0.w),d1
                jsr     index_cb48(pc,d1.w)
                bsr.w   ObjectMove
                lea     (unk_CDEE).l,a1
                bsr.w   AnimateObject

loc_CB28:
                move.w  8(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.w   DeleteObject
                rts
; ---------------------------------------------------------------------------
index_cb48:     dc.w entry_CB4C-*
                dc.w entry_cb6c-index_cb48
; ---------------------------------------------------------------------------

entry_CB4C:
                addi.w  #$18,$12(a0)
                move.w  $30(a0),d0
                cmp.w   $C(a0),d0
                bcc.s   locret_CB6A
                addq.b  #4,$24(a0)
                movea.l $3C(a0),a1
                move.b  #3,$1C(a1)

locret_CB6A:
                rts
; ---------------------------------------------------------------------------

entry_cb6c:
                addi.w  #$18,$12(a0)
                move.w  $30(a0),d0
                cmp.w   $C(a0),d0
                bcc.s   locret_CB8A
                addq.b  #4,$24(a0)
                movea.l $3C(a0),a1
                move.b  #1,$1C(a1)

locret_CB8A:
                rts
; ---------------------------------------------------------------------------

entry_cb8c:
                movea.l $3C(a0),a1
                cmpi.b  #6,$24(a1)
                beq.w   entry_cbea
                move.w  $C(a1),d0
                addi.w  #$60,d0 
                move.w  d0,$C(a0)
                sub.w   $30(a0),d0
                neg.w   d0
                moveq   #8,d1
                cmpi.w  #$40,d0 
                bge.s   loc_CBB6
                moveq   #$B,d1

loc_CBB6:
                cmpi.w  #$80,d0
                ble.s   loc_CBBE
                moveq   #$E,d1

loc_CBBE:
                subq.b  #1,$1E(a0)
                bpl.s   loc_CBDC
                move.b  #7,$1E(a0)
                addq.b  #1,$1B(a0)
                cmpi.b  #2,$1B(a0)
                bcs.s   loc_CBDC
                move.b  #0,$1B(a0)

loc_CBDC:
                move.b  $1B(a0),d0
                add.b   d1,d0
                move.b  d0,$1A(a0)
                bra.w   loc_CB28
; ---------------------------------------------------------------------------

entry_cbea:
                bra.w   DeleteObject
; ---------------------------------------------------------------------------

ObjMZLavaWall:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  index_cbfc(pc,d0.w),d1
                jmp     index_cbfc(pc,d1.w)
; ---------------------------------------------------------------------------
index_cbfc:     dc.w entry_cc06-index_cbfc
                dc.w entry_cc66-index_cbfc
                dc.w entry_cca2-index_cbfc
                dc.w entry_cd00-index_cbfc
                dc.w entry_cd1c-index_cbfc
; ---------------------------------------------------------------------------

entry_cc06:
                addq.b  #2,$24(a0)
                movea.l a0,a1
                moveq   #1,d1
                bra.s   loc_CC16
; ---------------------------------------------------------------------------

loc_CC10:
                bsr.w   FindFreeObjectSlot2
                bne.s   loc_CC58

loc_CC16:
                move.b  #$4E,0(a1) 
                move.l  #unk_D108,4(a1)
                move.w  #$63A8,2(a1)
                move.b  #4,1(a1)
                move.b  #$50,$18(a1) 
                move.w  8(a0),8(a1)
                move.w  $C(a0),$C(a1)
                move.b  #1,$19(a1)
                move.b  #0,$1C(a1)
                move.b  #$94,$20(a1)
                move.l  a0,$3C(a1)

loc_CC58:
                dbf     d1,loc_CC10
                addq.b  #6,$24(a1)
                move.b  #4,$1A(a1)

entry_cc66:
                move.w  ($FFFFD008).w,d0
                sub.w   8(a0),d0
                bcc.s   loc_CC72
                neg.w   d0

loc_CC72:
                cmpi.w  #$E0,d0
                bcc.s   loc_CC92
                move.w  ($FFFFD00C).w,d0
                sub.w   $C(a0),d0
                bcc.s   loc_CC84
                neg.w   d0

loc_CC84:
                cmpi.w  #$60,d0 
                bcc.s   loc_CC92
                move.b  #1,$36(a0)
                bra.s   entry_cca2
; ---------------------------------------------------------------------------

loc_CC92:
                tst.b   $36(a0)
                beq.s   entry_cca2
                move.w  #$100,$10(a0)
                addq.b  #2,$24(a0)

entry_cca2:
                cmpi.w  #$6A0,8(a0)
                bne.s   loc_CCB2
                clr.w   $10(a0)
                clr.b   $36(a0)

loc_CCB2:
                lea     (unk_CE1C).l,a1
                bsr.w   AnimateObject
                bsr.w   ObjectMove
                bsr.w   DisplaySprite
                tst.b   $36(a0)
                bne.s   locret_CCE6
                move.w  8(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.s   loc_CCE8

locret_CCE6:
                rts
; ---------------------------------------------------------------------------

loc_CCE8:
                lea     ($FFFFFC00).w,a2
                moveq   #0,d0
                move.b  $23(a0),d0
                bclr    #7,2(a2,d0.w)
                move.b  #8,$24(a0)
                rts
; ---------------------------------------------------------------------------

entry_cd00:
                movea.l $3C(a0),a1
                cmpi.b  #8,$24(a1)
                beq.s   entry_cd1c
                move.w  8(a1),8(a0)
                subi.w  #$80,8(a0)
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------

entry_cd1c:
                bra.w   DeleteObject
; ---------------------------------------------------------------------------

Obj54:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  index_cd2e(pc,d0.w),d1
                jmp     index_cd2e(pc,d1.w)
; ---------------------------------------------------------------------------
index_cd2e:     dc.w entry_CD36-*
                dc.w entry_cd6c-index_cd2e
byte_CD32:      dc.b $96
                dc.b $94
                dc.b $95
                dc.b   0
; ---------------------------------------------------------------------------

entry_CD36:
                addq.b  #2,$24(a0)
                moveq   #0,d0
                move.b  $28(a0),d0
                move.b  byte_CD32(pc,d0.w),$20(a0)
                move.l  #unk_CDA8,4(a0)
                move.w  #$8680,2(a0)
                move.b  #4,1(a0)
                move.b  #$80,$18(a0)
                move.b  #4,$19(a0)
                move.b  $28(a0),$1A(a0)

entry_cd6c:
                tst.w   ($FFFFFE08).w
                beq.s   loc_CD76
                bsr.w   DisplaySprite

loc_CD76:
                cmpi.b  #6,($FFFFD024).w
                bcc.s   loc_CD84
                bset    #7,1(a0)

loc_CD84:
                move.w  8(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                bmi.w   DeleteObject
                cmpi.w  #$280,d0
                bhi.w   DeleteObject
                rts
; ---------------------------------------------------------------------------
unk_CDA8:       dc.b   0
                dc.b   6
                dc.b   0
                dc.b $1B
                dc.b   0
                dc.b $30 ; 0
                dc.b   4
                dc.b $E0
                dc.b   5
                dc.b   0
                dc.b $18
                dc.b $E0
                dc.b $E0
                dc.b   5
                dc.b   0
                dc.b $18
                dc.b $10
                dc.b $10
                dc.b   5
                dc.b   0
                dc.b $18
                dc.b $E0
                dc.b $10
                dc.b   5
                dc.b   0
                dc.b $18
                dc.b $10
                dc.b   4
                dc.b $E0
                dc.b   5
                dc.b   0
                dc.b $18
                dc.b $C0
                dc.b $E0
                dc.b   5
                dc.b   0
                dc.b $18
                dc.b $30 ; 0
                dc.b $10
                dc.b   5
                dc.b   0
                dc.b $18
                dc.b $C0
                dc.b $10
                dc.b   5
                dc.b   0
                dc.b $18
                dc.b $30 ; 0
                dc.b   4
                dc.b $E0
                dc.b   5
                dc.b   0
                dc.b $18
                dc.b $80
                dc.b $E0
                dc.b   5
                dc.b   0
                dc.b $18
                dc.b $70 ; p
                dc.b $10
                dc.b   5
                dc.b   0
                dc.b $18
                dc.b $80
                dc.b $10
                dc.b   5
                dc.b   0
                dc.b $18
                dc.b $70 ; p
                dc.b   0
unk_CDEE:       dc.b   0
                dc.b  $C
                dc.b   0
                dc.b $16
                dc.b   0
                dc.b $1A
                dc.b   0
                dc.b $1E
                dc.b   0
                dc.b $26 ; &
                dc.b   0
                dc.b $2A 
                dc.b   2
                dc.b   0
                dc.b   1
                dc.b   0
                dc.b   1
                dc.b   4
                dc.b   5
                dc.b   4
                dc.b   5
                dc.b $FC
                dc.b   2
                dc.b   2
                dc.b   3
                dc.b $FF
                dc.b   2
                dc.b   6
                dc.b   7
                dc.b $FF
                dc.b   2
                dc.b   2
                dc.b   3
                dc.b   0
                dc.b   1
                dc.b   0
                dc.b   1
                dc.b $FC
                dc.b  $F
                dc.b $13
                dc.b $FF
                dc.b   0
                dc.b   2
                dc.b $11
                dc.b $12
                dc.b $FF
unk_CE1C:       dc.b   0
                dc.b   2
                dc.b   9
                dc.b   0
                dc.b   1
                dc.b   2
                dc.b   3
                dc.b $FF

unk_CE24:       include "Map/LavaGeyser.asm"

unk_D108:       include "Map/MZLavaWall.asm"
; ---------------------------------------------------------------------------

ObjSplats:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  ObjSplats_Index(pc,d0.w),d1
                jmp     ObjSplats_Index(pc,d1.w)
; ---------------------------------------------------------------------------
ObjSplats_Index:dc.w ObjSplats_Init-*
                dc.w loc_D246-ObjSplats_Index
                dc.w ObjSplats_Bounce-ObjSplats_Index
                dc.w loc_D2C8-ObjSplats_Index
; ---------------------------------------------------------------------------

ObjSplats_Init:
                addq.b  #2,$24(a0)
                move.l  #Map_Splats,4(a0)
                move.w  #$24E4,2(a0)
                move.b  #4,1(a0)
                move.b  #4,$19(a0)
                move.b  #$C,$18(a0)
                move.b  #$14,$16(a0)
                move.b  #2,$20(a0)
                tst.b   $28(a0)
                beq.s   loc_D246
                move.w  #$300,d2
                bra.s   ObjSplats_FaceRight
; ---------------------------------------------------------------------------

loc_D246:
                move.w  #$E0,d2

ObjSplats_FaceRight:
                move.w  #$100,d1
                bset    #0,1(a0)
                move.w  ($FFFFD008).w,d0
                sub.w   8(a0),d0
                bcc.s   ObjSplats_Move
                neg.w   d0
                neg.w   d1
                bclr    #0,1(a0)

ObjSplats_Move:
                cmp.w   d2,d0
                bcc.s   ObjSplats_Bounce
                move.w  d1,$10(a0)
                addq.b  #2,$24(a0)

ObjSplats_Bounce:
                bsr.w   ObjectMoveAndFall
                move.b  #1,$1A(a0)
                tst.w   $12(a0)
                bmi.s   ObjSplats_Turn
                move.b  #0,$1A(a0)
                bsr.w   ObjectHitFloor
                tst.w   d1
                bpl.s   ObjSplats_Turn
                move.w  (a1),d0
                andi.w  #$3FF,d0
                cmpi.w  #$2D2,d0
                bcs.s   ObjSplats_Fall
                addq.b  #2,$24(a0)
                bra.s   ObjSplats_Turn
; ---------------------------------------------------------------------------

ObjSplats_Fall:
                add.w   d1,$C(a0)
                move.w  #$FC00,$12(a0)

ObjSplats_Turn:
                bsr.w   ObjSplatsandYadrin_ChkWall
                beq.s   loc_D2C4
                neg.w   $10(a0)
                bchg    #0,1(a0)
                bchg    #0,$22(a0)

loc_D2C4:
                bra.w   MarkObjectGone
; ---------------------------------------------------------------------------

loc_D2C8:
                bsr.w   ObjectMoveAndFall
                bsr.w   DisplaySprite
                tst.b   1(a0)
                bpl.w   DeleteObject
                rts

; =============== S U B R O U T I N E =======================================


ObjSplatsandYadrin_ChkWall:
                move.w  ($FFFFFE04).w,d0
                add.w   d7,d0
                andi.w  #3,d0
                bne.s   loc_D308
                moveq   #0,d3
                move.b  $18(a0),d3
                tst.w   $10(a0)
                bmi.s   loc_D2FE
                bsr.w   sub_106B2
                tst.w   d1
                bpl.s   loc_D308

loc_D2FA:
                moveq   #1,d0
                rts
; ---------------------------------------------------------------------------

loc_D2FE:
                not.w   d3
                bsr.w   sub_10844
                tst.w   d1
                bmi.s   loc_D2FA

loc_D308:
                moveq   #0,d0
                rts
; End of function ObjSplatsandYadrin_ChkWall

; ---------------------------------------------------------------------------
Map_Splats:     include "Map/Splats.asm"
; ---------------------------------------------------------------------------

ObjYadrin:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  ObjYadrin_Index(pc,d0.w),d1
                jmp     ObjYadrin_Index(pc,d1.w)
; ---------------------------------------------------------------------------
ObjYadrin_Index:dc.w ObjYadrin_Init-*
                dc.w ObjYadrin_Actions-ObjYadrin_Index
; ---------------------------------------------------------------------------

ObjYadrin_Init:
                move.l  #Map_Yadrin,4(a0)
                move.w  #$247B,2(a0)
                move.b  #4,1(a0)
                move.b  #4,$19(a0)
                move.b  #$14,$18(a0)
                move.b  #$11,$16(a0)
                move.b  #8,$17(a0)
                move.b  #$CC,$20(a0)
                bsr.w   ObjectMoveAndFall
                bsr.w   ObjectHitFloor
                tst.w   d1
                bpl.s   ObjYadrin_Return
                add.w   d1,$C(a0)
                move.w  #0,$12(a0)
                addq.b  #2,$24(a0)
                bchg    #0,$22(a0)

ObjYadrin_Return:
                rts
; ---------------------------------------------------------------------------

ObjYadrin_Actions:
                moveq   #0,d0
                move.b  $25(a0),d0
                move.w  ObjYadrin_ActionIndex(pc,d0.w),d1
                jsr     ObjYadrin_ActionIndex(pc,d1.w)
                lea     (Anim_Yadrin).l,a1
                bsr.w   AnimateObject
                bra.w   MarkObjectGone
; ---------------------------------------------------------------------------
ObjYadrin_ActionIndex:dc.w ObjYadrin_Move-*
                dc.w ObjYadrin_Floor-ObjYadrin_ActionIndex
; ---------------------------------------------------------------------------

ObjYadrin_Move:
                subq.w  #1,$30(a0)
                bpl.s   ObjYadrin_Move_Return
                addq.b  #2,$25(a0)
                move.w  #$FF00,$10(a0)
                move.b  #1,$1C(a0)
                bchg    #0,$22(a0)
                bne.s   ObjYadrin_Move_Return
                neg.w   $10(a0)

ObjYadrin_Move_Return:
                rts
; ---------------------------------------------------------------------------

ObjYadrin_Floor:
                bsr.w   ObjectMove
                bsr.w   ObjectHitFloor
                cmpi.w  #$FFF8,d1
                blt.s   ObjYadrin_Stop
                cmpi.w  #$C,d1
                bge.s   ObjYadrin_Stop
                add.w   d1,$C(a0)
                bsr.w   ObjSplatsandYadrin_ChkWall
                bne.s   ObjYadrin_Stop
                rts
; ---------------------------------------------------------------------------

ObjYadrin_Stop:
                subq.b  #2,$25(a0)
                move.w  #$3B,$30(a0) 
                move.w  #0,$10(a0)
                move.b  #0,$1C(a0)
                rts
; ---------------------------------------------------------------------------
Anim_Yadrin:    dc.w byte_D40C-*
                dc.w byte_D410-Anim_Yadrin
byte_D40C:      dc.b 7, 0, $FF, 0
byte_D410:      dc.b 7, 0, 3, 1, 4, 0, 3, 2, 5, $FF

Map_Yadrin:     include "Map/Yadrin.asm"
; ---------------------------------------------------------------------------

Obj51:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  index_d4d4(pc,d0.w),d1
                jsr     index_d4d4(pc,d1.w)
                bra.w   MarkObjectGone
; ---------------------------------------------------------------------------
index_d4d4:     dc.w entry_D4DA-*
                dc.w entry_d504-index_d4d4
                dc.w entry_d580-index_d4d4
; ---------------------------------------------------------------------------

entry_D4DA:
                addq.b  #2,$24(a0)
                move.l  #unk_D5A8,4(a0)
                move.w  #$42B8,2(a0)
                move.b  #4,1(a0)
                move.b  #$10,$18(a0)
                move.b  #4,$19(a0)
                move.b  $28(a0),$1A(a0)

entry_d504:
                move.b  ($FFFFD01C).w,$32(a0)
                move.w  #$1B,d1
                move.w  #$10,d2
                move.w  #$11,d3
                move.w  8(a0),d4
                bsr.w   sub_A2BC
                btst    #3,$22(a0)
                bne.s   loc_D528

locret_D526:
                rts
; ---------------------------------------------------------------------------

loc_D528:
                cmpi.b  #2,$32(a0)
                bne.s   locret_D526
                bset    #2,$22(a1)
                move.b  #$E,$16(a1)
                move.b  #7,$17(a1)
                move.b  #2,$1C(a1)
                move.w  #$FD00,$12(a1)
                bset    #1,$22(a1)
                bclr    #3,$22(a1)
                move.b  #2,$24(a1)
                bclr    #3,$22(a0)
                clr.b   $25(a0)
                move.b  #1,$1A(a0)
                lea     (unk_D598).l,a4
                moveq   #3,d1
                move.w  #$38,d2 
                bsr.w   sub_AEAA

entry_d580:
                bsr.w   ObjectMove
                addi.w  #$38,$12(a0) 
                bsr.w   DisplaySprite
                tst.b   1(a0)
                bpl.w   DeleteObject
                rts
; ---------------------------------------------------------------------------
unk_D598:       dc.b $FE
                dc.b   0
                dc.b $FE
                dc.b   0
                dc.b $FF
                dc.b   0
                dc.b $FF
                dc.b   0
                dc.b   2
                dc.b   0
                dc.b $FE
                dc.b   0
                dc.b   1
                dc.b   0
                dc.b $FF
                dc.b   0
unk_D5A8:       dc.b   0
                dc.b   4
                dc.b   0
                dc.b  $F
                dc.b   2
                dc.b $F0
                dc.b  $D
                dc.b   0
                dc.b   0
                dc.b $F0
                dc.b   0
                dc.b  $D
                dc.b   0
                dc.b   0
                dc.b $F0
                dc.b   4
                dc.b $F0
                dc.b   5
                dc.b $80
                dc.b   0
                dc.b $F0
                dc.b   0
                dc.b   5
                dc.b $80
                dc.b   0
                dc.b $F0
                dc.b $F0
                dc.b   5
                dc.b $80
                dc.b   0
                dc.b   0
                dc.b   0
                dc.b   5
                dc.b $80
                dc.b   0
                dc.b   0
; ---------------------------------------------------------------------------

Obj52:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  index_d5fc(pc,d0.w),d1
                jsr     index_d5fc(pc,d1.w)
                move.w  $32(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.w   DeleteObject
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------
index_d5fc:     dc.w entry_d606-index_d5fc
                dc.w entry_d648-index_d5fc
                dc.w entry_d658-index_d5fc
byte_D602:      dc.b $10, 0
                dc.b $20, 1
; ---------------------------------------------------------------------------

entry_d606:
                addq.b  #2,$24(a0)
                move.l  #unk_D6E0,4(a0)
                move.w  #$42B8,2(a0)
                move.b  #4,1(a0)
                moveq   #0,d0
                move.b  $28(a0),d0
                lsr.w   #3,d0
                andi.w  #$1E,d0
                lea     byte_D602(pc,d0.w),a2
                move.b  (a2)+,$18(a0)
                move.b  (a2)+,$1A(a0)
                move.b  #4,$19(a0)
                move.w  8(a0),$32(a0)
                move.w  $C(a0),$30(a0)

entry_d648:
                moveq   #0,d1
                move.b  $18(a0),d1
                jsr     (loc_4F7A).l
                bra.w   sub_D674
; ---------------------------------------------------------------------------

entry_d658:
                moveq   #0,d1
                move.b  $18(a0),d1
                jsr     (ExitPlatform).l
                move.w  8(a0),-(sp)
                bsr.w   sub_D674
                move.w  (sp)+,d2
                jmp     (loc_561A).l

; =============== S U B R O U T I N E =======================================


sub_D674:
                moveq   #0,d0
                move.b  $28(a0),d0
                andi.w  #$F,d0
                add.w   d0,d0
                move.w  index_d688(pc,d0.w),d1
                jmp     index_d688(pc,d1.w)
; End of function sub_D674

; ---------------------------------------------------------------------------
index_d688:     dc.w entry_D690-*
                dc.w entry_d692-index_d688
                dc.w entry_d6b2-index_d688
                dc.w entry_d6c0-index_d688
; ---------------------------------------------------------------------------

entry_D690:
                rts
; ---------------------------------------------------------------------------

entry_d692:
                move.b  ($FFFFFE6C).w,d0
                subi.b  #$60,d1 
                btst    #0,$22(a0)
                beq.s   loc_D6A6
                neg.w   d0
                add.w   d1,d0

loc_D6A6:
                move.w  $32(a0),d1
                sub.w   d0,d1
                move.w  d1,8(a0)
                rts
; ---------------------------------------------------------------------------

entry_d6b2:
                cmpi.b  #4,$24(a0)
                bne.s   locret_D6BE
                addq.b  #1,$28(a0)

locret_D6BE:
                rts
; ---------------------------------------------------------------------------

entry_d6c0:
                moveq   #0,d3
                move.b  $18(a0),d3
                bsr.w   sub_106B2
                tst.w   d1
                bmi.s   loc_D6DA
                addq.w  #1,8(a0)
                move.w  8(a0),$32(a0)
                rts
; ---------------------------------------------------------------------------

loc_D6DA:
                clr.b   $28(a0)
                rts
; ---------------------------------------------------------------------------
unk_D6E0:       include "Map/MZBlock.asm"
; ---------------------------------------------------------------------------

Obj55:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  index_d704(pc,d0.w),d1
                jmp     index_d704(pc,d1.w)
; ---------------------------------------------------------------------------
index_d704:     dc.w entry_D708-*
                dc.w entry_d738-index_d704
; ---------------------------------------------------------------------------

entry_D708:
                addq.b  #2,$24(a0)
                move.l  #unk_D88C,4(a0)
                move.w  #$84B8,2(a0)
                move.b  #4,1(a0)
                move.b  #$C,$16(a0)
                move.b  #2,$19(a0)
                move.b  #$B,$20(a0)
                move.b  #$10,$18(a0)

entry_d738:
                moveq   #0,d0
                move.b  $25(a0),d0
                move.w  index_d754(pc,d0.w),d1
                jsr     index_d754(pc,d1.w)
                lea     (unk_D878).l,a1
                bsr.w   AnimateObject
                bra.w   MarkObjectGone
; ---------------------------------------------------------------------------
index_d754:     dc.w entry_D75C-*
                dc.w entry_d798-index_d754
                dc.w entry_d7da-index_d754
                dc.w entry_d816-index_d754
; ---------------------------------------------------------------------------

entry_D75C:
                move.w  #$80,d2
                bsr.w   sub_D844
                bcc.s   locret_D796
                move.w  ($FFFFD00C).w,d0
                move.w  d0,$36(a0)
                sub.w   $C(a0),d0
                bcs.s   locret_D796
                cmpi.w  #$80,d0
                bcc.s   locret_D796
                tst.w   ($FFFFFE08).w
                bne.s   locret_D796
                move.b  ($FFFFFE0F).w,d0
                add.b   d7,d0
                andi.b  #7,d0
                bne.s   locret_D796
                move.b  #1,$1C(a0)
                addq.b  #2,$25(a0)

locret_D796:
                rts
; ---------------------------------------------------------------------------

entry_d798:
                bsr.w   ObjectMove
                addi.w  #$18,$12(a0)
                move.w  #$80,d2
                bsr.w   sub_D844
                move.w  $36(a0),d0
                sub.w   $C(a0),d0
                bcs.s   loc_D7D0
                cmpi.w  #$10,d0
                bcc.s   locret_D7CE
                move.w  d1,$10(a0)
                move.w  #0,$12(a0)
                move.b  #2,$1C(a0)
                addq.b  #2,$25(a0)

locret_D7CE:
                rts
; ---------------------------------------------------------------------------

loc_D7D0:
                tst.b   1(a0)
                bpl.w   DeleteObject
                rts
; ---------------------------------------------------------------------------

entry_d7da:
                move.b  ($FFFFFE0F).w,d0
                andi.b  #$F,d0
                bne.s   loc_D7EE
                move.w  #$C0,d0
                jsr     (PlaySound_Special).l

loc_D7EE:
                bsr.w   ObjectMove
                move.w  ($FFFFD008).w,d0
                sub.w   8(a0),d0
                bcc.s   loc_D7FE
                neg.w   d0

loc_D7FE:
                cmpi.w  #$80,d0
                bcs.s   locret_D814
                move.b  ($FFFFFE0F).w,d0
                add.b   d7,d0
                andi.b  #7,d0
                bne.s   locret_D814
                addq.b  #2,$25(a0)

locret_D814:
                rts
; ---------------------------------------------------------------------------

entry_d816:
                bsr.w   ObjectMove
                subi.w  #$18,$12(a0)
                bsr.w   sub_10776
                tst.w   d1
                bpl.s   locret_D842
                sub.w   d1,$C(a0)
                andi.w  #$FFF8,8(a0)
                clr.w   $10(a0)
                clr.w   $12(a0)
                clr.b   $1C(a0)
                clr.b   $25(a0)

locret_D842:
                rts

; =============== S U B R O U T I N E =======================================


sub_D844:
                move.w  #$100,d1
                bset    #0,$22(a0)
                move.w  ($FFFFD008).w,d0
                sub.w   8(a0),d0
                bcc.s   loc_D862
                neg.w   d0
                neg.w   d1
                bclr    #0,$22(a0)

loc_D862:
                cmp.w   d2,d0
                rts
; End of function sub_D844

; ---------------------------------------------------------------------------
                bsr.w   ObjectMove
                bsr.w   DisplaySprite
                tst.b   1(a0)
                bpl.w   DeleteObject
                rts
; ---------------------------------------------------------------------------
unk_D878:       dc.b   0
                dc.b   6
                dc.b   0
                dc.b  $A
                dc.b   0
                dc.b  $E
                dc.b  $F
                dc.b   0
                dc.b $FF
                dc.b   0
                dc.b  $F
                dc.b   1
                dc.b $FF
                dc.b   0
                dc.b   3
                dc.b   1
                dc.b   2
                dc.b   3
                dc.b   2
                dc.b $FF

unk_D88C:       include "Map/BatBrain.asm"
; ---------------------------------------------------------------------------

Obj56:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  index_d8e2(pc,d0.w),d1
                jmp     index_d8e2(pc,d1.w)
; ---------------------------------------------------------------------------
index_d8e2:     dc.w entry_d8f2-index_d8e2
                dc.w entry_d9ac-index_d8e2
byte_D8E6:      dc.b $10, $10, $20
                dc.b $20, $10, $20
                dc.b $20, $1A, $10
                dc.b $27, $10, $10
; ---------------------------------------------------------------------------

entry_d8f2:
                addq.b  #2,$24(a0)
                move.l  #unk_DC1C,4(a0)
                move.w  #$4000,2(a0)
                cmpi.b  #3,($FFFFFE10).w
                bne.s   loc_D912
                move.w  #$4480,2(a0)

loc_D912:
                move.b  #4,1(a0)
                move.b  #3,$19(a0)
                moveq   #0,d0
                move.b  $28(a0),d0
                lsr.w   #3,d0
                andi.w  #$E,d0
                lea     byte_D8E6(pc,d0.w),a2
                move.b  (a2)+,$18(a0)
                move.b  (a2),$16(a0)
                lsr.w   #1,d0
                move.b  d0,$1A(a0)
                move.w  8(a0),$34(a0)
                move.w  $C(a0),$30(a0)
                moveq   #0,d0
                move.b  (a2),d0
                add.w   d0,d0
                move.w  d0,$3A(a0)
                moveq   #0,d0
                move.b  $28(a0),d0
                andi.w  #$F,d0
                subq.w  #8,d0
                bcs.s   loc_D974
                lsl.w   #2,d0
                lea     ($FFFFFE8A).w,a2
                lea     (a2,d0.w),a2
                tst.w   (a2)
                bpl.s   loc_D974
                bchg    #0,$22(a0)

loc_D974:
                move.b  $28(a0),d0
                bpl.s   entry_d9ac
                andi.b  #$F,d0
                move.b  d0,$3C(a0)
                move.b  #5,$28(a0)
                lea     ($FFFFFC00).w,a2
                moveq   #0,d0
                move.b  $23(a0),d0
                beq.s   entry_d9ac
                bclr    #7,2(a2,d0.w)
                btst    #0,2(a2,d0.w)
                beq.s   entry_d9ac
                move.b  #6,$28(a0)
                clr.w   $3A(a0)

entry_d9ac:
                move.w  8(a0),-(sp)
                moveq   #0,d0
                move.b  $28(a0),d0
                andi.w  #$F,d0
                add.w   d0,d0
                move.w  index_da08(pc,d0.w),d1
                jsr     index_da08(pc,d1.w)
                move.w  (sp)+,d4
                tst.b   1(a0)
                bpl.s   loc_D9E4
                moveq   #0,d1
                move.b  $18(a0),d1
                addi.w  #$B,d1
                moveq   #0,d2
                move.b  $16(a0),d2
                move.w  d2,d3
                addq.w  #1,d3
                bsr.w   sub_A2BC

loc_D9E4:
                bsr.w   DisplaySprite
                move.w  $34(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.w   DeleteObject
                rts
; ---------------------------------------------------------------------------
index_da08:     dc.w entry_da20-index_da08
                dc.w entry_da22-index_da08
                dc.w entry_da2e-index_da08
                dc.w entry_da50-index_da08
                dc.w entry_da5c-index_da08
                dc.w entry_da7c-index_da08
                dc.w entry_dad0-index_da08
                dc.w entry_db2a-index_da08
                dc.w entry_db5c-index_da08
                dc.w entry_db6e-index_da08
                dc.w entry_db7e-index_da08
                dc.w entry_db8e-index_da08
; ---------------------------------------------------------------------------

entry_da20:
                rts
; ---------------------------------------------------------------------------

entry_da22:
                move.w  #$40,d1 
                moveq   #0,d0
                move.b  ($FFFFFE68).w,d0
                bra.s   loc_DA38
; ---------------------------------------------------------------------------

entry_da2e:
                move.w  #$80,d1
                moveq   #0,d0
                move.b  ($FFFFFE7C).w,d0

loc_DA38:
                btst    #0,$22(a0)
                beq.s   loc_DA44
                neg.w   d0
                add.w   d1,d0

loc_DA44:
                move.w  $34(a0),d1
                sub.w   d0,d1
                move.w  d1,8(a0)
                rts
; ---------------------------------------------------------------------------

entry_da50:
                move.w  #$40,d1 
                moveq   #0,d0
                move.b  ($FFFFFE68).w,d0
                bra.s   loc_DA62
; ---------------------------------------------------------------------------

entry_da5c:
                moveq   #0,d0
                move.b  ($FFFFFE7C).w,d0

loc_DA62:
                btst    #0,$22(a0)
                beq.s   loc_DA70
                neg.w   d0
                addi.w  #$80,d0

loc_DA70:
                move.w  $30(a0),d1
                sub.w   d0,d1
                move.w  d1,$C(a0)
                rts
; ---------------------------------------------------------------------------

entry_da7c:
                tst.b   $38(a0)
                bne.s   loc_DA9A
                lea     ($FFFFF7E0).w,a2
                moveq   #0,d0
                move.b  $3C(a0),d0
                btst    #0,(a2,d0.w)
                beq.s   loc_DAA4
                move.b  #1,$38(a0)

loc_DA9A:
                tst.w   $3A(a0)
                beq.s   loc_DAB4
                subq.w  #2,$3A(a0)

loc_DAA4:
                move.w  $3A(a0),d0
                move.w  $30(a0),d1
                add.w   d0,d1
                move.w  d1,$C(a0)
                rts
; ---------------------------------------------------------------------------

loc_DAB4:
                addq.b  #1,$28(a0)
                clr.b   $38(a0)
                lea     ($FFFFFC00).w,a2
                moveq   #0,d0
                move.b  $23(a0),d0
                beq.s   loc_DAA4
                bset    #0,2(a2,d0.w)
                bra.s   loc_DAA4
; ---------------------------------------------------------------------------

entry_dad0:
                tst.b   $38(a0)
                bne.s   loc_DAEC
                lea     ($FFFFF7E0).w,a2
                moveq   #0,d0
                move.b  $3C(a0),d0
                tst.b   (a2,d0.w)
                bpl.s   loc_DAFE
                move.b  #1,$38(a0)

loc_DAEC:
                moveq   #0,d0
                move.b  $16(a0),d0
                add.w   d0,d0
                cmp.w   $3A(a0),d0
                beq.s   loc_DB0E
                addq.w  #2,$3A(a0)

loc_DAFE:
                move.w  $3A(a0),d0
                move.w  $30(a0),d1
                add.w   d0,d1
                move.w  d1,$C(a0)
                rts
; ---------------------------------------------------------------------------

loc_DB0E:
                subq.b  #1,$28(a0)
                clr.b   $38(a0)
                lea     ($FFFFFC00).w,a2
                moveq   #0,d0
                move.b  $23(a0),d0
                beq.s   loc_DAFE
                bclr    #0,2(a2,d0.w)
                bra.s   loc_DAFE
; ---------------------------------------------------------------------------

entry_db2a:
                tst.b   $38(a0)
                bne.s   loc_DB40
                tst.b   ($FFFFF7EF).w
                beq.s   locret_DB5A
                move.b  #1,$38(a0)
                clr.w   $3A(a0)

loc_DB40:
                addq.w  #1,8(a0)
                move.w  8(a0),$34(a0)
                addq.w  #1,$3A(a0)
                cmpi.w  #$380,$3A(a0)
                bne.s   locret_DB5A
                clr.b   $28(a0)

locret_DB5A:
                rts
; ---------------------------------------------------------------------------

entry_db5c:
                move.w  #$10,d1
                moveq   #0,d0
                move.b  ($FFFFFE88).w,d0
                lsr.w   #1,d0
                move.w  ($FFFFFE8A).w,d3
                bra.s   loc_DB9C
; ---------------------------------------------------------------------------

entry_db6e:
                move.w  #$30,d1 
                moveq   #0,d0
                move.b  ($FFFFFE8C).w,d0
                move.w  ($FFFFFE8E).w,d3
                bra.s   loc_DB9C
; ---------------------------------------------------------------------------

entry_db7e:
                move.w  #$50,d1 
                moveq   #0,d0
                move.b  ($FFFFFE90).w,d0
                move.w  ($FFFFFE92).w,d3
                bra.s   loc_DB9C
; ---------------------------------------------------------------------------

entry_db8e:
                move.w  #$70,d1 
                moveq   #0,d0
                move.b  ($FFFFFE94).w,d0
                move.w  ($FFFFFE96).w,d3

loc_DB9C:
                tst.w   d3
                bne.s   loc_DBAA
                addq.b  #1,$22(a0)
                andi.b  #3,$22(a0)

loc_DBAA:
                move.b  $22(a0),d2
                andi.b  #3,d2
                bne.s   loc_DBCA
                sub.w   d1,d0
                add.w   $34(a0),d0
                move.w  d0,8(a0)
                neg.w   d1
                add.w   $30(a0),d1
                move.w  d1,$C(a0)
                rts
; ---------------------------------------------------------------------------

loc_DBCA:
                subq.b  #1,d2
                bne.s   loc_DBE8
                subq.w  #1,d1
                sub.w   d1,d0
                neg.w   d0
                add.w   $30(a0),d0
                move.w  d0,$C(a0)
                addq.w  #1,d1
                add.w   $34(a0),d1
                move.w  d1,8(a0)
                rts
; ---------------------------------------------------------------------------

loc_DBE8:
                subq.b  #1,d2
                bne.s   loc_DC06
                subq.w  #1,d1
                sub.w   d1,d0
                neg.w   d0
                add.w   $34(a0),d0
                move.w  d0,8(a0)
                addq.w  #1,d1
                add.w   $30(a0),d1
                move.w  d1,$C(a0)
                rts
; ---------------------------------------------------------------------------

loc_DC06:
                sub.w   d1,d0
                add.w   $30(a0),d0
                move.w  d0,$C(a0)
                neg.w   d1
                add.w   $34(a0),d1
                move.w  d1,8(a0)
                rts
; ---------------------------------------------------------------------------
unk_DC1C:       include "Map/SZBlock.asm"
; ---------------------------------------------------------------------------

Obj57:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  index_dc88(pc,d0.w),d1
                jmp     index_dc88(pc,d1.w)
; ---------------------------------------------------------------------------
index_dc88:     dc.w entry_DC8E-*
                dc.w entry_dd6c-index_dc88
                dc.w entry_de08-index_dc88
; ---------------------------------------------------------------------------

entry_DC8E:
                addq.b  #2,$24(a0)
                move.l  #unk_DE0C,4(a0)
                move.w  #$3BA,2(a0)
                move.b  #4,1(a0)
                move.b  #4,$19(a0)
                move.b  #8,$18(a0)
                move.w  8(a0),$3A(a0)
                move.w  $C(a0),$38(a0)
                move.b  #$98,$20(a0)
                move.b  $28(a0),d1
                andi.b  #$F0,d1
                ext.w   d1
                asl.w   #3,d1
                move.w  d1,$3E(a0)
                move.b  $22(a0),d0
                ror.b   #2,d0
                andi.b  #$C0,d0
                move.b  d0,$26(a0)
                lea     $29(a0),a2
                move.b  $28(a0),d1
                andi.w  #7,d1
                move.b  #0,(a2)+
                move.w  d1,d3
                lsl.w   #4,d3
                move.b  d3,$3C(a0)
                subq.w  #1,d1
                bcs.s   loc_DD5E
                btst    #3,$28(a0)
                beq.s   loc_DD0A
                subq.w  #1,d1
                bcs.s   loc_DD5E

loc_DD0A:
                bsr.w   FindFreeObjectSlot
                bne.s   loc_DD5E
                addq.b  #1,$29(a0)
                move.w  a1,d5
                subi.w  #$D000,d5
                lsr.w   #6,d5
                andi.w  #$7F,d5
                move.b  d5,(a2)+
                move.b  #4,$24(a1)
                move.b  0(a0),0(a1)
                move.l  4(a0),4(a1)
                move.w  2(a0),2(a1)
                move.b  1(a0),1(a1)
                move.b  $19(a0),$19(a1)
                move.b  $18(a0),$18(a1)
                move.b  $20(a0),$20(a1)
                subi.b  #$10,d3
                move.b  d3,$3C(a1)
                dbf     d1,loc_DD0A

loc_DD5E:
                move.w  a0,d5
                subi.w  #$D000,d5
                lsr.w   #6,d5
                andi.w  #$7F,d5
                move.b  d5,(a2)+

entry_dd6c:
                bsr.w   sub_DD74
                bra.w   loc_DDC6

; =============== S U B R O U T I N E =======================================


sub_DD74:
                move.w  $3E(a0),d0
                add.w   d0,$26(a0)
                move.b  $26(a0),d0
                jsr     (CalcSine).l
                move.w  $38(a0),d2
                move.w  $3A(a0),d3
                lea     $29(a0),a2
                moveq   #0,d6
                move.b  (a2)+,d6

loc_DD96:
                moveq   #0,d4
                move.b  (a2)+,d4
                lsl.w   #6,d4
                addi.l  #$FFD000,d4
                movea.l d4,a1
                moveq   #0,d4
                move.b  $3C(a1),d4
                move.l  d4,d5
                muls.w  d0,d4
                asr.l   #8,d4
                muls.w  d1,d5
                asr.l   #8,d5
                add.w   d2,d4
                add.w   d3,d5
                move.w  d4,$C(a1)
                move.w  d5,8(a1)
                dbf     d6,loc_DD96
                rts
; End of function sub_DD74

; ---------------------------------------------------------------------------

loc_DDC6:
                move.w  $3A(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.w   loc_DDE8
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------

loc_DDE8:
                moveq   #0,d2
                lea     $29(a0),a2
                move.b  (a2)+,d2

loc_DDF0:
                moveq   #0,d0
                move.b  (a2)+,d0
                lsl.w   #6,d0
                addi.l  #$FFD000,d0
                movea.l d0,a1
                bsr.w   loc_878A
                dbf     d2,loc_DDF0
                rts
; ---------------------------------------------------------------------------

entry_de08:
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------
unk_DE0C:       include "Map/SpikechainBall.asm"
; ---------------------------------------------------------------------------

Obj58:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  index_de22(pc,d0.w),d1
                jmp     index_de22(pc,d1.w)
; ---------------------------------------------------------------------------
index_de22:     dc.w entry_DE26-*
                dc.w entry_de80-index_de22
; ---------------------------------------------------------------------------

entry_DE26:
                addq.b  #2,$24(a0)
                move.l  #unk_DF3E,4(a0)
                move.w  #$396,2(a0)
                move.b  #4,1(a0)
                move.b  #4,$19(a0)
                move.b  #$18,$18(a0)
                move.w  8(a0),$3A(a0)
                move.w  $C(a0),$38(a0)
                move.b  #$86,$20(a0)
                move.b  $28(a0),d1
                andi.b  #$F0,d1
                ext.w   d1
                asl.w   #3,d1
                move.w  d1,$3E(a0)
                move.b  $22(a0),d0
                ror.b   #2,d0
                andi.b  #$C0,d0
                move.b  d0,$26(a0)
                move.b  #$50,$3C(a0) 

entry_de80:
                moveq   #0,d0
                move.b  $28(a0),d0
                andi.w  #7,d0
                add.w   d0,d0
                move.w  index_deb6(pc,d0.w),d1
                jsr     index_deb6(pc,d1.w)
                move.w  $3A(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.w   DeleteObject
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------
index_deb6:     dc.w entry_DEBE-*
                dc.w entry_dec0-index_deb6
                dc.w entry_dee2-index_deb6
                dc.w entry_df06-index_deb6
; ---------------------------------------------------------------------------

entry_DEBE:
                rts
; ---------------------------------------------------------------------------

entry_dec0:
                move.w  #$60,d1 
                moveq   #0,d0
                move.b  ($FFFFFE6C).w,d0
                btst    #0,$22(a0)
                beq.s   loc_DED6
                neg.w   d0
                add.w   d1,d0

loc_DED6:
                move.w  $3A(a0),d1
                sub.w   d0,d1
                move.w  d1,8(a0)
                rts
; ---------------------------------------------------------------------------

entry_dee2:
                move.w  #$60,d1 
                moveq   #0,d0
                move.b  ($FFFFFE6C).w,d0
                btst    #0,$22(a0)
                beq.s   loc_DEFA
                neg.w   d0
                addi.w  #$80,d0

loc_DEFA:
                move.w  $38(a0),d1
                sub.w   d0,d1
                move.w  d1,$C(a0)
                rts
; ---------------------------------------------------------------------------

entry_df06:
                move.w  $3E(a0),d0
                add.w   d0,$26(a0)
                move.b  $26(a0),d0
                jsr     (CalcSine).l
                move.w  $38(a0),d2
                move.w  $3A(a0),d3
                moveq   #0,d4
                move.b  $3C(a0),d4
                move.l  d4,d5
                muls.w  d0,d4
                asr.l   #8,d4
                muls.w  d1,d5
                asr.l   #8,d5
                add.w   d2,d4
                add.w   d3,d5
                move.w  d4,$C(a0)
                move.w  d5,8(a0)
                rts
; ---------------------------------------------------------------------------
unk_DF3E:       dc.b   0
                dc.b   6
                dc.b   0
                dc.b $20
                dc.b   0
                dc.b $26 ; &
                dc.b   5
                dc.b $E8
                dc.b   4
                dc.b   0
                dc.b   0
                dc.b $F8
                dc.b $F0
                dc.b  $F
                dc.b   0
                dc.b   2
                dc.b $F0
                dc.b $F8
                dc.b   1
                dc.b   0
                dc.b $12
                dc.b $E8
                dc.b $F8
                dc.b   1
                dc.b   0
                dc.b $14
                dc.b $10
                dc.b $10
                dc.b   4
                dc.b   0
                dc.b $16
                dc.b $F8
                dc.b   1
                dc.b $F8
                dc.b  $D
                dc.b   0
                dc.b $18
                dc.b $F0
                dc.b   1
                dc.b $F8
                dc.b   5
                dc.b   0
                dc.b $20
                dc.b $F8
; ---------------------------------------------------------------------------

Obj59:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  index_df9a(pc,d0.w),d1
                jsr     index_df9a(pc,d1.w)
                move.w  $32(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.w   DeleteObject
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------
index_df9a:     dc.w entry_dfc2-index_df9a
                dc.w entry_e03a-index_df9a
                dc.w entry_e04a-index_df9a
                dc.w entry_e194-index_df9a
byte_DFA2:      dc.b $28, 0
                dc.b $10, 1
                dc.b $20, 1
                dc.b $34, 1
                dc.b $10, 3
                dc.b $20, 3
                dc.b $34, 3
                dc.b $14, 1
                dc.b $24, 1
                dc.b $2C, 1
                dc.b $14, 3
                dc.b $24, 3
                dc.b $2C, 3
                dc.b $20, 5
                dc.b $20, 7
                dc.b $30, 9
; ---------------------------------------------------------------------------

entry_dfc2:
                addq.b  #2,$24(a0)
                moveq   #0,d0
                move.b  $28(a0),d0
                bpl.s   loc_DFE6
                addq.b  #4,$24(a0)
                andi.w  #$7F,d0
                mulu.w  #6,d0
                move.w  d0,$3C(a0)
                move.w  d0,$3E(a0)
                addq.l  #4,sp
                rts
; ---------------------------------------------------------------------------

loc_DFE6:
                lsr.w   #3,d0
                andi.w  #$1E,d0
                lea     byte_DFA2(pc,d0.w),a2
                move.b  (a2)+,$18(a0)
                move.b  (a2)+,$1A(a0)
                moveq   #0,d0
                move.b  $28(a0),d0
                add.w   d0,d0
                andi.w  #$1E,d0
                lea     byte_DFA2+2(pc,d0.w),a2
                move.b  (a2)+,d0
                lsl.w   #2,d0
                move.w  d0,$3C(a0)
                move.b  (a2)+,$28(a0)
                move.l  #unk_E1E0,4(a0)
                move.w  #$4480,2(a0)
                move.b  #4,1(a0)
                move.b  #4,$19(a0)
                move.w  8(a0),$32(a0)
                move.w  $C(a0),$30(a0)

entry_e03a:
                moveq   #0,d1
                move.b  $18(a0),d1
                jsr     (loc_4F7A).l
                bra.w   sub_E06E
; ---------------------------------------------------------------------------

entry_e04a:
                moveq   #0,d1
                move.b  $18(a0),d1
                jsr     (ExitPlatform).l
                move.w  8(a0),-(sp)
                bsr.w   sub_E06E
                move.w  (sp)+,d2
                tst.b   0(a0)
                beq.s   locret_E06C
                jmp     (loc_561A).l
; ---------------------------------------------------------------------------

locret_E06C:
                rts

; =============== S U B R O U T I N E =======================================


sub_E06E:
                moveq   #0,d0
                move.b  $28(a0),d0
                andi.w  #$F,d0
                add.w   d0,d0
                move.w  unk_E082(pc,d0.w),d1
                jmp     unk_E082(pc,d1.w)
; End of function sub_E06E

; ---------------------------------------------------------------------------
unk_E082:       dc.b   0
                dc.b $14
                dc.b   0
                dc.b $16
                dc.b   0
                dc.b $24 ; $
                dc.b   0
                dc.b $16
                dc.b   0
                dc.b $38 ; 8
                dc.b   0
                dc.b $16
                dc.b   0
                dc.b $4A ; J
                dc.b   0
                dc.b $16
                dc.b   0
                dc.b $6C ; l
                dc.b   0
                dc.b $8E
                dc.b $4E ; N
                dc.b $75 ; u
                dc.b  $C
                dc.b $28 ; (
                dc.b   0
                dc.b   4
                dc.b   0
                dc.b $24 ; $
                dc.b $66 
                dc.b   4
                dc.b $52 ; R
                dc.b $28 ; (
                dc.b   0
                dc.b $28 ; (
                dc.b $4E ; N
                dc.b $75 ; u
                dc.b $61 
                dc.b   0
                dc.b   0
                dc.b $A2
                dc.b $30 ; 0
                dc.b $28 ; (
                dc.b   0
                dc.b $34 ; 4
                dc.b $44 ; D
                dc.b $40 ; @
                dc.b $D0
                dc.b $68 ; h
                dc.b   0
                dc.b $30 ; 0
                dc.b $31 ; 1
                dc.b $40 ; @
                dc.b   0
                dc.b  $C
                dc.b $4E ; N
                dc.b $75 ; u
                dc.b $61 
                dc.b   0
                dc.b   0
                dc.b $8E
                dc.b $30 ; 0
                dc.b $28 ; (
                dc.b   0
                dc.b $34 ; 4
                dc.b $D0
                dc.b $68 ; h
                dc.b   0
                dc.b $30 ; 0
                dc.b $31 ; 1
                dc.b $40 ; @
                dc.b   0
                dc.b  $C
                dc.b $4E ; N
                dc.b $75 ; u
                dc.b $61 
                dc.b   0
                dc.b   0
                dc.b $7C ; |
                dc.b $30 ; 0
                dc.b $28 ; (
                dc.b   0
                dc.b $34 ; 4
                dc.b $E2
                dc.b $40 ; @
                dc.b $44 ; D
                dc.b $40 ; @
                dc.b $D0
                dc.b $68 ; h
                dc.b   0
                dc.b $30 ; 0
                dc.b $31 ; 1
                dc.b $40 ; @
                dc.b   0
                dc.b  $C
                dc.b $30 ; 0
                dc.b $28 ; (
                dc.b   0
                dc.b $34 ; 4
                dc.b $D0
                dc.b $68 ; h
                dc.b   0
                dc.b $32 ; 2
                dc.b $31 ; 1
                dc.b $40 ; @
                dc.b   0
                dc.b   8
                dc.b $4E ; N
                dc.b $75 ; u
                dc.b $61 
                dc.b   0
                dc.b   0
                dc.b $5A ; Z
                dc.b $30 ; 0
                dc.b $28 ; (
                dc.b   0
                dc.b $34 ; 4
                dc.b $E2
                dc.b $40 ; @
                dc.b $D0
                dc.b $68 ; h
                dc.b   0
                dc.b $30 ; 0
                dc.b $31 ; 1
                dc.b $40 ; @
                dc.b   0
                dc.b  $C
                dc.b $30 ; 0
                dc.b $28 ; (
                dc.b   0
                dc.b $34 ; 4
                dc.b $44 ; D
                dc.b $40 ; @
                dc.b $D0
                dc.b $68 ; h
                dc.b   0
                dc.b $32 ; 2
                dc.b $31 ; 1
                dc.b $40 ; @
                dc.b   0
                dc.b   8
                dc.b $4E ; N
                dc.b $75 ; u
                dc.b $61 
                dc.b   0
                dc.b   0
                dc.b $38 ; 8
                dc.b $30 ; 0
                dc.b $28 ; (
                dc.b   0
                dc.b $34 ; 4
                dc.b $44 ; D
                dc.b $40 ; @
                dc.b $D0
                dc.b $68 ; h
                dc.b   0
                dc.b $30 ; 0
                dc.b $31 ; 1
                dc.b $40 ; @
                dc.b   0
                dc.b  $C
                dc.b $4A ; J
                dc.b $28 ; (
                dc.b   0
                dc.b $28 ; (
                dc.b $67 ; g
                dc.b   0
                dc.b   0
                dc.b   4
                dc.b $4E ; N
                dc.b $75 ; u
                dc.b   8
                dc.b $28 ; (
                dc.b   0
                dc.b   3
                dc.b   0
                dc.b $22 ; "
                dc.b $67 ; g
                dc.b $12
                dc.b   8
                dc.b $E9
                dc.b   0
                dc.b   1
                dc.b   0
                dc.b $22 ; "
                dc.b   8
                dc.b $A9
                dc.b   0
                dc.b   3
                dc.b   0
                dc.b $22 ; "
                dc.b $13
                dc.b $7C ; |
                dc.b   0
                dc.b   2
                dc.b   0
                dc.b $24 ; $
                dc.b $60 
                dc.b   0
                dc.b $A6
                dc.b $40 ; @
                dc.b $30 ; 0
                dc.b $28 ; (
                dc.b   0
                dc.b $38 ; 8
                dc.b $4A ; J
                dc.b $28 ; (
                dc.b   0
                dc.b $3A ; :
                dc.b $66 
                dc.b  $C
                dc.b  $C
                dc.b $40 ; @
                dc.b   8
                dc.b   0
                dc.b $64 ; d
                dc.b  $E
                dc.b   6
                dc.b $40 ; @
                dc.b   0
                dc.b $10
                dc.b $60 
                dc.b   8
                dc.b $4A ; J
                dc.b $40 ; @
                dc.b $67 ; g
                dc.b   4
                dc.b   4
                dc.b $40 ; @
                dc.b   0
                dc.b $10
                dc.b $31 ; 1
                dc.b $40 ; @
                dc.b   0
                dc.b $38 ; 8
                dc.b $48 ; H
                dc.b $C0
                dc.b $E1
                dc.b $80
                dc.b $D0
                dc.b $A8
                dc.b   0
                dc.b $34 ; 4
                dc.b $21 ; !
                dc.b $40 ; @
                dc.b   0
                dc.b $34 ; 4
                dc.b $48 ; H
                dc.b $40 ; @
                dc.b $34 ; 4
                dc.b $28 ; (
                dc.b   0
                dc.b $3C ; <
                dc.b $B0
                dc.b $42 ; B
                dc.b $63 ; c
                dc.b   6
                dc.b $11
                dc.b $7C ; |
                dc.b   0
                dc.b   1
                dc.b   0
                dc.b $3A ; :
                dc.b $D4
                dc.b $42 ; B
                dc.b $B0
                dc.b $42 ; B
                dc.b $66 
                dc.b   4
                dc.b $42 ; B
                dc.b $28 ; (
                dc.b   0
                dc.b $28 ; (
                dc.b $4E ; N
                dc.b $75 ; u
; ---------------------------------------------------------------------------

entry_e194:
                subq.w  #1,$3C(a0)
                bne.s   loc_E1BE
                move.w  $3E(a0),$3C(a0)
                bsr.w   FindFreeObjectSlot
                bne.s   loc_E1BE
                move.b  #$59,0(a1)
                move.w  8(a0),8(a1)
                move.w  $C(a0),$C(a1)
                move.b  #$E,$28(a1)

loc_E1BE:
                addq.l  #4,sp
                move.w  8(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.w   DeleteObject
                rts
; ---------------------------------------------------------------------------
unk_E1E0:       dc.b   0
                dc.b   2
                dc.b   3
                dc.b $F8
                dc.b  $F
                dc.b   0
                dc.b $41 
                dc.b $D8
                dc.b $F8
                dc.b  $F
                dc.b   0
                dc.b $41 
                dc.b $F8
                dc.b $F8
                dc.b   7
                dc.b   0
                dc.b $41 
                dc.b $18
; ---------------------------------------------------------------------------

Obj5A:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  index_e222(pc,d0.w),d1
                jsr     index_e222(pc,d1.w)
                move.w  $32(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.w   DeleteObject
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------
index_e222:     dc.w entry_E228-*
                dc.w entry_e258-index_e222
                dc.w entry_e268-index_e222
; ---------------------------------------------------------------------------

entry_E228:
                addq.b  #2,$24(a0)
                move.l  #unk_E31A,4(a0)
                move.w  #$4480,2(a0)
                move.b  #4,1(a0)
                move.b  #4,$19(a0)
                move.b  #$18,$18(a0)
                move.w  8(a0),$32(a0)
                move.w  $C(a0),$30(a0)

entry_e258:
                moveq   #0,d1
                move.b  $18(a0),d1
                jsr     (loc_4F7A).l
                bra.w   sub_E284
; ---------------------------------------------------------------------------

entry_e268:
                moveq   #0,d1
                move.b  $18(a0),d1
                jsr     (ExitPlatform).l
                move.w  8(a0),-(sp)
                bsr.w   sub_E284
                move.w  (sp)+,d2
                jmp     (loc_561A).l

; =============== S U B R O U T I N E =======================================


sub_E284:
                moveq   #0,d0
                move.b  $28(a0),d0
                andi.w  #$C,d0
                lsr.w   #1,d0
                move.w  index_e298(pc,d0.w),d1
                jmp     index_e298(pc,d1.w)
; End of function sub_E284

; ---------------------------------------------------------------------------
index_e298:     dc.w entry_E29C-*
                dc.w entry_e2da-index_e298
; ---------------------------------------------------------------------------

entry_E29C:
                move.b  ($FFFFFE80).w,d1
                subi.b  #$50,d1 
                ext.w   d1
                move.b  ($FFFFFE84).w,d2
                subi.b  #$50,d2 
                ext.w   d2
                btst    #0,$28(a0)
                beq.s   loc_E2BC
                neg.w   d1
                neg.w   d2

loc_E2BC:
                btst    #1,$28(a0)
                beq.s   loc_E2C8
                neg.w   d1
                exg     d1,d2

loc_E2C8:
                add.w   $32(a0),d1
                move.w  d1,8(a0)
                add.w   $30(a0),d2
                move.w  d2,$C(a0)
                rts
; ---------------------------------------------------------------------------

entry_e2da:
                move.b  ($FFFFFE80).w,d1
                subi.b  #$50,d1 
                ext.w   d1
                move.b  ($FFFFFE84).w,d2
                subi.b  #$50,d2 
                ext.w   d2
                btst    #0,$28(a0)
                beq.s   loc_E2FA
                neg.w   d1
                neg.w   d2

loc_E2FA:
                btst    #1,$28(a0)
                beq.s   loc_E306
                neg.w   d1
                exg     d1,d2

loc_E306:
                neg.w   d1
                add.w   $32(a0),d1
                move.w  d1,8(a0)
                add.w   $30(a0),d2
                move.w  d2,$C(a0)
                rts
; ---------------------------------------------------------------------------
unk_E31A:       dc.b   0
                dc.b   2
                dc.b   2
                dc.b $F8
                dc.b   9
                dc.b   0
                dc.b $51 ; Q
                dc.b $E8
                dc.b $F8
                dc.b   9
                dc.b   8
                dc.b $51 ; Q
                dc.b   0
                dc.b   0
; ---------------------------------------------------------------------------

Obj5B:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  word_E358(pc,d0.w),d1
                jsr     word_E358(pc,d1.w)
                move.w  $30(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.w   DeleteObject
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------
word_E358:      dc.w 6
                dc.w $86
                dc.w $9A
; ---------------------------------------------------------------------------
                addq.b  #2,$24(a0)
                moveq   #$38,d3 
                moveq   #1,d4
                btst    #0,$22(a0)
                beq.s   loc_E372
                moveq   #$3B,d3
                moveq   #$FFFFFFFF,d4

loc_E372:
                move.w  8(a0),d2
                movea.l a0,a1
                moveq   #3,d1
                bra.s   loc_E38A
; ---------------------------------------------------------------------------

loc_E37C:
                bsr.w   FindFreeObjectSlot2
                bne.w   loc_E3DE
                move.b  #4,$24(a1)

loc_E38A:
                move.b  #$5B,0(a1)
                move.l  #unk_E4D4,4(a1)
                move.w  #$4480,2(a1)
                move.b  #4,1(a1)
                move.b  #3,$19(a1)
                move.b  #$10,$18(a1)
                move.b  $28(a0),$28(a1)
                move.w  d2,8(a1)
                move.w  $C(a0),$C(a1)
                move.w  8(a0),$30(a1)
                move.w  $C(a1),$32(a1)
                addi.w  #$20,d2 
                move.b  d3,$37(a1)
                move.l  a0,$3C(a1)
                add.b   d4,d3
                dbf     d1,loc_E37C

loc_E3DE:
                moveq   #0,d0
                move.b  $28(a0),d0
                andi.w  #7,d0
                add.w   d0,d0
                move.w  index_e43a(pc,d0.w),d1
                jsr     index_e43a(pc,d1.w)
                movea.l $3C(a0),a2
                moveq   #0,d0
                move.b  $37(a0),d0
                move.b  (a2,d0.w),d0
                add.w   $32(a0),d0
                move.w  d0,$C(a0)
                moveq   #0,d1
                move.b  $18(a0),d1
                addi.w  #$B,d1
                move.w  #$10,d2
                move.w  #$11,d3
                move.w  8(a0),d4
                bsr.w   sub_A2BC
                tst.b   d4
                bpl.s   loc_E42A
                move.b  d4,$36(a2)

loc_E42A:
                btst    #3,$22(a0)
                beq.s   locret_E438
                move.b  #1,$36(a2)

locret_E438:
                rts
; ---------------------------------------------------------------------------
index_e43a:     dc.w entry_E442-*
                dc.w entry_e4a8-index_e43a
                dc.w entry_e464-index_e43a
                dc.w entry_e4a8-index_e43a
; ---------------------------------------------------------------------------

entry_E442:
                tst.w   $34(a0)
                bne.s   loc_E458
                cmpi.b  #1,$36(a0)
                bne.s   locret_E456
                move.w  #$1E,$34(a0)

locret_E456:
                rts
; ---------------------------------------------------------------------------

loc_E458:
                subq.w  #1,$34(a0)
                bne.s   locret_E456
                addq.b  #1,$28(a0)
                rts
; ---------------------------------------------------------------------------

entry_e464:
                tst.w   $34(a0)
                bne.s   loc_E478
                tst.b   $36(a0)
                bpl.s   locret_E476
                move.w  #$3C,$34(a0) 

locret_E476:
                rts
; ---------------------------------------------------------------------------

loc_E478:
                subq.w  #1,$34(a0)
                bne.s   loc_E484
                addq.b  #1,$28(a0)
                rts
; ---------------------------------------------------------------------------

loc_E484:
                lea     $38(a0),a1
                move.w  $34(a0),d0
                lsr.b   #2,d0
                andi.b  #1,d0
                move.b  d0,(a1)+
                eori.b  #1,d0
                move.b  d0,(a1)+
                eori.b  #1,d0
                move.b  d0,(a1)+
                eori.b  #1,d0
                move.b  d0,(a1)+
                rts
; ---------------------------------------------------------------------------

entry_e4a8:
                lea     $38(a0),a1
                cmpi.b  #$80,(a1)
                beq.s   locret_E4D0
                addq.b  #1,(a1)
                moveq   #0,d1
                move.b  (a1)+,d1
                swap    d1
                lsr.l   #1,d1
                move.l  d1,d2
                lsr.l   #1,d1
                move.l  d1,d3
                add.l   d2,d3
                swap    d1
                swap    d2
                swap    d3
                move.b  d3,(a1)+
                move.b  d2,(a1)+
                move.b  d1,(a1)+

locret_E4D0:
                rts
; ---------------------------------------------------------------------------
                rts
; ---------------------------------------------------------------------------
unk_E4D4:       dc.b   0
                dc.b   2
                dc.b   1
                dc.b $F0
                dc.b  $F
                dc.b   0
                dc.b $21 ; !
                dc.b $F0
; ---------------------------------------------------------------------------

Obj5C:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  index_e4ea(pc,d0.w),d1
                jmp     index_e4ea(pc,d1.w)
; ---------------------------------------------------------------------------
index_e4ea:     dc.w entry_E4EE-*
                dc.w entry_e506-index_e4ea
; ---------------------------------------------------------------------------

entry_E4EE:
                addq.b  #2,$24(a0)
                move.l  #unk_E52E,4(a0)
                move.w  #$83CC,2(a0)
                move.b  #$10,$18(a0)

entry_e506:
                move.l  ($FFFFF700).w,d1
                add.l   d1,d1
                swap    d1
                neg.w   d1
                move.w  d1,8(a0)
                move.l  ($FFFFF704).w,d1
                add.l   d1,d1
                swap    d1
                andi.w  #$3F,d1 
                neg.w   d1
                addi.w  #$100,d1
                move.w  d1,$A(a0)
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------
unk_E52E:       dc.b   0
                dc.b   2
                dc.b   9
                dc.b $80
                dc.b  $F
                dc.b   0
                dc.b   0
                dc.b $F0
                dc.b $A0
                dc.b  $F
                dc.b $10
                dc.b   0
                dc.b $F0
                dc.b $C0
                dc.b  $F
                dc.b   0
                dc.b   0
                dc.b $F0
                dc.b $E0
                dc.b  $F
                dc.b $10
                dc.b   0
                dc.b $F0
                dc.b   0
                dc.b  $F
                dc.b   0
                dc.b   0
                dc.b $F0
                dc.b $20
                dc.b  $F
                dc.b $10
                dc.b   0
                dc.b $F0
                dc.b $40 ; @
                dc.b  $F
                dc.b   0
                dc.b   0
                dc.b $F0
                dc.b $60 
                dc.b  $F
                dc.b $10
                dc.b   0
                dc.b $F0
                dc.b $7F
                dc.b  $F
                dc.b   0
                dc.b   0
                dc.b $F0
; ---------------------------------------------------------------------------

Obj5D:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  index_e56c(pc,d0.w),d1
                jmp     index_e56c(pc,d1.w)
; ---------------------------------------------------------------------------
index_e56c:     dc.w entry_E570-*
                dc.w entry_e594-index_e56c
; ---------------------------------------------------------------------------

entry_E570:
                addq.b  #2,$24(a0)
                move.l  #unk_E672,4(a0)
                move.w  #$43A0,2(a0)
                move.b  #4,1(a0)
                move.b  #$10,$18(a0)
                move.b  #4,$19(a0)

entry_e594:
                btst    #1,$28(a0)
                bne.s   loc_E5B6
                subq.w  #1,$30(a0)
                bpl.s   loc_E5B6
                move.w  #$78,$30(a0) 
                bchg    #0,$32(a0)
                beq.s   loc_E5B6
                move.w  #$B4,$30(a0)

loc_E5B6:
                tst.b   $32(a0)
                bne.w   loc_E64E
                lea     ($FFFFD000).w,a1
                move.w  8(a1),d0
                sub.w   8(a0),d0
                btst    #0,$22(a0)
                bne.s   loc_E5D4
                neg.w   d0

loc_E5D4:
                addi.w  #$50,d0 
                cmpi.w  #$F0,d0
                bcc.s   loc_E61C
                move.w  $C(a1),d1
                addi.w  #$60,d1 
                sub.w   $C(a0),d1
                bcs.s   loc_E61C
                cmpi.w  #$70,d1 
                bcc.s   loc_E61C
                subi.w  #$50,d0 
                bcc.s   loc_E5FC
                not.w   d0
                add.w   d0,d0

loc_E5FC:
                addi.w  #$60,d0 
                btst    #0,$22(a0)
                bne.s   loc_E60A
                neg.w   d0

loc_E60A:
                neg.b   d0
                asr.w   #4,d0
                btst    #0,$28(a0)
                beq.s   loc_E618
                neg.w   d0

loc_E618:
                add.w   d0,8(a1)

loc_E61C:
                subq.b  #1,$1E(a0)
                bpl.s   loc_E64E
                move.b  #0,$1E(a0)
                addq.b  #1,$1B(a0)
                cmpi.b  #3,$1B(a0)
                bcs.s   loc_E63A
                move.b  #0,$1B(a0)

loc_E63A:
                moveq   #0,d0
                btst    #0,$28(a0)
                beq.s   loc_E646
                moveq   #2,d0

loc_E646:
                add.b   $1B(a0),d0
                move.b  d0,$1A(a0)

loc_E64E:
                bsr.w   DisplaySprite
                move.w  8(a0),d0
                andi.w  #$FF80,d0
                move.w  ($FFFFF700).w,d1
                subi.w  #$80,d1
                andi.w  #$FF80,d1
                sub.w   d1,d0
                cmpi.w  #$280,d0
                bhi.w   DeleteObject
                rts
; ---------------------------------------------------------------------------
unk_E672:       dc.b   0
                dc.b  $A
                dc.b   0
                dc.b $15
                dc.b   0
                dc.b $20
                dc.b   0
                dc.b $15
                dc.b   0
                dc.b  $A
                dc.b   2
                dc.b $F0
                dc.b   9
                dc.b   0
                dc.b   0
                dc.b $F8
                dc.b   0
                dc.b  $D
                dc.b   0
                dc.b   6
                dc.b $F0
                dc.b   2
                dc.b $F0
                dc.b  $D
                dc.b   0
                dc.b  $E
                dc.b $F0
                dc.b   0
                dc.b  $D
                dc.b   0
                dc.b $16
                dc.b $F0
                dc.b   2
                dc.b $F0
                dc.b  $D
                dc.b   0
                dc.b $1E
                dc.b $F0
                dc.b   0
                dc.b   9
                dc.b   0
                dc.b $26 ; &
                dc.b $F8
                dc.b   0
; ---------------------------------------------------------------------------

Obj5E:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  index_e6b0(pc,d0.w),d1
                jsr     index_e6b0(pc,d1.w)
                bra.w   MarkObjectGone
; ---------------------------------------------------------------------------
index_e6b0:     dc.w entry_E6B6-*
                dc.w entry_e6da-index_e6b0
                dc.w entry_e706-index_e6b0
; ---------------------------------------------------------------------------

entry_E6B6:
                addq.b  #2,$24(a0)
                move.l  #unk_E7CE,4(a0)
                move.w  #$374,2(a0)
                ori.b   #4,1(a0)
                move.b  #4,$19(a0)
                move.b  #$30,$18(a0) 

entry_e6da:
                lea     (unk_E76E).l,a2
                btst    #0,$1A(a0)
                beq.s   loc_E6EE
                lea     (unk_E79E).l,a2

loc_E6EE:
                lea     ($FFFFD000).w,a1
                move.w  #$30,d1 
                jsr     (sub_504A).l
                btst    #3,(a0)
                beq.s   locret_E704
                nop

locret_E704:
                rts
; ---------------------------------------------------------------------------

entry_e706:
                bsr.w   sub_E738
                lea     (unk_E76E).l,a2
                btst    #0,$1A(a0)
                beq.s   loc_E71E
                lea     (unk_E79E).l,a2

loc_E71E:
                move.w  #$30,d1 
                jsr     (ExitPlatform).l
                move.w  #$30,d1 
                move.w  8(a0),d2
                jsr     (sub_61E0).l
                rts

; =============== S U B R O U T I N E =======================================


sub_E738:
                moveq   #2,d1
                lea     ($FFFFD000).w,a1
                move.w  8(a0),d0
                sub.w   8(a1),d0
                bcc.s   loc_E74C
                neg.w   d0
                moveq   #0,d1

loc_E74C:
                cmpi.w  #8,d0
                bcc.s   loc_E754
                moveq   #1,d1

loc_E754:
                move.b  d1,$1A(a0)
                bclr    #0,1(a0)
                btst    #1,$1A(a0)
                beq.s   locret_E76C
                bset    #0,1(a0)

locret_E76C:
                rts
; End of function sub_E738

; ---------------------------------------------------------------------------
unk_E76E:       dc.b $24 ; $
                dc.b $24 ; $
                dc.b $26 ; &
                dc.b $28 ; (
                dc.b $2A 
                dc.b $2C ; ,
                dc.b $2A
                dc.b $28 ; (
                dc.b $26 ; &
                dc.b $24 ; $
                dc.b $23 ; #
                dc.b $22 ; "
                dc.b $21 ; !
                dc.b $20
                dc.b $1F
                dc.b $1E
                dc.b $1D
                dc.b $1C
                dc.b $1B
                dc.b $1A
                dc.b $19
                dc.b $18
                dc.b $17
                dc.b $16
                dc.b $15
                dc.b $14
                dc.b $13
                dc.b $12
                dc.b $11
                dc.b $10
                dc.b  $F
                dc.b  $E
                dc.b  $D
                dc.b  $C
                dc.b  $B
                dc.b  $A
                dc.b   9
                dc.b   8
                dc.b   7
                dc.b   6
                dc.b   5
                dc.b   4
                dc.b   3
                dc.b   2
                dc.b   2
                dc.b   2
                dc.b   2
                dc.b   2
unk_E79E:       dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
                dc.b $15
unk_E7CE:       dc.b   0
                dc.b   8
                dc.b   0
                dc.b $2C ; ,
                dc.b   0
                dc.b   8
                dc.b   0
                dc.b $2C ; ,
                dc.b   7
                dc.b $D4
                dc.b   6
                dc.b   0
                dc.b   0
                dc.b $D3
                dc.b $DC
                dc.b   6
                dc.b   0
                dc.b   6
                dc.b $E3
                dc.b $E4
                dc.b   4
                dc.b   0
                dc.b  $C
                dc.b $F3
                dc.b $EC
                dc.b  $D
                dc.b   0
                dc.b  $E
                dc.b $F3
                dc.b $FC
                dc.b   8
                dc.b   0
                dc.b $16
                dc.b $FB
                dc.b $F4
                dc.b   6
                dc.b   0
                dc.b   6
                dc.b $13
                dc.b $FC
                dc.b   5
                dc.b   0
                dc.b $19
                dc.b $23 ; #
                dc.b   4
                dc.b $E6
                dc.b  $A
                dc.b   0
                dc.b $1D
                dc.b $D0
                dc.b $E6
                dc.b  $A
                dc.b   0
                dc.b $23 ; #
                dc.b $E8
                dc.b $E6
                dc.b  $A
                dc.b   8
                dc.b $23 ; #
                dc.b   0
                dc.b $E6
                dc.b  $A
                dc.b   8
                dc.b $1D
                dc.b $18
                dc.b   0

; ===========================================================================
; ----------------------------------------------------------------------------
; Object 01 - Sonic
; ----------------------------------------------------------------------------

Obj01:
                tst.w   ($FFFFFE08).w
                bne.w   DebugMode

                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  Obj01_Index(pc,d0.w),d1
                jmp     Obj01_Index(pc,d1.w)
; ===========================================================================
Obj01_Index:	dc.w Obj01_Init-Obj01_Index
                dc.w Obj01_Control-Obj01_Index
                dc.w Obj01_Hurt-Obj01_Index
                dc.w Obj01_Death-Obj01_Index
                dc.w Obj01_ResetLevel-Obj01_Index
; ===========================================================================

Obj01_Init:
                addq.b  #2,$24(a0)
                move.b  #$13,$16(a0)
                move.b  #9,$17(a0)
                move.l  #Map_Sonic,4(a0)
                move.w  #$780,2(a0)
                move.b  #2,$19(a0)
                move.b  #$18,$18(a0)
                move.b  #4,1(a0)
                move.w  #$600,($FFFFF760).w
                move.w  #$C,($FFFFF762).w
                move.w  #$40,($FFFFF764).w

Obj01_Control:
                andi.w  #$7FF,$C(a0)
                andi.w  #$7FF,($FFFFF704).w
                tst.w   ($FFFFFFFA).w
                beq.s   loc_E892
                btst    #4,($FFFFF603).w
                beq.s   loc_E892
                move.w  #1,($FFFFFE08).w

loc_E892:
                moveq   #0,d0
                move.b  $22(a0),d0
                andi.w  #6,d0
                move.w  Sonic_Modes(pc,d0.w),d1
                jsr     Sonic_Modes(pc,d1.w)
                bsr.s   Sonic_Display
                bsr.w   Sonic_RecordPos
                move.b  ($FFFFF768).w,$36(a0)
                move.b  ($FFFFF76A).w,$37(a0)
                bsr.w   Sonic_Animate
                bsr.w   sub_FB4A
                bsr.w   sub_F3E4
                bsr.w   Sonic_LoadDPLCs
                rts

; ===========================================================================
; secondary states under state Obj01_Control
Sonic_Modes:    dc.w Obj01_MdNormal-Sonic_Modes
                dc.w Obj01_MdAir-Sonic_Modes
                dc.w Obj01_MdRoll-Sonic_Modes
                dc.w Obj01_MdJump-Sonic_Modes

MusicList2:     incbin "Misc/musiclist2.bin"
                even

; ===========================================================================

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


Sonic_Display:
                move.w  $30(a0),d0
                beq.s   Obj01_Display
                subq.w  #1,$30(a0)
                lsr.w   #3,d0
                bcc.s   loc_E8E8

Obj01_Display:
                bsr.w   DisplaySprite

loc_E8E8:
                tst.b   ($FFFFFE2D).w
                beq.s   loc_E91C
                tst.w   $32(a0)
                beq.s   loc_E91C
                subq.w  #1,$32(a0)
                bne.s   loc_E91C
                tst.b   ($FFFFF7AA).w
                bne.s   loc_E916
                moveq   #0,d0
                move.b  ($FFFFFE10).w,d0
                lea     (MusicList2).l,a1
                move.b  (a1,d0.w),d0
                jsr     (PlaySound).l

loc_E916:
                move.b  #0,($FFFFFE2D).w

loc_E91C:
                tst.b   ($FFFFFE2E).w
                beq.s   locret_E950
                tst.w   $34(a0)
                beq.s   locret_E950
                subq.w  #1,$34(a0)
                bne.s   locret_E950
                move.w  #$600,($FFFFF760).w
                move.w  #$C,($FFFFF762).w
                move.w  #$40,($FFFFF764).w
                move.b  #0,($FFFFFE2E).w
                move.w  #$E3,d0
                jmp     (PlaySound_Special).l
; ---------------------------------------------------------------------------

locret_E950:
                rts
; End of function Sonic_Display

; ---------------------------------------------------------------------------
; Subroutine to record Sonic's previous positions for invincibility stars
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

Sonic_RecordPos:
                move.w  ($FFFFF7A8).w,d0
                lea     ($FFFFCB00).w,a1
                lea     (a1,d0.w),a1
                move.w  8(a0),(a1)+
                move.w  $C(a0),(a1)+
                addq.b  #4,($FFFFF7A9).w
                rts
; End of function Sonic_RecordPos

; ===========================================================================
; ---------------------------------------------------------------------------
; Start of subroutine Obj01_MdNormal
; Called if Sonic is neither airborne nor rolling this frame
; ---------------------------------------------------------------------------
; Sonic_MdNormal:
Obj01_MdNormal:
                bsr.w   Sonic_Jump
                bsr.w   Sonic_SlopeResist
                bsr.w   Sonic_Move
                bsr.w   Sonic_Roll
                bsr.w   Sonic_LevelBound
                bsr.w   ObjectMove
                bsr.w   Sonic_AnglePos
                bsr.w   Sonic_SlopeRepel
                rts
; End of function Obj01_MdNormal

; ===========================================================================
; Start of subroutine Obj01_MdAir
; Called if Sonic is airborne, but not in a ball (thus, probably not jumping)
; Sonic_MdJump:
Obj01_MdAir:
                bsr.w   Sonic_JumpHeight
                bsr.w   sub_ED3E
                bsr.w   Sonic_LevelBound
                bsr.w   ObjectMoveAndFall
                bsr.w   sub_F032
                bsr.w   sub_F04E
                rts
; End of function Obj01_MdAir

; ===========================================================================
; Start of subroutine Obj01_MdRoll
; Called if Sonic is in a ball, but not airborne (thus, probably rolling)
; ---------------------------------------------------------------------------
; Sonic_MdRoll:
Obj01_MdRoll:
                bsr.w   Sonic_Jump
                bsr.w   sub_EFBE
                bsr.w   sub_EC62
                bsr.w   Sonic_LevelBound
                bsr.w   ObjectMove
                bsr.w   Sonic_AnglePos
                bsr.w   Sonic_SlopeRepel
                rts
; End of function Obj01_MdRoll

; ===========================================================================
; Start of subroutine Obj01_MdJump
; Called if Sonic is in a ball and airborne (he could be jumping but not necessarily)
; Notes: This is identical to Obj01_MdAir, at least at this outer level.
; Sonic_MdAir2:
Obj01_MdJump:
                bsr.w   Sonic_JumpHeight
                bsr.w   sub_ED3E
                bsr.w   Sonic_LevelBound
                bsr.w   ObjectMoveAndFall
                bsr.w   sub_F032
                bsr.w   sub_F04E
                rts
; End of function Obj01_MdJump

; ---------------------------------------------------------------------------
; Subroutine to make Sonic walk/run
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; sub_E9E0:
Sonic_Move:
                move.w  ($FFFFF760).w,d6
                move.w  ($FFFFF762).w,d5
                move.w  ($FFFFF764).w,d4
                tst.w   $3E(a0)
                bne.w   loc_EAA0
                btst    #2,($FFFFF602).w
                beq.s   loc_EA00
                bsr.w   sub_EB90

loc_EA00:
                btst    #3,($FFFFF602).w
                beq.s   loc_EA0C
                bsr.w   sub_EBFC

loc_EA0C:
                move.b  $26(a0),d0
                addi.b  #$20,d0
                andi.b  #$C0,d0
                bne.w   loc_EAD8
                tst.w   $14(a0)
                bne.w   loc_EAD8
                bclr    #5,$22(a0)
                move.b  #5,$1C(a0)
                btst    #3,$22(a0)
                beq.s   loc_EA6E
                moveq   #0,d0
                move.b  $3D(a0),d0
                lsl.w   #6,d0
                lea     ($FFFFD000).w,a1
                lea     (a1,d0.w),a1
                tst.b   $22(a1)
                bmi.s   loc_EAA0
                moveq   #0,d1
                move.b  $18(a1),d1
                move.w  d1,d2
                add.w   d2,d2
                subq.w  #4,d2
                add.w   8(a0),d1
                sub.w   8(a1),d1
                cmpi.w  #4,d1
                blt.s   loc_EA92
                cmp.w   d2,d1
                bge.s   loc_EA82
                bra.s   loc_EAA0
; ---------------------------------------------------------------------------

loc_EA6E:
                jsr     ObjectHitFloor
                cmpi.w  #$C,d1
                blt.s   loc_EAA0
                cmpi.b  #3,$36(a0)
                bne.s   loc_EA8A

loc_EA82:
                bclr    #0,$22(a0)
                bra.s   loc_EA98
; ---------------------------------------------------------------------------

loc_EA8A:
                cmpi.b  #3,$37(a0)
                bne.s   loc_EAA0

loc_EA92:
                bset    #0,$22(a0)

loc_EA98:
                move.b  #6,$1C(a0)
                bra.s   loc_EAD8
; ---------------------------------------------------------------------------

loc_EAA0:
                btst    #0,($FFFFF602).w
                beq.s   loc_EABC
                move.b  #7,$1C(a0)
                cmpi.w  #$C8,($FFFFF73E).w
                beq.s   loc_EAEA
                addq.w  #2,($FFFFF73E).w
                bra.s   loc_EAEA
; ---------------------------------------------------------------------------

loc_EABC:
                btst    #1,($FFFFF602).w
                beq.s   loc_EAD8
                move.b  #8,$1C(a0)
                cmpi.w  #8,($FFFFF73E).w
                beq.s   loc_EAEA
                subq.w  #2,($FFFFF73E).w
                bra.s   loc_EAEA
; ---------------------------------------------------------------------------

loc_EAD8:
                cmpi.w  #$60,($FFFFF73E).w 
                beq.s   loc_EAEA
                bcc.s   loc_EAE6
                addq.w  #4,($FFFFF73E).w

loc_EAE6:
                subq.w  #2,($FFFFF73E).w

loc_EAEA:
                move.b  ($FFFFF602).w,d0
                andi.b  #$C,d0
                bne.s   loc_EB16
                move.w  $14(a0),d0
                beq.s   loc_EB16
                bmi.s   loc_EB0A
                sub.w   d5,d0
                bcc.s   loc_EB04
                move.w  #0,d0

loc_EB04:
                move.w  d0,$14(a0)
                bra.s   loc_EB16
; ---------------------------------------------------------------------------

loc_EB0A:
                add.w   d5,d0
                bcc.s   loc_EB12
                move.w  #0,d0

loc_EB12:
                move.w  d0,$14(a0)

loc_EB16:
                move.b  $26(a0),d0
                jsr     (CalcSine).l
                muls.w  $14(a0),d1
                asr.l   #8,d1
                move.w  d1,$10(a0)
                muls.w  $14(a0),d0
                asr.l   #8,d0
                move.w  d0,$12(a0)

loc_EB34:
                move.b  #$40,d1 
                tst.w   $14(a0)
                beq.s   locret_EB8E
                bmi.s   loc_EB42
                neg.w   d1

loc_EB42:
                move.b  $26(a0),d0
                add.b   d1,d0
                move.w  d0,-(sp)
                bsr.w   sub_104CE
                move.w  (sp)+,d0
                tst.w   d1
                bpl.s   locret_EB8E
                move.w  #0,$14(a0)
                bset    #5,$22(a0)
                asl.w   #8,d1
                addi.b  #$20,d0 
                andi.b  #$C0,d0
                beq.s   loc_EB8A
                cmpi.b  #$40,d0 
                beq.s   loc_EB84
                cmpi.b  #$80,d0
                beq.s   loc_EB7E
                add.w   d1,$10(a0)
                rts
; ---------------------------------------------------------------------------

loc_EB7E:
                sub.w   d1,$12(a0)
                rts
; ---------------------------------------------------------------------------

loc_EB84:
                sub.w   d1,$10(a0)
                rts
; ---------------------------------------------------------------------------

loc_EB8A:
                add.w   d1,$12(a0)

locret_EB8E:
                rts
; End of function Sonic_Move


; =============== S U B R O U T I N E =======================================


sub_EB90:
                move.w  $14(a0),d0
                beq.s   loc_EB98
                bpl.s   loc_EBC4

loc_EB98:
                bset    #0,$22(a0)
                bne.s   loc_EBAC
                bclr    #5,$22(a0)
                move.b  #1,$1D(a0)

loc_EBAC:
                sub.w   d5,d0
                move.w  d6,d1
                neg.w   d1
                cmp.w   d1,d0
                bgt.s   loc_EBB8
                move.w  d1,d0

loc_EBB8:
                move.w  d0,$14(a0)
                move.b  #0,$1C(a0)
                rts
; ---------------------------------------------------------------------------

loc_EBC4:
                sub.w   d4,d0
                bcc.s   loc_EBCC
                move.w  #$FF80,d0

loc_EBCC:
                move.w  d0,$14(a0)
                move.b  $26(a0),d0
                addi.b  #$20,d0 
                andi.b  #$C0,d0
                bne.s   locret_EBFA
                cmpi.w  #$400,d0
                blt.s   locret_EBFA
                move.b  #$D,$1C(a0)
                bclr    #0,$22(a0)
                move.w  #$A4,d0
                jsr     (PlaySound_Special).l

locret_EBFA:
                rts
; End of function sub_EB90


; =============== S U B R O U T I N E =======================================


sub_EBFC:
                move.w  $14(a0),d0
                bmi.s   loc_EC2A
                bclr    #0,$22(a0)
                beq.s   loc_EC16
                bclr    #5,$22(a0)
                move.b  #1,$1D(a0)

loc_EC16:
                add.w   d5,d0
                cmp.w   d6,d0
                blt.s   loc_EC1E
                move.w  d6,d0

loc_EC1E:
                move.w  d0,$14(a0)
                move.b  #0,$1C(a0)
                rts
; ---------------------------------------------------------------------------

loc_EC2A:
                add.w   d4,d0
                bcc.s   loc_EC32
                move.w  #$80,d0

loc_EC32:
                move.w  d0,$14(a0)
                move.b  $26(a0),d0
                addi.b  #$20,d0 
                andi.b  #$C0,d0
                bne.s   locret_EC60
                cmpi.w  #$FC00,d0
                bgt.s   locret_EC60
                move.b  #$D,$1C(a0)
                bset    #0,$22(a0)
                move.w  #$A4,d0
                jsr     (PlaySound_Special).l

locret_EC60:
                rts
; End of function sub_EBFC


; =============== S U B R O U T I N E =======================================


sub_EC62:
                move.w  ($FFFFF760).w,d6
                asl.w   #1,d6
                move.w  ($FFFFF762).w,d5
                asr.w   #1,d5
                move.w  ($FFFFF764).w,d4
                asr.w   #2,d4
                tst.w   $3E(a0)
                bne.s   loc_EC92
                btst    #2,($FFFFF602).w
                beq.s   loc_EC86
                bsr.w   sub_ECF8

loc_EC86:
                btst    #3,($FFFFF602).w
                beq.s   loc_EC92
                bsr.w   sub_ED1C

loc_EC92:
                move.w  $14(a0),d0
                beq.s   loc_ECB4
                bmi.s   loc_ECA8
                sub.w   d5,d0
                bcc.s   loc_ECA2
                move.w  #0,d0

loc_ECA2:
                move.w  d0,$14(a0)
                bra.s   loc_ECB4
; ---------------------------------------------------------------------------

loc_ECA8:
                add.w   d5,d0
                bcc.s   loc_ECB0
                move.w  #0,d0

loc_ECB0:
                move.w  d0,$14(a0)

loc_ECB4:
                tst.w   $14(a0)
                bne.s   loc_ECD6
                bclr    #2,$22(a0)
                move.b  #$13,$16(a0)
                move.b  #9,$17(a0)
                move.b  #5,$1C(a0)
                subq.w  #5,$C(a0)

loc_ECD6:
                move.b  $26(a0),d0
                jsr     (CalcSine).l
                muls.w  $14(a0),d1
                asr.l   #8,d1
                move.w  d1,$10(a0)
                muls.w  $14(a0),d0
                asr.l   #8,d0
                move.w  d0,$12(a0)
                bra.w   loc_EB34
; End of function sub_EC62


; =============== S U B R O U T I N E =======================================


sub_ECF8:
                move.w  $14(a0),d0
                beq.s   loc_ED00
                bpl.s   loc_ED0E

loc_ED00:
                bset    #0,$22(a0)
                move.b  #2,$1C(a0)
                rts
; ---------------------------------------------------------------------------

loc_ED0E:
                sub.w   d4,d0
                bcc.s   loc_ED16
                move.w  #$FF80,d0

loc_ED16:
                move.w  d0,$14(a0)
                rts
; End of function sub_ECF8


; =============== S U B R O U T I N E =======================================


sub_ED1C:
                move.w  $14(a0),d0
                bmi.s   loc_ED30
                bclr    #0,$22(a0)
                move.b  #2,$1C(a0)
                rts
; ---------------------------------------------------------------------------

loc_ED30:
                add.w   d4,d0
                bcc.s   loc_ED38
                move.w  #$80,d0

loc_ED38:
                move.w  d0,$14(a0)
                rts
; End of function sub_ED1C


; =============== S U B R O U T I N E =======================================


sub_ED3E:
                move.w  ($FFFFF760).w,d6
                move.w  ($FFFFF762).w,d5
                asl.w   #1,d5
                btst    #4,$22(a0)
                bne.s   loc_ED88
                move.w  $10(a0),d0
                btst    #2,($FFFFF604).w
                beq.s   loc_ED6E
                bset    #0,$22(a0)
                sub.w   d5,d0
                move.w  d6,d1
                neg.w   d1
                cmp.w   d1,d0
                bgt.s   loc_ED6E
                move.w  d1,d0

loc_ED6E:
                btst    #3,($FFFFF604).w
                beq.s   loc_ED84
                bclr    #0,$22(a0)
                add.w   d5,d0
                cmp.w   d6,d0
                blt.s   loc_ED84
                move.w  d6,d0

loc_ED84:
                move.w  d0,$10(a0)

loc_ED88:
                cmpi.w  #$60,($FFFFF73E).w 
                beq.s   loc_ED9A
                bcc.s   loc_ED96
                addq.w  #4,($FFFFF73E).w

loc_ED96:
                subq.w  #2,($FFFFF73E).w

loc_ED9A:
                cmpi.w  #$FC00,$12(a0)
                bcs.s   locret_EDC8
                move.w  $10(a0),d0
                move.w  d0,d1
                asr.w   #5,d1
                beq.s   locret_EDC8
                bmi.s   loc_EDBC
                sub.w   d1,d0
                bcc.s   loc_EDB6
                move.w  #0,d0

loc_EDB6:
                move.w  d0,$10(a0)
                rts
; ---------------------------------------------------------------------------

loc_EDBC:
                sub.w   d1,d0
                bcs.s   loc_EDC4
                move.w  #0,d0

loc_EDC4:
                move.w  d0,$10(a0)

locret_EDC8:
                rts
; End of function sub_ED3E

; ---------------------------------------------------------------------------
; ---------------------------------------------------------------------------
; Unused subroutine to squash Sonic
; ---------------------------------------------------------------------------
                move.b  $26(a0),d0
                addi.b  #$20,d0 
                andi.b  #$C0,d0
                bne.s   locret_EDF8
                bsr.w   sub_106E0
                tst.w   d1
                bpl.s   locret_EDF8
                move.w  #0,$14(a0)
                move.w  #0,$10(a0)
                move.w  #0,$12(a0)
                move.b  #$B,$1C(a0)

locret_EDF8:
                rts

; =============== S U B R O U T I N E =======================================


Sonic_LevelBound:
                move.l  8(a0),d1
                move.w  $10(a0),d0
                ext.l   d0
                asl.l   #8,d0
                add.l   d0,d1
                swap    d1
                move.w  ($FFFFF728).w,d0
                addi.w  #$10,d0
                cmp.w   d1,d0
                bhi.s   loc_EE34
                move.w  ($FFFFF72A).w,d0
                addi.w  #$128,d0
                cmp.w   d1,d0
                bls.s   loc_EE34
                move.w  ($FFFFF72E).w,d0
                addi.w  #$E0,d0
                cmp.w   $C(a0),d0
                bcs.w   loc_FD78
                rts
; ---------------------------------------------------------------------------

loc_EE34:
                move.w  d0,8(a0)
                move.w  #0,$A(a0)
                move.w  #0,$10(a0)
                move.w  #0,$14(a0)
                rts
; End of function Sonic_LevelBound


; =============== S U B R O U T I N E =======================================


Sonic_Roll:

                move.w  $14(a0),d0
                bpl.s   loc_EE54
                neg.w   d0

loc_EE54:
                cmpi.w  #$80,d0
                bcs.s   locret_EE6C
                move.b  ($FFFFF602).w,d0
                andi.b  #$C,d0
                bne.s   locret_EE6C
                btst    #1,($FFFFF602).w
                bne.s   loc_EE6E

locret_EE6C:
                rts
; End of function Sonic_Roll

; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR sub_F3E4
;   ADDITIONAL PARENT FUNCTION Sonic_Roll

loc_EE6E:
                btst    #2,$22(a0)
                beq.s   loc_EE78
                rts
; ---------------------------------------------------------------------------

loc_EE78:
                bset    #2,$22(a0)
                move.b  #$E,$16(a0)
                move.b  #7,$17(a0)
                move.b  #2,$1C(a0)
                addq.w  #5,$C(a0)
                move.w  #$BE,d0
                jsr     (PlaySound_Special).l
                tst.w   $14(a0)
                bne.s   locret_EEAA
                move.w  #$200,$14(a0)

locret_EEAA:
                rts
; END OF FUNCTION CHUNK FOR sub_F3E4


; ---------------------------------------------------------------------------
; Subroutine allowing Sonic to jump
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; sub_EEAC:
Sonic_Jump:
                move.b  ($FFFFF603).w,d0
                andi.b  #$70,d0
                beq.w   locret_EF46
                moveq   #0,d0
                move.b  $26(a0),d0
                addi.b  #-$80,d0
                bsr.w   sub_10520
                cmpi.w  #6,d1
                blt.w   locret_EF46
                moveq   #0,d0
                move.b  $26(a0),d0
                subi.b  #$40,d0
                jsr     (CalcSine).l
                muls.w  #$680,d1
                asr.l   #8,d1
                add.w   d1,$10(a0)
                muls.w  #$680,d0
                asr.l   #8,d0
                add.w   d0,$12(a0)
                bset    #1,$22(a0)
                bclr    #5,$22(a0)
                addq.l  #4,sp
                move.b  #1,$3C(a0)
                move.w  #$A0,d0
                jsr     (PlaySound_Special).l
                move.b  #$13,$16(a0)
                move.b  #9,$17(a0)
                tst.b   ($FFFFD600).w
                bne.s   loc_EF48
                btst    #2,$22(a0)
                bne.s   loc_EF50
                move.b  #$E,$16(a0)
                move.b  #7,$17(a0)
                move.b  #2,$1C(a0)
                bset    #2,$22(a0)
                addq.w  #5,$C(a0)

locret_EF46:
                rts
; ---------------------------------------------------------------------------

loc_EF48:
                move.b  #$13,$1C(a0)
                rts
; ---------------------------------------------------------------------------

loc_EF50:
                bset    #4,$22(a0)
                rts
; End of function Sonic_Jump


; ---------------------------------------------------------------------------
; Subroutine letting Sonic control the height of the jump
; when the jump button is released
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; ===========================================================================
; sub_EF58:
Sonic_JumpHeight:
                tst.b   $3C(a0)
                beq.s   loc_EF78
                cmpi.w  #$FC00,$12(a0)
                bge.s   locret_EF76
                move.b  ($FFFFF602).w,d0
                andi.b  #$70,d0
                bne.s   locret_EF76
                move.w  #$FC00,$12(a0)

locret_EF76:
                rts
; ---------------------------------------------------------------------------

loc_EF78:
                cmpi.w  #$F040,$12(a0)
                bge.s   locret_EF86
                move.w  #$F040,$12(a0)

locret_EF86:
                rts
; End of function Sonic_JumpHeight


; =============== S U B R O U T I N E =======================================


Sonic_SlopeResist:
                move.b  $26(a0),d0
                addi.b  #$60,d0 
                cmpi.b  #$C0,d0
                bcc.s   locret_EFBC
                move.b  $26(a0),d0
                jsr     (CalcSine).l
                muls.w  #$20,d0 
                asr.l   #8,d0
                tst.w   $14(a0)
                beq.s   locret_EFBC
                bmi.s   loc_EFB8
                tst.w   d0
                beq.s   locret_EFB6
                add.w   d0,$14(a0)

locret_EFB6:
                rts
; ---------------------------------------------------------------------------

loc_EFB8:
                add.w   d0,$14(a0)

locret_EFBC:
                rts
; End of function Sonic_SlopeResist


; =============== S U B R O U T I N E =======================================


sub_EFBE:
                move.b  $26(a0),d0
                addi.b  #$60,d0
                cmpi.b  #$C0,d0
                bcc.s   locret_EFF8
                move.b  $26(a0),d0
                jsr     (CalcSine).l
                muls.w  #$50,d0 
                asr.l   #8,d0
                tst.w   $14(a0)
                bmi.s   loc_EFEE
                tst.w   d0
                bpl.s   loc_EFE8
                asr.l   #2,d0

loc_EFE8:
                add.w   d0,$14(a0)
                rts
; ---------------------------------------------------------------------------

loc_EFEE:
                tst.w   d0
                bmi.s   loc_EFF4
                asr.l   #2,d0

loc_EFF4:
                add.w   d0,$14(a0)

locret_EFF8:
                rts
; End of function sub_EFBE


; =============== S U B R O U T I N E =======================================


Sonic_SlopeRepel:
                nop
                tst.w   $3E(a0)
                bne.s   loc_F02C
                move.b  $26(a0),d0
                addi.b  #$20,d0 
                andi.b  #$C0,d0
                beq.s   locret_F02A
                move.w  $14(a0),d0
                bpl.s   loc_F018
                neg.w   d0

loc_F018:
                cmpi.w  #$280,d0
                bcc.s   locret_F02A
                bset    #1,$22(a0)
                move.w  #$1E,$3E(a0)

locret_F02A:
                rts
; ---------------------------------------------------------------------------

loc_F02C:
                subq.w  #1,$3E(a0)
                rts
; End of function Sonic_SlopeRepel


; =============== S U B R O U T I N E =======================================


sub_F032:
                move.b  $26(a0),d0
                beq.s   locret_F04C
                bpl.s   loc_F042
                addq.b  #2,d0
                bcc.s   loc_F040
                moveq   #0,d0

loc_F040:
                bra.s   loc_F048
; ---------------------------------------------------------------------------

loc_F042:
                subq.b  #2,d0
                bcc.s   loc_F048
                moveq   #0,d0

loc_F048:
                move.b  d0,$26(a0)

locret_F04C:
                rts
; End of function sub_F032


; =============== S U B R O U T I N E =======================================


sub_F04E:
                move.w  $10(a0),d1
                move.w  $12(a0),d2
                jsr     (CalcAngle).l
                subi.b  #$20,d0 
                andi.b  #$C0,d0
                cmpi.b  #$40,d0 
                beq.w   loc_F104
                cmpi.b  #$80,d0
                beq.w   loc_F160
                cmpi.b  #$C0,d0
                beq.w   loc_F1BC

loc_F07C:
                bsr.w   sub_1081A
                tst.w   d1
                bpl.s   loc_F08E
                sub.w   d1,8(a0)
                move.w  #0,$10(a0)

loc_F08E:
                bsr.w   sub_1068C
                tst.w   d1
                bpl.s   loc_F0A0
                add.w   d1,8(a0)
                move.w  #0,$10(a0)

loc_F0A0:
                bsr.w   sub_10548
                tst.w   d1
                bpl.s   locret_F102
                move.b  $12(a0),d0
                addq.b  #8,d0
                neg.b   d0
                cmp.b   d0,d1
                blt.s   locret_F102
                add.w   d1,$C(a0)
                move.b  d3,$26(a0)
                bsr.w   sub_F218
                move.b  #0,$1C(a0)
                move.b  d3,d0
                addi.b  #$20,d0 
                andi.b  #$40,d0 
                bne.s   loc_F0E0
                move.w  #0,$12(a0)
                move.w  $10(a0),$14(a0)
                rts
; ---------------------------------------------------------------------------

loc_F0E0:
                move.w  #0,$10(a0)
                cmpi.w  #$FC0,$12(a0)
                ble.s   loc_F0F4
                move.w  #$FC0,$12(a0)

loc_F0F4:
                move.w  $12(a0),$14(a0)
                tst.b   d3
                bpl.s   locret_F102
                neg.w   $14(a0)

locret_F102:
                rts
; ---------------------------------------------------------------------------

loc_F104:
                bsr.w   sub_1081A
                tst.w   d1
                bpl.s   loc_F11E
                sub.w   d1,8(a0)
                move.w  #0,$10(a0)
                move.w  $12(a0),$14(a0)
                rts
; ---------------------------------------------------------------------------

loc_F11E:
                bsr.w   sub_106E0
                tst.w   d1
                bpl.s   loc_F132
                sub.w   d1,$C(a0)
                move.w  #0,$12(a0)
                rts
; ---------------------------------------------------------------------------

loc_F132:
                tst.w   $12(a0)
                bmi.s   locret_F15E
                bsr.w   sub_10548
                tst.w   d1
                bpl.s   locret_F15E
                add.w   d1,$C(a0)
                move.b  d3,$26(a0)
                bsr.w   sub_F218
                move.b  #0,$1C(a0)
                move.w  #0,$12(a0)
                move.w  $10(a0),$14(a0)

locret_F15E:
                rts
; ---------------------------------------------------------------------------

loc_F160:
                bsr.w   sub_1081A
                tst.w   d1
                bpl.s   loc_F172
                sub.w   d1,8(a0)
                move.w  #0,$10(a0)

loc_F172:
                bsr.w   sub_1068C
                tst.w   d1
                bpl.s   loc_F184
                add.w   d1,8(a0)
                move.w  #0,$10(a0)

loc_F184:
                bsr.w   sub_106E0
                tst.w   d1
                bpl.s   locret_F1BA
                sub.w   d1,$C(a0)
                move.b  d3,d0
                addi.b  #$20,d0 
                andi.b  #$40,d0 
                bne.s   loc_F1A4
                move.w  #0,$12(a0)
                rts
; ---------------------------------------------------------------------------

loc_F1A4:
                move.b  d3,$26(a0)
                bsr.w   sub_F218
                move.w  $12(a0),$14(a0)
                tst.b   d3
                bpl.s   locret_F1BA
                neg.w   $14(a0)

locret_F1BA:
                rts
; ---------------------------------------------------------------------------

loc_F1BC:
                bsr.w   sub_1068C
                tst.w   d1
                bpl.s   loc_F1D6
                add.w   d1,8(a0)
                move.w  #0,$10(a0)
                move.w  $12(a0),$14(a0)
                rts
; ---------------------------------------------------------------------------

loc_F1D6:
                bsr.w   sub_106E0
                tst.w   d1
                bpl.s   loc_F1EA
                sub.w   d1,$C(a0)
                move.w  #0,$12(a0)
                rts
; ---------------------------------------------------------------------------

loc_F1EA:
                tst.w   $12(a0)
                bmi.s   locret_F216
                bsr.w   sub_10548
                tst.w   d1
                bpl.s   locret_F216
                add.w   d1,$C(a0)
                move.b  d3,$26(a0)
                bsr.w   sub_F218
                move.b  #0,$1C(a0)
                move.w  #0,$12(a0)
                move.w  $10(a0),$14(a0)

locret_F216:
                rts
; End of function sub_F04E


; =============== S U B R O U T I N E =======================================


sub_F218:
                btst    #4,$22(a0)
                beq.s   loc_F226
                nop
                nop
                nop

loc_F226:
                bclr    #5,$22(a0)
                bclr    #1,$22(a0)
                bclr    #4,$22(a0)
                btst    #2,$22(a0)
                beq.s   loc_F25C
                bclr    #2,$22(a0)
                move.b  #$13,$16(a0)
                move.b  #9,$17(a0)
                move.b  #0,$1C(a0)
                subq.w  #5,$C(a0)

loc_F25C:
                move.w  #0,$3E(a0)
                move.b  #0,$3C(a0)
                rts
; End of function sub_F218

; ---------------------------------------------------------------------------
                dc.b $43 ; C
                dc.b $F8
                dc.b $D4
                dc.b   0
                dc.b $30 ; 0
                dc.b $28 ; (
                dc.b   0
                dc.b   8
                dc.b $61 
                dc.b   0
                dc.b   0
                dc.b $1C
                dc.b $43 ; C
                dc.b $F8
                dc.b $D5
                dc.b   0
                dc.b $30 ; 0
                dc.b $28 ; (
                dc.b   0
                dc.b  $C
                dc.b $61 
                dc.b   0
                dc.b   0
                dc.b $10
                dc.b $43 ; C
                dc.b $F8
                dc.b $D6
                dc.b   0
                dc.b $30 ; 0
                dc.b $28 ; (
                dc.b   0
                dc.b $14
                dc.b $61 
                dc.b   0
                dc.b   0
                dc.b   4
                dc.b $4E ; N
                dc.b $75 ; u
                dc.b $48 ; H
                dc.b $40 ; @
                dc.b $E9
                dc.b $98
                dc.b   2
                dc.b   0
                dc.b   0
                dc.b  $F
                dc.b $13
                dc.b $40 ; @
                dc.b   0
                dc.b $1A
                dc.b $E9
                dc.b $98
                dc.b   2
                dc.b   0
                dc.b   0
                dc.b  $F
                dc.b $13
                dc.b $40 ; @
                dc.b   0
                dc.b $5A ; Z
                dc.b $E9
                dc.b $98
                dc.b   2
                dc.b   0
                dc.b   0
                dc.b  $F
                dc.b $13
                dc.b $40 ; @
                dc.b   0
                dc.b $9A
                dc.b $E9
                dc.b $98
                dc.b   2
                dc.b   0
                dc.b   0
                dc.b  $F
                dc.b $13
                dc.b $40 ; @
                dc.b   0
                dc.b $DA
                dc.b $4E ; N
                dc.b $75 ; u
; ---------------------------------------------------------------------------

Obj01_Hurt:
                bsr.w   sub_F2DE
                bsr.w   ObjectMove
                addi.w  #$30,$12(a0) 
                bsr.w   Sonic_LevelBound
                bsr.w   Sonic_RecordPos
                bsr.w   Sonic_Animate
                bsr.w   Sonic_LoadDPLCs
                bra.w   DisplaySprite

; =============== S U B R O U T I N E =======================================


sub_F2DE:
                move.w  ($FFFFF72E).w,d0
                addi.w  #$E0,d0
                cmp.w   $C(a0),d0
                bcs.w   loc_FD78
                bsr.w   loc_F07C
                btst    #1,$22(a0)
                bne.s   locret_F318
                moveq   #0,d0
                move.w  d0,$12(a0)
                move.w  d0,$10(a0)
                move.w  d0,$14(a0)
                move.b  #0,$1C(a0)
                subq.b  #2,$24(a0)
                move.w  #$78,$30(a0) 

locret_F318:
                rts
; End of function sub_F2DE

; ---------------------------------------------------------------------------

Obj01_Death:
                bsr.w   sub_F332
                bsr.w   ObjectMoveAndFall
                bsr.w   Sonic_RecordPos
                bsr.w   Sonic_Animate
                bsr.w   Sonic_LoadDPLCs
                bra.w   DisplaySprite

; =============== S U B R O U T I N E =======================================


sub_F332:
                move.w  ($FFFFF72E).w,d0
                addi.w  #$100,d0
                cmp.w   $C(a0),d0
                bcc.w   locret_F3AE
                move.w  #$FFC8,$12(a0)
                addq.b  #2,$24(a0)
                addq.b  #1,($FFFFFE1C).w
                subq.b  #1,($FFFFFE12).w
                bne.s   loc_F380
                move.w  #0,$3A(a0)
                move.b  #$39,($FFFFD080).w 
                move.b  #$39,($FFFFD0C0).w
                move.b  #1,($FFFFD0DA).w
                move.w  #$8F,d0
                jsr     (PlaySound_Special).l
                moveq   #3,d0
                jmp     (LoadPLCs).l
; ---------------------------------------------------------------------------

loc_F380:
                move.w  #$3C,$3A(a0) 
                rts
; ---------------------------------------------------------------------------
                dc.b $10
                dc.b $38 ; 8
                dc.b $F6
                dc.b   3
                dc.b   2
                dc.b   0
                dc.b   0
                dc.b $70 ; p
                dc.b $67 ; g
                dc.b $1C
                dc.b   2
                dc.b   0
                dc.b   0
                dc.b $40 ; @
                dc.b $66 
                dc.b $18
                dc.b $11
                dc.b $7C ; |
                dc.b   0
                dc.b   0
                dc.b   0
                dc.b $1C
                dc.b $59 ; Y
                dc.b $28 ; (
                dc.b   0
                dc.b $24 ; $
                dc.b $31 ; 1
                dc.b $68 ; h
                dc.b   0
                dc.b $38 ; 8
                dc.b   0
                dc.b  $C
                dc.b $31 ; 1
                dc.b $7C ; |
                dc.b   0
                dc.b $78 ; x
                dc.b   0
                dc.b $30 ; 0
; ---------------------------------------------------------------------------

locret_F3AE:
                rts
; End of function sub_F332

; ---------------------------------------------------------------------------
                move.w  #1,($FFFFFE02).w
                rts
; ---------------------------------------------------------------------------

Obj01_ResetLevel:
                tst.w   $3A(a0)
                beq.s   locret_F3CA
                subq.w  #1,$3A(a0)
                bne.s   locret_F3CA
                move.w  #1,($FFFFFE02).w

locret_F3CA:
                rts
; ---------------------------------------------------------------------------
                dc.b $12
                dc.b   9
                dc.b $A
                dc.b $12
                dc.b   9
                dc.b  $A
                dc.b $12
                dc.b   9
                dc.b $A
                dc.b $12
                dc.b   9
                dc.b  $A
                dc.b $12
                dc.b   9
                dc.b $A
                dc.b $12
                dc.b   9
                dc.b $12
                dc.b  $E
                dc.b   7
                dc.b  $A
                dc.b  $E
                dc.b   7
                dc.b  $A

; =============== S U B R O U T I N E =======================================


sub_F3E4:

                cmpi.b  #3,($FFFFFE10).w
                beq.s   loc_F3F4
                tst.b   ($FFFFFE10).w
                bne.w   locret_F490

loc_F3F4:
                move.w  $C(a0),d0
                lsr.w   #1,d0
                andi.w  #$380,d0
                move.w  8(a0),d1
                move.w  d1,d2
                lsr.w   #8,d1
                andi.w  #$7F,d1
                add.w   d1,d0
                lea     ($FFFFA400).w,a1
                move.b  (a1,d0.w),d1
                cmp.b   ($FFFFF7AE).w,d1
                beq.w   loc_EE6E
                cmp.b   ($FFFFF7AF).w,d1
                beq.w   loc_EE6E
                cmp.b   ($FFFFF7AC).w,d1
                beq.s   loc_F448
                cmp.b   ($FFFFF7AD).w,d1
                beq.s   loc_F438
                bclr    #6,1(a0)
                rts
; ---------------------------------------------------------------------------

loc_F438:
                btst    #1,$22(a0)
                beq.s   loc_F448
                bclr    #6,1(a0)
                rts
; ---------------------------------------------------------------------------

loc_F448:
                cmpi.b  #$2C,d2
                bcc.s   loc_F456
                bclr    #6,1(a0)
                rts
; ---------------------------------------------------------------------------

loc_F456:
                cmpi.b  #$E0,d2
                bcs.s   loc_F464
                bset    #6,1(a0)
                rts
; ---------------------------------------------------------------------------

loc_F464:
                btst    #6,1(a0)
                bne.s   loc_F480
                move.b  $26(a0),d1
                beq.s   locret_F490
                cmpi.b  #$80,d1
                bhi.s   locret_F490
                bset    #6,1(a0)
                rts
; ---------------------------------------------------------------------------

loc_F480:
                move.b  $26(a0),d1
                cmpi.b  #$80,d1
                bls.s   locret_F490
                bclr    #6,1(a0)

locret_F490:
                rts
; End of function sub_F3E4


; =============== S U B R O U T I N E =======================================


Sonic_Animate:

                lea     (Ani_Sonic).l,a1
                moveq   #0,d0
                move.b  $1C(a0),d0
                cmp.b   $1D(a0),d0
                beq.s   loc_F4B4
                move.b  d0,$1D(a0)
                move.b  #0,$1B(a0)
                move.b  #0,$1E(a0)

loc_F4B4:
                add.w   d0,d0
                adda.w  (a1,d0.w),a1
                move.b  (a1),d0
                bmi.s   loc_F520
                move.b  $22(a0),d1
                andi.b  #1,d1
                andi.b  #$FC,1(a0)
                or.b    d1,1(a0)
                subq.b  #1,$1E(a0)
                bpl.s   locret_F4EE
                move.b  d0,$1E(a0)
; End of function Sonic_Animate


; =============== S U B R O U T I N E =======================================


sub_F4DA:
                moveq   #0,d1
                move.b  $1B(a0),d1
                move.b  1(a1,d1.w),d0
                bmi.s   loc_F4F0

loc_F4E6:
                move.b  d0,$1A(a0)
                addq.b  #1,$1B(a0)

locret_F4EE:
                rts
; ---------------------------------------------------------------------------

loc_F4F0:
                addq.b  #1,d0
                bne.s   loc_F500
                move.b  #0,$1B(a0)
                move.b  1(a1),d0
                bra.s   loc_F4E6
; ---------------------------------------------------------------------------

loc_F500:
                addq.b  #1,d0
                bne.s   loc_F514
                move.b  2(a1,d1.w),d0
                sub.b   d0,$1B(a0)
                sub.b   d0,d1
                move.b  1(a1,d1.w),d0
                bra.s   loc_F4E6
; ---------------------------------------------------------------------------

loc_F514:
                addq.b  #1,d0
                bne.s   locret_F51E
                move.b  2(a1,d1.w),$1C(a0)

locret_F51E:
                rts
; End of function sub_F4DA

; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR Sonic_Animate

loc_F520:
                subq.b  #1,$1E(a0)
                bpl.s   locret_F4EE
                addq.b  #1,d0
                bne.w   loc_F5A0
                moveq   #0,d1
                move.b  $26(a0),d0
                move.b  $22(a0),d2
                andi.b  #1,d2
                bne.s   loc_F53E
                not.b   d0

loc_F53E:
                addi.b  #$10,d0
                bpl.s   loc_F546
                moveq   #3,d1

loc_F546:
                andi.b  #$FC,1(a0)
                eor.b   d1,d2
                or.b    d2,1(a0)
                btst    #5,$22(a0)
                bne.w   loc_F5E4
                lsr.b   #4,d0
                andi.b  #6,d0
                move.w  $14(a0),d2
                bpl.s   loc_F56A
                neg.w   d2

loc_F56A:
                lea     (entry_f654).l,a1
                cmpi.w  #$600,d2
                bcc.s   loc_F582
                lea     (entry_f64c).l,a1
                move.b  d0,d1
                lsr.b   #1,d1
                add.b   d1,d0

loc_F582:
                add.b   d0,d0
                move.b  d0,d3
                neg.w   d2
                addi.w  #$800,d2
                bpl.s   loc_F590
                moveq   #0,d2

loc_F590:
                lsr.w   #8,d2
                move.b  d2,$1E(a0)
                bsr.w   sub_F4DA
                add.b   d3,$1A(a0)
                rts
; ---------------------------------------------------------------------------

loc_F5A0:
                addq.b  #1,d0
                bne.s   loc_F5E4
                move.w  $14(a0),d2
                bpl.s   loc_F5AC
                neg.w   d2

loc_F5AC:
                lea     (entry_f664).l,a1
                cmpi.w  #$600,d2
                bcc.s   loc_F5BE
                lea     (entry_f65c).l,a1

loc_F5BE:
                neg.w   d2
                addi.w  #$400,d2
                bpl.s   loc_F5C8
                moveq   #0,d2

loc_F5C8:
                lsr.w   #8,d2
                move.b  d2,$1E(a0)
                move.b  $22(a0),d1
                andi.b  #1,d1
                andi.b  #$FC,1(a0)
                or.b    d1,1(a0)
                bra.w   sub_F4DA
; ---------------------------------------------------------------------------

loc_F5E4:
                move.w  $14(a0),d2
                bmi.s   loc_F5EC
                neg.w   d2

loc_F5EC:
                addi.w  #$800,d2
                bpl.s   loc_F5F4
                moveq   #0,d2

loc_F5F4:
                lsr.w   #6,d2
                move.b  d2,$1E(a0)
                lea     (entry_f66c).l,a1
                move.b  $22(a0),d1
                andi.b  #1,d1
                andi.b  #$FC,1(a0)
                or.b    d1,1(a0)
                bra.w   sub_F4DA
; END OF FUNCTION CHUNK FOR Sonic_Animate
; ---------------------------------------------------------------------------
Ani_Sonic:      include "Ani/Sonic.asm"
; LoadSonicDynPLC:

; =============== S U B R O U T I N E =======================================


Sonic_LoadDPLCs:
                moveq   #0,d0
                move.b  $1A(a0),d0
                cmp.b   ($FFFFF766).w,d0
                beq.s   locret_F744
                move.b  d0,($FFFFF766).w
                lea     (SonicDynPLC).l,a2
                add.w   d0,d0
                adda.w  (a2,d0.w),a2
                moveq   #0,d1
                move.b  (a2)+,d1
                subq.b  #1,d1
                bmi.s   locret_F744
                lea     ($FFFFC800).w,a3
                move.b  #1,($FFFFF767).w

loc_F71A:
                moveq   #0,d2
                move.b  (a2)+,d2
                move.w  d2,d0
                lsr.b   #4,d0
                lsl.w   #8,d2
                move.b  (a2)+,d2
                lsl.w   #5,d2
                lea     (Art_Sonic).l,a1
                adda.l  d2,a1

loc_F730:
                movem.l (a1)+,d2-d6/a4-a6
                movem.l d2-d6/a4-a6,(a3)
                lea     $20(a3),a3
                dbf     d0,loc_F730
                dbf     d1,loc_F71A

locret_F744:
                rts
; End of function Sonic_LoadDPLCs


; =============== S U B R O U T I N E =======================================


Obj38:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  index_f754(pc,d0.w),d1
                jmp     index_f754(pc,d1.w)
; End of function Obj38

; ---------------------------------------------------------------------------
index_f754:     dc.w entry_F75A-*
                dc.w entry_f792-index_f754
                dc.w entry_f7c6-index_f754
; ---------------------------------------------------------------------------

entry_F75A:
                addq.b  #2,$24(a0)
                move.l  #unk_F938,4(a0)
                move.b  #4,1(a0)
                move.b  #1,$19(a0)
                move.b  #$10,$18(a0)
                tst.b   $1C(a0)
                bne.s   loc_F786
                move.w  #$541,2(a0)
                rts
; ---------------------------------------------------------------------------

loc_F786:
                addq.b  #2,$24(a0)
                move.w  #$55C,2(a0)
                rts
; ---------------------------------------------------------------------------

entry_f792:
                tst.b   ($FFFFFE2D).w
                bne.s   locret_F7C0
                tst.b   ($FFFFFE2C).w
                beq.s   loc_F7C2
                move.w  ($FFFFD008).w,8(a0)
                move.w  ($FFFFD00C).w,$C(a0)
                move.b  ($FFFFD022).w,$22(a0)
                lea     (unk_F8D2).l,a1
                jsr     (AnimateObject).l
                bsr.w   DisplaySprite

locret_F7C0:
                rts
; ---------------------------------------------------------------------------

loc_F7C2:
                bra.w   DeleteObject
; ---------------------------------------------------------------------------

entry_f7c6:
                tst.b   ($FFFFFE2D).w
                beq.s   loc_F836
                move.w  ($FFFFF7A8).w,d0
                move.b  $1C(a0),d1
                subq.b  #1,d1
                bra.s   loc_F7F0
; ---------------------------------------------------------------------------
                lsl.b   #4,d1
                addq.b  #4,d1
                sub.b   d1,d0
                move.b  $30(a0),d1
                sub.b   d1,d0
                addq.b  #4,d1
                andi.b  #$F,d1
                move.b  d1,$30(a0)
                bra.s   loc_F810
; ---------------------------------------------------------------------------

loc_F7F0:
                lsl.b   #3,d1
                move.b  d1,d2
                add.b   d1,d1
                add.b   d2,d1
                addq.b  #4,d1
                sub.b   d1,d0
                move.b  $30(a0),d1
                sub.b   d1,d0
                addq.b  #4,d1
                cmpi.b  #$18,d1
                bcs.s   loc_F80C
                moveq   #0,d1

loc_F80C:
                move.b  d1,$30(a0)

loc_F810:
                lea     ($FFFFCB00).w,a1
                lea     (a1,d0.w),a1
                move.w  (a1)+,8(a0)
                move.w  (a1)+,$C(a0)
                move.b  ($FFFFD022).w,$22(a0)
                lea     (unk_F8D2).l,a1
                jsr     (AnimateObject).l
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------

loc_F836:
                bra.w   DeleteObject
; ---------------------------------------------------------------------------

ObjSpecialWarp:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  index_f848(pc,d0.w),d1
                jmp     index_f848(pc,d1.w)
; ---------------------------------------------------------------------------
index_f848:     dc.w entry_F84E-*
                dc.w entry_f880-index_f848
                dc.w entry_f8c0-index_f848
; ---------------------------------------------------------------------------

entry_F84E:
                tst.l   ($FFFFF680).w
                beq.s   loc_F856
                rts
; ---------------------------------------------------------------------------

loc_F856:
                addq.b  #2,$24(a0)
                move.l  #unk_F9F2,4(a0)
                move.b  #4,1(a0)
                move.b  #1,$19(a0)
                move.b  #$38,$18(a0) 
                move.w  #$541,2(a0)
                move.w  #$78,$30(a0)

entry_f880:
                move.w  ($FFFFD008).w,8(a0)
                move.w  ($FFFFD00C).w,$C(a0)
                move.b  ($FFFFD022).w,$22(a0)
                lea     (unk_F9DC).l,a1
                jsr     (AnimateObject).l
                cmpi.b  #2,$1A(a0)
                bne.s   loc_F8BC
                tst.b   ($FFFFD000).w
                beq.s   loc_F8BC
                move.b  #0,($FFFFD000).w
                move.w  #$A8,d0
                jsr     (PlaySound_Special).l

loc_F8BC:
                bra.w   DisplaySprite
; ---------------------------------------------------------------------------

entry_f8c0:
                subq.w  #1,$30(a0)
                bne.s   locret_F8D0
                move.b  #1,($FFFFD000).w
                bra.w   DeleteObject
; ---------------------------------------------------------------------------

locret_F8D0:
                rts
; ---------------------------------------------------------------------------
unk_F8D2:       dc.b   0
                dc.b  $A
                dc.b   0
                dc.b $12
                dc.b   0
                dc.b $18
                dc.b   0
                dc.b $32 ; 2
                dc.b   0
                dc.b $4C ; L
                dc.b   1
                dc.b   1
                dc.b   0
                dc.b   2
                dc.b   0
                dc.b   3
                dc.b   0
                dc.b $FF
                dc.b   5
                dc.b   4
                dc.b   5
                dc.b   6
                dc.b   7
                dc.b $FF
                dc.b   0
                dc.b   4
                dc.b   4
                dc.b   0
                dc.b   4
                dc.b   4
                dc.b   0
                dc.b   5
                dc.b   5
                dc.b   0
                dc.b   5
                dc.b   5
                dc.b   0
                dc.b   6
                dc.b   6
                dc.b   0
                dc.b   6
                dc.b   6
                dc.b   0
                dc.b   7
                dc.b   7
                dc.b   0
                dc.b   7
                dc.b   7
                dc.b   0
                dc.b $FF
                dc.b   0
                dc.b   4
                dc.b   4
                dc.b   0
                dc.b   4
                dc.b   0
                dc.b   0
                dc.b   5
                dc.b   5
                dc.b   0
                dc.b   5
                dc.b   0
                dc.b   0
                dc.b   6
                dc.b   6
                dc.b   0
                dc.b   6
                dc.b   0
                dc.b   0
                dc.b   7
                dc.b   7
                dc.b   0
                dc.b   7
                dc.b   0
                dc.b   0
                dc.b $FF
                dc.b   0
                dc.b   4
                dc.b   0
                dc.b   0
                dc.b   4
                dc.b   0
                dc.b   0
                dc.b   5
                dc.b   0
                dc.b   0
                dc.b   5
                dc.b   0
                dc.b   0
                dc.b   6
                dc.b   0
                dc.b   0
                dc.b   6
                dc.b   0
                dc.b   0
                dc.b   7
                dc.b   0
                dc.b   0
                dc.b   7
                dc.b   0
                dc.b   0
                dc.b $FF
unk_F938:       dc.b   0
                dc.b $1B
                dc.b   0
                dc.b $10
                dc.b   0
                dc.b $25 ; %
                dc.b   0
                dc.b $3A ; :
                dc.b   0
                dc.b $4F ; O
                dc.b   0
                dc.b $64 ; d
                dc.b   0
                dc.b $79 ; y
                dc.b   0
                dc.b $8E
                dc.b   4
                dc.b $E8
                dc.b  $A
                dc.b   0
                dc.b   0
                dc.b $E8
                dc.b $E8
                dc.b  $A
                dc.b   0
                dc.b   9
                dc.b   0
                dc.b   0
                dc.b  $A
                dc.b $10
                dc.b   0
                dc.b $E8
                dc.b   0
                dc.b  $A
                dc.b $10
                dc.b   9
                dc.b   0
                dc.b   4
                dc.b $E8
                dc.b  $A
                dc.b   8
                dc.b $12
                dc.b $E9
                dc.b $E8
                dc.b  $A
                dc.b   0
                dc.b $12
                dc.b   0
                dc.b   0
                dc.b  $A
                dc.b $18
                dc.b $12
                dc.b $E9
                dc.b   0
                dc.b  $A
                dc.b $10
                dc.b $12
                dc.b   0
                dc.b   4
                dc.b $E8
                dc.b  $A
                dc.b   8
                dc.b   9
                dc.b $E8
                dc.b $E8
                dc.b  $A
                dc.b   8
                dc.b   0
                dc.b   0
                dc.b   0
                dc.b  $A
                dc.b $18
                dc.b   9
                dc.b $E8
                dc.b   0
                dc.b  $A
                dc.b $18
                dc.b   0
                dc.b   0
                dc.b   4
                dc.b $E8
                dc.b  $A
                dc.b   0
                dc.b   0
                dc.b $E8
                dc.b $E8
                dc.b  $A
                dc.b   0
                dc.b   9
                dc.b   0
                dc.b   0
                dc.b  $A
                dc.b $18
                dc.b   9
                dc.b $E8
                dc.b   0
                dc.b  $A
                dc.b $18
                dc.b   0
                dc.b   0
                dc.b   4
                dc.b $E8
                dc.b  $A
                dc.b   8
                dc.b   9
                dc.b $E8
                dc.b $E8
                dc.b  $A
                dc.b   8
                dc.b   0
                dc.b   0
                dc.b   0
                dc.b  $A
                dc.b $10
                dc.b   0
                dc.b $E8
                dc.b   0
                dc.b  $A
                dc.b $10
                dc.b   9
                dc.b   0
                dc.b   4
                dc.b $E8
                dc.b  $A
                dc.b   0
                dc.b $12
                dc.b $E8
                dc.b $E8
                dc.b  $A
                dc.b   0
                dc.b $1B
                dc.b   0
                dc.b   0
                dc.b  $A
                dc.b $18
                dc.b $1B
                dc.b $E8
                dc.b   0
                dc.b  $A
                dc.b $18
                dc.b $12
                dc.b   0
                dc.b   4
                dc.b $E8
                dc.b  $A
                dc.b   8
                dc.b $1B
                dc.b $E8
                dc.b $E8
                dc.b  $A
                dc.b   8
                dc.b $12
                dc.b   0
                dc.b   0
                dc.b  $A
                dc.b $10
                dc.b $12
                dc.b $E8
                dc.b   0
                dc.b  $A
                dc.b $10
                dc.b $1B
                dc.b   0
                dc.b   0
unk_F9DC:       dc.b   0
                dc.b   2
                dc.b   5
                dc.b   0
                dc.b   1
                dc.b   0
                dc.b   1
                dc.b   0
                dc.b   7
                dc.b   1
                dc.b   7
                dc.b   2
                dc.b   7
                dc.b   3
                dc.b   7
                dc.b   4
                dc.b   7
                dc.b   5
                dc.b   7
                dc.b   6
                dc.b   7
                dc.b $FC
unk_F9F2:       dc.b   0
                dc.b $10
                dc.b   0
                dc.b $20
                dc.b   0
                dc.b $30 ; 0
                dc.b   0
                dc.b $4A ; J
                dc.b   0
                dc.b $78 ; x
                dc.b   0
                dc.b $D3
                dc.b   1
                dc.b $29 ; )
                dc.b   1
                dc.b $53 ; S
                dc.b   3
                dc.b $F8
                dc.b   0
                dc.b   0
                dc.b   0
                dc.b   8
                dc.b   0
                dc.b   4
                dc.b   0
                dc.b   1
                dc.b   0
                dc.b   8
                dc.b   0
                dc.b $10
                dc.b   0
                dc.b   8
                dc.b   3
                dc.b $F0
                dc.b  $D
                dc.b   0
                dc.b   3
                dc.b $F0
                dc.b   0
                dc.b  $C
                dc.b   0
                dc.b  $B
                dc.b $F0
                dc.b   8
                dc.b  $D
                dc.b $10
                dc.b   3
                dc.b $F0
                dc.b   5
                dc.b $E4
                dc.b  $E
                dc.b   0
                dc.b  $F
                dc.b $F4
                dc.b $EC
                dc.b   2
                dc.b   0
                dc.b $1B
                dc.b $EC
                dc.b $FC
                dc.b  $C
                dc.b   0
                dc.b $1E
                dc.b $F4
                dc.b   4
                dc.b  $E
                dc.b $10
                dc.b  $F
                dc.b $F4
                dc.b   4
                dc.b   1
                dc.b $10
                dc.b $1B
                dc.b $EC
                dc.b   9
                dc.b $F0
                dc.b   8
                dc.b   0
                dc.b $22 ; "
                dc.b $F8
                dc.b $F8
                dc.b  $E
                dc.b   0
                dc.b $25 ; %
                dc.b $F0
                dc.b $10
                dc.b   8
                dc.b   0
                dc.b $31 ; 1
                dc.b $F0
                dc.b   0
                dc.b   5
                dc.b   0
                dc.b $34 ; 4
                dc.b $10
                dc.b $F8
                dc.b   0
                dc.b   8
                dc.b $25 ; %
                dc.b $10
                dc.b $F0
                dc.b   0
                dc.b $18
                dc.b $36 ; 6
                dc.b $18
                dc.b $F8
                dc.b   0
                dc.b $18
                dc.b $25 ; %
                dc.b $20
                dc.b   0
                dc.b   0
                dc.b   8
                dc.b $25 ; %
                dc.b $28 ; (
                dc.b $F8
                dc.b   0
                dc.b   0
                dc.b $25 ; %
                dc.b $30 ; 0
                dc.b $12
                dc.b   0
                dc.b   0
                dc.b $18
                dc.b $25 ; %
                dc.b $F0
                dc.b $F8
                dc.b   4
                dc.b   0
                dc.b $38 ; 8
                dc.b $F8
                dc.b $F0
                dc.b   0
                dc.b   0
                dc.b $26 ; &
                dc.b   8
                dc.b   0
                dc.b   0
                dc.b   0
                dc.b $25 ; %
                dc.b   0
                dc.b   8
                dc.b   0
                dc.b $18
                dc.b $25 ; %
                dc.b $F8
                dc.b $10
                dc.b   0
                dc.b $10
                dc.b $26 ; &
                dc.b   0
                dc.b   8
                dc.b   0
                dc.b $10
                dc.b $38 ; 8
                dc.b   8
                dc.b $F8
                dc.b   0
                dc.b   0
                dc.b $29 ; )
                dc.b $10
                dc.b   0
                dc.b   0
                dc.b   0
                dc.b $26 ; &
                dc.b $10
                dc.b   0
                dc.b   0
                dc.b   0
                dc.b $2D ; -
                dc.b $18
                dc.b   8
                dc.b   0
                dc.b   8
                dc.b $26 ; &
                dc.b $18
                dc.b   8
                dc.b   0
                dc.b   0
                dc.b $29 ; )
                dc.b $20
                dc.b $F8
                dc.b   0
                dc.b   0
                dc.b $26 ; &
                dc.b $20
                dc.b $F8
                dc.b   0
                dc.b   0
                dc.b $2D ; -
                dc.b $28 ; (
                dc.b   0
                dc.b   0
                dc.b   0
                dc.b $3A ; :
                dc.b $28 ; (
                dc.b $F8
                dc.b   0
                dc.b $18
                dc.b $26 ; &
                dc.b $30 ; 0
                dc.b   0
                dc.b   0
                dc.b $10
                dc.b $25 ; %
                dc.b $38 ; 8
                dc.b $F8
                dc.b   0
                dc.b $10
                dc.b $25 ; %
                dc.b $40 ; @
                dc.b $11
                dc.b $F8
                dc.b   0
                dc.b   8
                dc.b $25 ; %
                dc.b   0
                dc.b $F0
                dc.b   0
                dc.b   0
                dc.b $38 ; 8
                dc.b $10
                dc.b $10
                dc.b   0
                dc.b   8
                dc.b $25 ; %
                dc.b   0
                dc.b   0
                dc.b   0
                dc.b $18
                dc.b $25 ; %
                dc.b $10
                dc.b   8
                dc.b   0
                dc.b $10
                dc.b $25 ; %
                dc.b $18
                dc.b $F8
                dc.b   0
                dc.b $18
                dc.b $25 ; %
                dc.b $20
                dc.b   0
                dc.b   0
                dc.b $10
                dc.b $26 ; &
                dc.b $28 ; (
                dc.b $F8
                dc.b   0
                dc.b $10
                dc.b $25 ; %
                dc.b $30 ; 0
                dc.b   0
                dc.b   0
                dc.b   0
                dc.b $25 ; %
                dc.b $30 ; 0
                dc.b   8
                dc.b   0
                dc.b   8
                dc.b $25 ; %
                dc.b $30 ; 0
                dc.b   0
                dc.b   0
                dc.b   8
                dc.b $26 ; &
                dc.b $38 ; 8
                dc.b   8
                dc.b   0
                dc.b   0
                dc.b $29 ; )
                dc.b $38 ; 8
                dc.b $F8
                dc.b   0
                dc.b   8
                dc.b $26 ; &
                dc.b $40 ; @
                dc.b   0
                dc.b   0
                dc.b   0
                dc.b $2D ; -
                dc.b $40 ; @
                dc.b $F8
                dc.b   0
                dc.b   8
                dc.b $25 ; %
                dc.b $48 ; H
                dc.b   0
                dc.b   0
                dc.b   0
                dc.b $25 ; %
                dc.b $48 ; H
                dc.b   0
                dc.b   0
                dc.b $10
                dc.b $25 ; %
                dc.b $50 ; P
                dc.b   9
                dc.b $FC
                dc.b   0
                dc.b   8
                dc.b $26 ; &
                dc.b $30 ; 0
                dc.b   4
                dc.b   0
                dc.b   8
                dc.b $25 ; %
                dc.b $28 ; (
                dc.b   4
                dc.b   0
                dc.b $10
                dc.b $27 ; '
                dc.b $38 ; 8
                dc.b   4
                dc.b   0
                dc.b   8
                dc.b $26 ; &
                dc.b $40 ; @
                dc.b $FC
                dc.b   0
                dc.b $10
                dc.b $25 ; %
                dc.b $40 ; @
                dc.b $FC
                dc.b   0
                dc.b $10
                dc.b $26 ; &
                dc.b $48 ; H
                dc.b  $C
                dc.b   0
                dc.b   8
                dc.b $27 ; '
                dc.b $48 ; H
                dc.b   4
                dc.b   0
                dc.b $18
                dc.b $26 ; &
                dc.b $50 ; P
                dc.b   4
                dc.b   0
                dc.b   8
                dc.b $27 ; '
                dc.b $58 ; X
                dc.b   0

; =============== S U B R O U T I N E =======================================


sub_FB4A:
                nop
                moveq   #0,d5
                move.b  $16(a0),d5
                subq.b  #3,d5
                move.w  8(a0),d2
                move.w  $C(a0),d3
                subq.w  #8,d2
                sub.w   d5,d3
                move.w  #$10,d4
                add.w   d5,d5
                lea     ($FFFFD800).w,a1
                move.w  #$5F,d6

loc_FB6E:
                tst.b   1(a1)
                bpl.s   loc_FB7A
                move.b  $20(a1),d0
                bne.s   loc_FBB8

loc_FB7A:
                lea     $40(a1),a1
                dbf     d6,loc_FB6E
                moveq   #0,d0

locret_FB84:
                rts
; ---------------------------------------------------------------------------
                dc.b $14
                dc.b $14
                dc.b  $C
                dc.b $14
                dc.b $14
                dc.b  $C
                dc.b   4
                dc.b $10
                dc.b  $C
                dc.b $12
                dc.b $10
                dc.b $10
                dc.b   6
                dc.b   6
                dc.b $18
                dc.b  $C
                dc.b  $C
                dc.b $10
                dc.b $10
                dc.b  $C
                dc.b   8
                dc.b   8
                dc.b $14
                dc.b $10
                dc.b $14
                dc.b   8
                dc.b  $E
                dc.b  $E
                dc.b $18
                dc.b $18
                dc.b $28 ; (
                dc.b $10
                dc.b $10
                dc.b $18
                dc.b  $C
                dc.b $20
                dc.b $20
                dc.b $70 ; p
                dc.b $40 ; @
                dc.b $20
                dc.b $80
                dc.b $20
                dc.b $20
                dc.b $20
                dc.b   8
                dc.b   8
                dc.b   4
                dc.b   4
                dc.b $20
                dc.b   8
; ---------------------------------------------------------------------------

loc_FBB8:
                andi.w  #$3F,d0 
                add.w   d0,d0
                lea     locret_FB84(pc,d0.w),a2
                moveq   #0,d1
                move.b  (a2)+,d1
                move.w  8(a1),d0
                sub.w   d1,d0
                sub.w   d2,d0
                bcc.s   loc_FBD8
                add.w   d1,d1
                add.w   d1,d0
                bcs.s   loc_FBDC
                bra.s   loc_FB7A
; ---------------------------------------------------------------------------

loc_FBD8:
                cmp.w   d4,d0
                bhi.s   loc_FB7A

loc_FBDC:
                moveq   #0,d1
                move.b  (a2)+,d1
                move.w  $C(a1),d0
                sub.w   d1,d0
                sub.w   d3,d0
                bcc.s   loc_FBF2
                add.w   d1,d1
                add.w   d0,d1
                bcs.s   loc_FBF6
                bra.s   loc_FB7A
; ---------------------------------------------------------------------------

loc_FBF2:
                cmp.w   d5,d0
                bhi.s   loc_FB7A

loc_FBF6:
                move.b  $20(a1),d1
                andi.b  #$C0,d1
                beq.w   loc_FC6A
                cmpi.b  #$C0,d1
                beq.w   loc_FDC4
                tst.b   d1
                bmi.w   loc_FCE0
                move.b  $20(a1),d0
                andi.b  #$3F,d0 
                cmpi.b  #6,d0
                beq.s   loc_FC2E
                cmpi.w  #$5A,$30(a0)
                bcc.w   locret_FC2C
                addq.b  #2,$24(a1)

locret_FC2C:
                rts
; ---------------------------------------------------------------------------

loc_FC2E:
                tst.w   $12(a0)
                bpl.s   loc_FC58
                move.w  $C(a0),d0
                subi.w  #$10,d0
                cmp.w   $C(a1),d0
                bcs.s   locret_FC68
                neg.w   $12(a0)
                move.w  #$FE80,$12(a1)
                tst.b   $25(a1)
                bne.s   locret_FC68
                addq.b  #4,$25(a1)
                rts
; ---------------------------------------------------------------------------

loc_FC58:
                cmpi.b  #2,$1C(a0)
                bne.s   locret_FC68
                neg.w   $12(a0)
                addq.b  #2,$24(a1)

locret_FC68:
                rts
; ---------------------------------------------------------------------------

loc_FC6A:
                tst.b   ($FFFFFE2D).w
                bne.s   loc_FC78
                cmpi.b  #2,$1C(a0)
                bne.s   loc_FCE0

loc_FC78:
                tst.b   $21(a1)
                beq.s   loc_FCA2
                neg.w   $10(a0)
                neg.w   $12(a0)
                asr     $10(a0)
                asr     $12(a0)
                move.b  #0,$20(a1)
                subq.b  #1,$21(a1)
                bne.s   locret_FCA0
                bset    #7,$22(a1)

locret_FCA0:
                rts
; ---------------------------------------------------------------------------

loc_FCA2:
                bset    #7,$22(a1)
                moveq   #$A,d0
                bsr.w   sub_1164E
                move.b  #$27,0(a1) 
                move.b  #0,$24(a1)
                tst.w   $12(a0)
                bmi.s   loc_FCD0
                move.w  $C(a0),d0
                cmp.w   $C(a1),d0
                bcc.s   loc_FCD8
                neg.w   $12(a0)
                rts
; ---------------------------------------------------------------------------

loc_FCD0:
                addi.w  #$100,$12(a0)
                rts
; ---------------------------------------------------------------------------

loc_FCD8:
                subi.w  #$100,$12(a0)
                rts
; ---------------------------------------------------------------------------

loc_FCE0:
                tst.b   ($FFFFFE2D).w
                beq.s   loc_FCEA

loc_FCE6:
                moveq   #$FFFFFFFF,d0
                rts
; ---------------------------------------------------------------------------

loc_FCEA:
                nop
                tst.w   $30(a0)
                bne.s   loc_FCE6
                movea.l a1,a2

loc_FCF4:
                tst.b   ($FFFFFE2C).w
                bne.s   loc_FD18
                tst.w   ($FFFFFE20).w
                beq.s   loc_FD72
                bsr.w   FindFreeObjectSlot
                bne.s   loc_FD18
                move.b  #$37,0(a1) 
                move.w  8(a0),8(a1)
                move.w  $C(a0),$C(a1)

loc_FD18:
                move.b  #0,($FFFFFE2C).w
                move.b  #4,$24(a0)
                bsr.w   sub_F218
                bset    #1,$22(a0)
                move.w  #$FC00,$12(a0)
                move.w  #$FE00,$10(a0)
                move.w  8(a0),d0
                cmp.w   8(a2),d0
                bcs.s   loc_FD48
                neg.w   $10(a0)

loc_FD48:
                move.w  #0,$14(a0)
                move.b  #$1A,$1C(a0)
                move.w  #$258,$30(a0)
                move.w  #$A3,d0
                cmpi.b  #$36,(a2) 
                bne.s   loc_FD68
                move.w  #$A6,d0

loc_FD68:
                jsr     (PlaySound_Special).l
                moveq   #$FFFFFFFF,d0
                rts
; ---------------------------------------------------------------------------

loc_FD72:
                tst.w   ($FFFFFFFA).w
                bne.s   loc_FD18

loc_FD78:
                tst.w   ($FFFFFE08).w
                bne.s   loc_FDC0
                move.b  #6,$24(a0)
                bsr.w   sub_F218
                bset    #1,$22(a0)
                move.w  #$F900,$12(a0)
                move.w  #0,$10(a0)
                move.w  #0,$14(a0)
                move.w  $C(a0),$38(a0)
                move.b  #$18,$1C(a0)
                move.w  #$A3,d0
                cmpi.b  #$36,(a2)
                bne.s   loc_FDBA
                move.w  #$A6,d0

loc_FDBA:
                jsr     (PlaySound_Special).l

loc_FDC0:
                moveq   #$FFFFFFFF,d0
                rts
; ---------------------------------------------------------------------------

loc_FDC4:
                move.b  $20(a1),d1
                andi.b  #$3F,d1 
                cmpi.b  #$C,d1
                beq.s   loc_FDDA
                cmpi.b  #$17,d1
                beq.s   loc_FE0C
                rts
; ---------------------------------------------------------------------------

loc_FDDA:
                sub.w   d0,d5
                cmpi.w  #8,d5
                bcc.s   loc_FE08
                move.w  8(a1),d0
                subq.w  #4,d0
                btst    #0,$22(a1)
                beq.s   loc_FDF4
                subi.w  #$10,d0

loc_FDF4:
                sub.w   d2,d0
                bcc.s   loc_FE00
                addi.w  #$18,d0
                bcs.s   loc_FE04
                bra.s   loc_FE08
; ---------------------------------------------------------------------------

loc_FE00:
                cmp.w   d4,d0
                bhi.s   loc_FE08

loc_FE04:
                bra.w   loc_FCE0
; ---------------------------------------------------------------------------

loc_FE08:
                bra.w   loc_FC6A
; ---------------------------------------------------------------------------

loc_FE0C:
                addq.b  #1,$21(a1)
                rts
; End of function sub_FB4A


; =============== S U B R O U T I N E =======================================


Sonic_AnglePos:

                btst    #3,$22(a0)
                beq.s   loc_FE26
                moveq   #0,d0
                move.b  d0,($FFFFF768).w
                move.b  d0,($FFFFF76A).w
                rts
; ---------------------------------------------------------------------------

loc_FE26:
                moveq   #3,d0
                move.b  d0,($FFFFF768).w
                move.b  d0,($FFFFF76A).w
                move.b  $26(a0),d0
                addi.b  #$20,d0 
                andi.b  #$C0,d0
                cmpi.b  #$40,d0 
                beq.w   loc_100B0
                cmpi.b  #$80,d0
                beq.w   loc_10014
                cmpi.b  #$C0,d0
                beq.w   loc_FF7E
                move.w  $C(a0),d2
                move.w  8(a0),d3
                moveq   #0,d0
                move.b  $16(a0),d0
                ext.w   d0
                add.w   d0,d2
                move.b  $17(a0),d0
                ext.w   d0
                add.w   d0,d3
                lea     ($FFFFF768).w,a4
                movea.w #$10,a3
                move.w  #0,d6
                moveq   #$D,d5
                bsr.w   FindFloor
                move.w  d1,-(sp)
                move.w  $C(a0),d2
                move.w  8(a0),d3
                moveq   #0,d0
                move.b  $16(a0),d0
                ext.w   d0
                add.w   d0,d2
                move.b  $17(a0),d0
                ext.w   d0
                neg.w   d0
                add.w   d0,d3
                lea     ($FFFFF76A).w,a4
                movea.w #$10,a3
                move.w  #0,d6
                moveq   #$D,d5
                bsr.w   FindFloor
                move.w  (sp)+,d0
                bsr.w   sub_FF52
                tst.w   d1
                beq.s   locret_FEC6
                bpl.s   loc_FEC8
                cmpi.w  #$FFF2,d1
                blt.s   locret_FEE8
                add.w   d1,$C(a0)

locret_FEC6:
                rts
; ---------------------------------------------------------------------------

loc_FEC8:
                cmpi.w  #$E,d1
                bgt.s   loc_FED4
                add.w   d1,$C(a0)
                rts
; ---------------------------------------------------------------------------

loc_FED4:
                bset    #1,$22(a0)
                bclr    #5,$22(a0)
                move.b  #1,$1D(a0)
                rts
; ---------------------------------------------------------------------------

locret_FEE8:
                rts
; End of function Sonic_AnglePos

; ---------------------------------------------------------------------------
                dc.b $24 ; $
                dc.b $28 ; (
                dc.b   0
                dc.b   8
                dc.b $30 ; 0
                dc.b $28 ; (
                dc.b   0
                dc.b $10
                dc.b $48 ; H
                dc.b $C0
                dc.b $E1
                dc.b $80
                dc.b $94
                dc.b $80
                dc.b $21 ; !
                dc.b $42 ; B
                dc.b   0
                dc.b   8
                dc.b $30 ; 0
                dc.b $3C ; <
                dc.b   0
                dc.b $38 ; 8
                dc.b $48 ; H
                dc.b $C0
                dc.b $E1
                dc.b $80
                dc.b $96
                dc.b $80
                dc.b $21 ; !
                dc.b $43 ; C
                dc.b   0
                dc.b  $C
                dc.b $4E ; N
                dc.b $75 ; u
; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR Sonic_AnglePos

locret_FF0C:
                rts
; END OF FUNCTION CHUNK FOR Sonic_AnglePos
; ---------------------------------------------------------------------------
                dc.b $26 ; &
                dc.b $28 ; (
                dc.b   0
                dc.b  $C
                dc.b $30 ; 0
                dc.b $28 ; (
                dc.b   0
                dc.b $12
                dc.b   4
                dc.b $40 ; @
                dc.b   0
                dc.b $38 ; 8
                dc.b $31 ; 1
                dc.b $40 ; @
                dc.b   0
                dc.b $12
                dc.b $48 ; H
                dc.b $C0
                dc.b $E1
                dc.b $80
                dc.b $96
                dc.b $80
                dc.b $21 ; !
                dc.b $43 ; C
                dc.b   0
                dc.b  $C
                dc.b $4E ; N
                dc.b $75 ; u
                dc.b $4E ; N
                dc.b $75 ; u
                dc.b $24 ; $
                dc.b $28 ; (
                dc.b   0
                dc.b   8
                dc.b $26 ; &
                dc.b $28 ; (
                dc.b   0
                dc.b  $C
                dc.b $30 ; 0
                dc.b $28 ; (
                dc.b   0
                dc.b $10
                dc.b $48 ; H
                dc.b $C0
                dc.b $E1
                dc.b $80
                dc.b $94
                dc.b $80
                dc.b $30 ; 0
                dc.b $28 ; (
                dc.b   0
                dc.b $12
                dc.b $48 ; H
                dc.b $C0
                dc.b $E1
                dc.b $80
                dc.b $96
                dc.b $80
                dc.b $21 ; !
                dc.b $42 ; B
                dc.b   0
                dc.b   8
                dc.b $21 ; !
                dc.b $43 ; C
                dc.b   0
                dc.b  $C
                dc.b $4E ; N
                dc.b $75 ; u

; =============== S U B R O U T I N E =======================================


sub_FF52:
                move.b  ($FFFFF76A).w,d2
                cmp.w   d0,d1
                ble.s   loc_FF60
                move.b  ($FFFFF768).w,d2
                move.w  d0,d1

loc_FF60:
                btst    #0,d2
                bne.s   loc_FF6C
                move.b  d2,$26(a0)
                rts
; ---------------------------------------------------------------------------

loc_FF6C:
                move.b  $26(a0),d2
                addi.b  #$20,d2 
                andi.b  #$C0,d2
                move.b  d2,$26(a0)
                rts
; End of function sub_FF52

; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR Sonic_AnglePos

loc_FF7E:
                move.w  $C(a0),d2
                move.w  8(a0),d3
                moveq   #0,d0
                move.b  $17(a0),d0
                ext.w   d0
                neg.w   d0
                add.w   d0,d2
                move.b  $16(a0),d0
                ext.w   d0
                add.w   d0,d3
                lea     ($FFFFF768).w,a4
                movea.w #$10,a3
                move.w  #0,d6
                moveq   #$D,d5
                bsr.w   sub_102FC
                move.w  d1,-(sp)
                move.w  $C(a0),d2
                move.w  8(a0),d3
                moveq   #0,d0
                move.b  $17(a0),d0
                ext.w   d0
                add.w   d0,d2
                move.b  $16(a0),d0
                ext.w   d0
                add.w   d0,d3
                lea     ($FFFFF76A).w,a4
                movea.w #$10,a3
                move.w  #0,d6

loc_FFD4:
                moveq   #$D,d5
                bsr.w   sub_102FC
                move.w  (sp)+,d0
                bsr.w   sub_FF52
                tst.w   d1
                beq.s   locret_FFF2
                bpl.s   loc_FFF4
                cmpi.w  #$FFF2,d1
                blt.w   locret_FF0C
                add.w   d1,8(a0)

locret_FFF2:
                rts
; ---------------------------------------------------------------------------

loc_FFF4:
                cmpi.w  #$E,d1
                bgt.s   loc_10000
                add.w   d1,8(a0)

locret_FFFE:
                rts
; ---------------------------------------------------------------------------

loc_10000:
                bset    #1,$22(a0)
                bclr    #5,$22(a0)
                move.b  #1,$1D(a0)
                rts
; ---------------------------------------------------------------------------

loc_10014:
                move.w  $C(a0),d2
                move.w  8(a0),d3
                moveq   #0,d0
                move.b  $16(a0),d0
                ext.w   d0
                sub.w   d0,d2
                eori.w  #$F,d2
                move.b  $17(a0),d0
                ext.w   d0
                add.w   d0,d3
                lea     ($FFFFF768).w,a4
                movea.w #$FFF0,a3
                move.w  #$1000,d6
                moveq   #$D,d5
                bsr.w   FindFloor
                move.w  d1,-(sp)
                move.w  $C(a0),d2
                move.w  8(a0),d3
                moveq   #0,d0
                move.b  $16(a0),d0
                ext.w   d0
                sub.w   d0,d2
                eori.w  #$F,d2
                move.b  $17(a0),d0
                ext.w   d0
                sub.w   d0,d3
                lea     ($FFFFF76A).w,a4
                movea.w #$FFF0,a3
                move.w  #$1000,d6
                moveq   #$D,d5
                bsr.w   FindFloor
                move.w  (sp)+,d0
                bsr.w   sub_FF52
                tst.w   d1
                beq.s   locret_1008E
                bpl.s   loc_10090
                cmpi.w  #$FFF2,d1
                blt.w   locret_FEE8
                sub.w   d1,$C(a0)

locret_1008E:
                rts
; ---------------------------------------------------------------------------

loc_10090:
                cmpi.w  #$E,d1
                bgt.s   loc_1009C
                sub.w   d1,$C(a0)
                rts
; ---------------------------------------------------------------------------

loc_1009C:
                bset    #1,$22(a0)
                bclr    #5,$22(a0)
                move.b  #1,$1D(a0)
                rts
; ---------------------------------------------------------------------------

loc_100B0:
                move.w  $C(a0),d2
                move.w  8(a0),d3
                moveq   #0,d0
                move.b  $17(a0),d0
                ext.w   d0
                sub.w   d0,d2
                move.b  $16(a0),d0
                ext.w   d0
                sub.w   d0,d3
                eori.w  #$F,d3
                lea     ($FFFFF768).w,a4
                movea.w #$FFF0,a3
                move.w  #$800,d6
                moveq   #$D,d5
                bsr.w   sub_102FC
                move.w  d1,-(sp)
                move.w  $C(a0),d2
                move.w  8(a0),d3
                moveq   #0,d0
                move.b  $17(a0),d0
                ext.w   d0
                add.w   d0,d2
                move.b  $16(a0),d0
                ext.w   d0
                sub.w   d0,d3
                eori.w  #$F,d3
                lea     ($FFFFF76A).w,a4
                movea.w #$FFF0,a3
                move.w  #$800,d6
                moveq   #$D,d5
                bsr.w   sub_102FC
                move.w  (sp)+,d0
                bsr.w   sub_FF52
                tst.w   d1
                beq.s   locret_1012A
                bpl.s   loc_1012C
                cmpi.w  #$FFF2,d1
                blt.w   locret_FF0C
                sub.w   d1,8(a0)

locret_1012A:
                rts
; ---------------------------------------------------------------------------

loc_1012C:
                cmpi.w  #$E,d1
                bgt.s   loc_10138
                sub.w   d1,8(a0)
                rts
; ---------------------------------------------------------------------------

loc_10138:
                bset    #1,$22(a0)
                bclr    #5,$22(a0)
                move.b  #1,$1D(a0)
                rts
; END OF FUNCTION CHUNK FOR Sonic_AnglePos

; =============== S U B R O U T I N E =======================================


sub_1014C:
                move.w  d2,d0
                lsr.w   #1,d0
                andi.w  #$380,d0
                move.w  d3,d1
                lsr.w   #8,d1
                andi.w  #$7F,d1
                add.w   d1,d0
                moveq   #$FFFFFFFF,d1
                lea     ($FFFFA400).w,a1
                move.b  (a1,d0.w),d1
                beq.s   loc_10186
                bmi.s   loc_1018A
                subq.b  #1,d1
                ext.w   d1
                ror.w   #7,d1
                move.w  d2,d0
                add.w   d0,d0
                andi.w  #$1E0,d0
                add.w   d0,d1
                move.w  d3,d0
                lsr.w   #3,d0
                andi.w  #$1E,d0
                add.w   d0,d1

loc_10186:
                movea.l d1,a1
                rts
; ---------------------------------------------------------------------------

loc_1018A:
                andi.w  #$7F,d1
                btst    #6,1(a0)
                beq.s   loc_101A2
                addq.w  #1,d1
                cmpi.w  #$29,d1
                bne.s   loc_101A2
                move.w  #$51,d1

loc_101A2:
                subq.b  #1,d1
                ror.w   #7,d1
                move.w  d2,d0
                add.w   d0,d0
                andi.w  #$1E0,d0
                add.w   d0,d1
                move.w  d3,d0
                lsr.w   #3,d0
                andi.w  #$1E,d0
                add.w   d0,d1
                movea.l d1,a1
                rts
; End of function sub_1014C


; =============== S U B R O U T I N E =======================================

;sub_101BE
FindFloor:
                bsr.s   sub_1014C
                move.w  (a1),d0
                move.w  d0,d4
                andi.w  #$7FF,d0
                beq.s   loc_101CE
                btst    d5,d4
                bne.s   loc_101DC

loc_101CE:
                add.w   a3,d2
                bsr.w   sub_10264
                sub.w   a3,d2
                addi.w  #$10,d1
                rts
; ---------------------------------------------------------------------------

loc_101DC:
                movea.l ($FFFFF796).w,a2
                move.b  (a2,d0.w),d0
                andi.w  #$FF,d0
                beq.s   loc_101CE
                lea     (AngleMap).l,a2
                move.b  (a2,d0.w),(a4)
                lsl.w   #4,d0
                move.w  d3,d1
                btst    #$B,d4
                beq.s   loc_10202
                not.w   d1
                neg.b   (a4)

loc_10202:
                btst    #$C,d4
                beq.s   loc_10212
                addi.b  #$40,(a4) 
                neg.b   (a4)
                subi.b  #$40,(a4) 

loc_10212:
                andi.w  #$F,d1
                add.w   d0,d1
                lea     (CollArray1).l,a2
                move.b  (a2,d1.w),d0
                ext.w   d0
                eor.w   d6,d4
                btst    #$C,d4
                beq.s   loc_1022E
                neg.w   d0

loc_1022E:
                tst.w   d0
                beq.s   loc_101CE
                bmi.s   loc_1024A
                cmpi.b  #$10,d0
                beq.s   loc_10256
                move.w  d2,d1
                andi.w  #$F,d1
                add.w   d1,d0
                move.w  #$F,d1
                sub.w   d0,d1
                rts
; ---------------------------------------------------------------------------

loc_1024A:
                move.w  d2,d1
                andi.w  #$F,d1
                add.w   d1,d0
                bpl.w   loc_101CE

loc_10256:
                sub.w   a3,d2
                bsr.w   sub_10264
                add.w   a3,d2
                subi.w  #$10,d1
                rts
; End of function FindFloor


; =============== S U B R O U T I N E =======================================


sub_10264:
                bsr.w   sub_1014C
                move.w  (a1),d0
                move.w  d0,d4
                andi.w  #$7FF,d0
                beq.s   loc_10276
                btst    d5,d4
                bne.s   loc_10284

loc_10276:
                move.w  #$F,d1
                move.w  d2,d0
                andi.w  #$F,d0
                sub.w   d0,d1
                rts
; ---------------------------------------------------------------------------

loc_10284:
                movea.l ($FFFFF796).w,a2
                move.b  (a2,d0.w),d0
                andi.w  #$FF,d0
                beq.s   loc_10276
                lea     (AngleMap).l,a2
                move.b  (a2,d0.w),(a4)
                lsl.w   #4,d0
                move.w  d3,d1
                btst    #$B,d4
                beq.s   loc_102AA
                not.w   d1
                neg.b   (a4)

loc_102AA:
                btst    #$C,d4
                beq.s   loc_102BA
                addi.b  #$40,(a4) 
                neg.b   (a4)
                subi.b  #$40,(a4) 

loc_102BA:
                andi.w  #$F,d1
                add.w   d0,d1
                lea     (CollArray1).l,a2
                move.b  (a2,d1.w),d0
                ext.w   d0
                eor.w   d6,d4
                btst    #$C,d4
                beq.s   loc_102D6
                neg.w   d0

loc_102D6:
                tst.w   d0
                beq.s   loc_10276
                bmi.s   loc_102EC
                move.w  d2,d1
                andi.w  #$F,d1
                add.w   d1,d0
                move.w  #$F,d1
                sub.w   d0,d1
                rts
; ---------------------------------------------------------------------------

loc_102EC:
                move.w  d2,d1
                andi.w  #$F,d1
                add.w   d1,d0
                bpl.w   loc_10276
                not.w   d1
                rts
; End of function sub_10264


; =============== S U B R O U T I N E =======================================


sub_102FC:
                bsr.w   sub_1014C
                move.w  (a1),d0
                move.w  d0,d4
                andi.w  #$7FF,d0
                beq.s   loc_1030E
                btst    d5,d4
                bne.s   loc_1031C

loc_1030E:
                add.w   a3,d3
                bsr.w   sub_103A4
                sub.w   a3,d3
                addi.w  #$10,d1
                rts
; ---------------------------------------------------------------------------

loc_1031C:
                movea.l ($FFFFF796).w,a2
                move.b  (a2,d0.w),d0
                andi.w  #$FF,d0
                beq.s   loc_1030E
                lea     (AngleMap).l,a2
                move.b  (a2,d0.w),(a4)
                lsl.w   #4,d0
                move.w  d2,d1
                btst    #$C,d4
                beq.s   loc_1034A
                not.w   d1
                addi.b  #$40,(a4) 
                neg.b   (a4)
                subi.b  #$40,(a4) 

loc_1034A:
                btst    #$B,d4
                beq.s   loc_10352
                neg.b   (a4)

loc_10352:
                andi.w  #$F,d1
                add.w   d0,d1
                lea     (CollArray2).l,a2
                move.b  (a2,d1.w),d0
                ext.w   d0
                eor.w   d6,d4
                btst    #$B,d4
                beq.s   loc_1036E
                neg.w   d0

loc_1036E:
                tst.w   d0
                beq.s   loc_1030E
                bmi.s   loc_1038A
                cmpi.b  #$10,d0
                beq.s   loc_10396
                move.w  d3,d1
                andi.w  #$F,d1
                add.w   d1,d0
                move.w  #$F,d1
                sub.w   d0,d1
                rts
; ---------------------------------------------------------------------------

loc_1038A:
                move.w  d3,d1
                andi.w  #$F,d1
                add.w   d1,d0
                bpl.w   loc_1030E

loc_10396:
                sub.w   a3,d3
                bsr.w   sub_103A4
                add.w   a3,d3
                subi.w  #$10,d1
                rts
; End of function sub_102FC


; =============== S U B R O U T I N E =======================================


sub_103A4:
                bsr.w   sub_1014C
                move.w  (a1),d0
                move.w  d0,d4
                andi.w  #$7FF,d0
                beq.s   loc_103B6
                btst    d5,d4
                bne.s   loc_103C4

loc_103B6:
                move.w  #$F,d1
                move.w  d3,d0
                andi.w  #$F,d0
                sub.w   d0,d1
                rts
; ---------------------------------------------------------------------------

loc_103C4:
                movea.l ($FFFFF796).w,a2
                move.b  (a2,d0.w),d0
                andi.w  #$FF,d0
                beq.s   loc_103B6
                lea     (AngleMap).l,a2
                move.b  (a2,d0.w),(a4)
                lsl.w   #4,d0
                move.w  d2,d1
                btst    #$C,d4
                beq.s   loc_103F2
                not.w   d1
                addi.b  #$40,(a4) 
                neg.b   (a4)
                subi.b  #$40,(a4) 

loc_103F2:
                btst    #$B,d4
                beq.s   loc_103FA
                neg.b   (a4)

loc_103FA:
                andi.w  #$F,d1
                add.w   d0,d1
                lea     (CollArray2).l,a2
                move.b  (a2,d1.w),d0
                ext.w   d0
                eor.w   d6,d4
                btst    #$B,d4
                beq.s   loc_10416
                neg.w   d0

loc_10416:
                tst.w   d0
                beq.s   loc_103B6
                bmi.s   loc_1042C
                move.w  d3,d1
                andi.w  #$F,d1
                add.w   d1,d0
                move.w  #$F,d1
                sub.w   d0,d1
                rts
; ---------------------------------------------------------------------------

loc_1042C:
                move.w  d3,d1
                andi.w  #$F,d1
                add.w   d1,d0
                bpl.w   loc_103B6
                not.w   d1
                rts
; End of function sub_103A4


; =============== S U B R O U T I N E =======================================


Level_unk2:
                rts
; End of function Level_unk2

; ---------------------------------------------------------------------------
                dc.b $43 ; C
                dc.b $F9
                dc.b   0
                dc.b   6
                dc.b $81
                dc.b   0
                dc.b $45 ; E
                dc.b $F9
                dc.b   0
                dc.b   6
                dc.b $81
                dc.b   0
                dc.b $36 ; 6
                dc.b $3C ; <
                dc.b   0
                dc.b $FF
                dc.b $7A ; z
                dc.b $10
                dc.b $34 ; 4
                dc.b $3C ; <
                dc.b   0
                dc.b  $F
                dc.b $78 ; x
                dc.b   0
                dc.b $32 ; 2
                dc.b $3C ; <
                dc.b   0
                dc.b  $F
                dc.b $30 ; 0
                dc.b $19
                dc.b $EA
                dc.b $A8
                dc.b $D9
                dc.b $44 ; D
                dc.b $51 ; Q
                dc.b $C9
                dc.b $FF
                dc.b $F8
                dc.b $34 ; 4
                dc.b $C4
                dc.b $92
                dc.b $FC
                dc.b   0
                dc.b $20
                dc.b $53 ; S
                dc.b $45 ; E
                dc.b $51 ; Q
                dc.b $CA
                dc.b $FF
                dc.b $E6
                dc.b $D2
                dc.b $FC
                dc.b   0
                dc.b $20
                dc.b $51 ; Q
                dc.b $CB
                dc.b $FF
                dc.b $D8
                dc.b $43 ; C
                dc.b $F9
                dc.b   0
                dc.b   6
                dc.b $81
                dc.b   0
                dc.b $45 ; E
                dc.b $F9
                dc.b   0
                dc.b   6
                dc.b $91
                dc.b   0
                dc.b $61 
                dc.b  $C
                dc.b $43 ; C
                dc.b $F9
                dc.b   0
                dc.b   6
                dc.b $81
                dc.b   0
                dc.b $45 ; E
                dc.b $F9
                dc.b   0
                dc.b   6
                dc.b $81
                dc.b   0
                dc.b $36 ; 6
                dc.b $3C ; <
                dc.b  $F
                dc.b $FF
                dc.b $74 ; t
                dc.b   0
                dc.b $32 ; 2
                dc.b $3C ; <
                dc.b   0
                dc.b  $F
                dc.b $30 ; 0
                dc.b $19
                dc.b $67 ; g
                dc.b $24 ; $
                dc.b $6B ; k
                dc.b  $C
                dc.b $E2
                dc.b $48 ; H
                dc.b $64 ; d
                dc.b   2
                dc.b $52 ; R
                dc.b   2
                dc.b $51 ; Q
                dc.b $C9
                dc.b $FF
                dc.b $F8
                dc.b $60 
                dc.b $18
                dc.b  $C
                dc.b $40 ; @
                dc.b $FF
                dc.b $FF
                dc.b $67 ; g
                dc.b  $C
                dc.b $E3
                dc.b $48 ; H
                dc.b $64 ; d
                dc.b   2
                dc.b $53 ; S
                dc.b   2
                dc.b $51 ; Q
                dc.b $C9
                dc.b $FF
                dc.b $F8
                dc.b $60 
                dc.b   6
                dc.b $30 ; 0
                dc.b $3C ; <
                dc.b   0
                dc.b $10
                dc.b $34 ; 4
                dc.b   0
                dc.b $14
                dc.b $C2
                dc.b $51 ; Q
                dc.b $CB
                dc.b $FF
                dc.b $CC
                dc.b $4E ; N
                dc.b $75 ; u

; =============== S U B R O U T I N E =======================================


sub_104CE:

                move.l  8(a0),d3
                move.l  $C(a0),d2
                move.w  $10(a0),d1
                ext.l   d1
                asl.l   #8,d1
                add.l   d1,d3
                move.w  $12(a0),d1
                ext.l   d1
                asl.l   #8,d1
                add.l   d1,d2
                swap    d2
                swap    d3
                move.b  d0,($FFFFF768).w
                move.b  d0,($FFFFF76A).w
                move.b  d0,d1
                addi.b  #$20,d0 
                andi.b  #$C0,d0
                beq.w   loc_105C8
                cmpi.b  #$80,d0
                beq.w   loc_10754
                andi.b  #$38,d1
                bne.s   loc_10514
                addq.w  #8,d2

loc_10514:
                cmpi.b  #$40,d0 
                beq.w   loc_10822
                bra.w   loc_10694
; End of function sub_104CE


; =============== S U B R O U T I N E =======================================


sub_10520:

                move.b  d0,($FFFFF768).w
                move.b  d0,($FFFFF76A).w
                addi.b  #$20,d0 
                andi.b  #$C0,d0
                cmpi.b  #$40,d0 
                beq.w   loc_107AE
                cmpi.b  #$80,d0
                beq.w   sub_106E0
                cmpi.b  #$C0,d0
                beq.w   loc_10628
; End of function sub_10520


; =============== S U B R O U T I N E =======================================


sub_10548:
                move.w  $C(a0),d2
                move.w  8(a0),d3
                moveq   #0,d0
                move.b  $16(a0),d0
                ext.w   d0
                add.w   d0,d2
                move.b  $17(a0),d0
                ext.w   d0
                add.w   d0,d3
                lea     ($FFFFF768).w,a4
                movea.w #$10,a3
                move.w  #0,d6
                moveq   #$D,d5
                bsr.w   FindFloor
                move.w  d1,-(sp)
                move.w  $C(a0),d2
                move.w  8(a0),d3
                moveq   #0,d0
                move.b  $16(a0),d0
                ext.w   d0
                add.w   d0,d2
                move.b  $17(a0),d0
                ext.w   d0
                sub.w   d0,d3
                lea     ($FFFFF76A).w,a4
                movea.w #$10,a3
                move.w  #0,d6
                moveq   #$D,d5
                bsr.w   FindFloor
                move.w  (sp)+,d0
                move.b  #0,d2

loc_105A8:
                move.b  ($FFFFF76A).w,d3
                cmp.w   d0,d1
                ble.s   loc_105B6
                move.b  ($FFFFF768).w,d3
                move.w  d0,d1

loc_105B6:
                btst    #0,d3
                beq.s   locret_105BE
                move.b  d2,d3

locret_105BE:
                rts
; End of function sub_10548

; ---------------------------------------------------------------------------
                dc.b $34 ; 4
                dc.b $28 ; (
                dc.b   0
                dc.b  $C
                dc.b $36 ; 6
                dc.b $28 ; (
                dc.b   0
                dc.b   8
; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR sub_104CE

loc_105C8:
                addi.w  #$A,d2
                lea     ($FFFFF768).w,a4
                movea.w #$10,a3
                move.w  #0,d6
                moveq   #$E,d5
                bsr.w   FindFloor
                move.b  #0,d2

loc_105E2:
                move.b  ($FFFFF768).w,d3
                btst    #0,d3
                beq.s   locret_105EE
                move.b  d2,d3

locret_105EE:
                rts
; END OF FUNCTION CHUNK FOR sub_1068C

; =============== S U B R O U T I N E =======================================


ObjectHitFloor:
                move.w  8(a0),d3

loc_105F4:
                move.w  $C(a0),d2
                moveq   #0,d0
                move.b  $16(a0),d0
                ext.w   d0
                add.w   d0,d2
                lea     ($FFFFF768).w,a4
                move.b  #0,(a4)
                movea.w #$10,a3
                move.w  #0,d6
                moveq   #$D,d5
                bsr.w   FindFloor
                move.b  ($FFFFF768).w,d3
                btst    #0,d3
                beq.s   locret_10626
                move.b  #0,d3

locret_10626:
                rts
; End of function ObjectHitFloor

; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR sub_10520

loc_10628:
                move.w  $C(a0),d2
                move.w  8(a0),d3
                moveq   #0,d0
                move.b  $17(a0),d0
                ext.w   d0
                sub.w   d0,d2
                move.b  $16(a0),d0
                ext.w   d0
                add.w   d0,d3
                lea     ($FFFFF768).w,a4
                movea.w #$10,a3
                move.w  #0,d6
                moveq   #$E,d5
                bsr.w   sub_102FC
                move.w  d1,-(sp)
                move.w  $C(a0),d2
                move.w  8(a0),d3
                moveq   #0,d0
                move.b  $17(a0),d0
                ext.w   d0
                add.w   d0,d2
                move.b  $16(a0),d0
                ext.w   d0
                add.w   d0,d3
                lea     ($FFFFF76A).w,a4
                movea.w #$10,a3
                move.w  #0,d6
                moveq   #$E,d5
                bsr.w   sub_102FC
                move.w  (sp)+,d0
                move.b  #$C0,d2
                bra.w   loc_105A8
; END OF FUNCTION CHUNK FOR sub_10520

; =============== S U B R O U T I N E =======================================


sub_1068C:

                move.w  $C(a0),d2
                move.w  8(a0),d3

loc_10694:
                addi.w  #$A,d3
                lea     ($FFFFF768).w,a4
                movea.w #$10,a3
                move.w  #0,d6
                moveq   #$E,d5
                bsr.w   sub_102FC
                move.b  #$C0,d2
                bra.w   loc_105E2
; End of function sub_1068C


; =============== S U B R O U T I N E =======================================


sub_106B2:
                add.w   8(a0),d3
                move.w  $C(a0),d2
                lea     ($FFFFF768).w,a4
                move.b  #0,(a4)
                movea.w #$10,a3
                move.w  #0,d6
                moveq   #$E,d5
                bsr.w   sub_102FC
                move.b  ($FFFFF768).w,d3
                btst    #0,d3
                beq.s   locret_106DE
                move.b  #$C0,d3

locret_106DE:
                rts
; End of function sub_106B2


; =============== S U B R O U T I N E =======================================


sub_106E0:
                move.w  $C(a0),d2
                move.w  8(a0),d3
                moveq   #0,d0
                move.b  $16(a0),d0
                ext.w   d0
                sub.w   d0,d2
                eori.w  #$F,d2
                move.b  $17(a0),d0
                ext.w   d0
                add.w   d0,d3
                lea     ($FFFFF768).w,a4
                movea.w #$FFF0,a3
                move.w  #$1000,d6
                moveq   #$E,d5
                bsr.w   FindFloor
                move.w  d1,-(sp)
                move.w  $C(a0),d2
                move.w  8(a0),d3
                moveq   #0,d0
                move.b  $16(a0),d0
                ext.w   d0
                sub.w   d0,d2
                eori.w  #$F,d2
                move.b  $17(a0),d0
                ext.w   d0
                sub.w   d0,d3
                lea     ($FFFFF76A).w,a4
                movea.w #$FFF0,a3
                move.w  #$1000,d6
                moveq   #$E,d5
                bsr.w   FindFloor
                move.w  (sp)+,d0
                move.b  #$80,d2
                bra.w   loc_105A8
; End of function sub_106E0

; ---------------------------------------------------------------------------
                move.w  $C(a0),d2
                move.w  8(a0),d3
; START OF FUNCTION CHUNK FOR sub_104CE

loc_10754:
                subi.w  #$A,d2
                eori.w  #$F,d2
                lea     ($FFFFF768).w,a4
                movea.w #$FFF0,a3
                move.w  #$1000,d6
                moveq   #$E,d5
                bsr.w   FindFloor
                move.b  #$80,d2
                bra.w   loc_105E2
; END OF FUNCTION CHUNK FOR sub_104CE

; =============== S U B R O U T I N E =======================================


sub_10776:
                move.w  $C(a0),d2
                move.w  8(a0),d3
                moveq   #0,d0
                move.b  $16(a0),d0
                ext.w   d0
                sub.w   d0,d2
                eori.w  #$F,d2
                lea     ($FFFFF768).w,a4
                movea.w #$FFF0,a3
                move.w  #$1000,d6
                moveq   #$E,d5
                bsr.w   FindFloor
                move.b  ($FFFFF768).w,d3
                btst    #0,d3
                beq.s   locret_107AC
                move.b  #$80,d3

locret_107AC:
                rts
; End of function sub_10776

; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR sub_10520

loc_107AE:
                move.w  $C(a0),d2
                move.w  8(a0),d3
                moveq   #0,d0
                move.b  $17(a0),d0
                ext.w   d0
                sub.w   d0,d2
                move.b  $16(a0),d0
                ext.w   d0
                sub.w   d0,d3
                eori.w  #$F,d3
                lea     ($FFFFF768).w,a4
                movea.w #$FFF0,a3
                move.w  #$800,d6
                moveq   #$E,d5
                bsr.w   sub_102FC
                move.w  d1,-(sp)
                move.w  $C(a0),d2
                move.w  8(a0),d3
                moveq   #0,d0
                move.b  $17(a0),d0
                ext.w   d0
                add.w   d0,d2
                move.b  $16(a0),d0
                ext.w   d0
                sub.w   d0,d3
                eori.w  #$F,d3
                lea     ($FFFFF76A).w,a4
                movea.w #$FFF0,a3
                move.w  #$800,d6
                moveq   #$E,d5
                bsr.w   sub_102FC
                move.w  (sp)+,d0
                move.b  #$40,d2 
                bra.w   loc_105A8
; END OF FUNCTION CHUNK FOR sub_10520

; =============== S U B R O U T I N E =======================================


sub_1081A:

                move.w  $C(a0),d2
                move.w  8(a0),d3

loc_10822:
                subi.w  #$A,d3
                eori.w  #$F,d3
                lea     ($FFFFF768).w,a4
                movea.w #$FFF0,a3
                move.w  #$800,d6
                moveq   #$E,d5
                bsr.w   sub_102FC
                move.b  #$40,d2 
                bra.w   loc_105E2
; End of function sub_1081A


; =============== S U B R O U T I N E =======================================


sub_10844:
                add.w   8(a0),d3
                move.w  $C(a0),d2
                lea     ($FFFFF768).w,a4
                move.b  #0,(a4)
                movea.w #$FFF0,a3
                move.w  #$800,d6
                moveq   #$E,d5
                bsr.w   sub_102FC
                move.b  ($FFFFF768).w,d3
                btst    #0,d3
                beq.s   locret_10870
                move.b  #$40,d3 

locret_10870:
                rts
; End of function sub_10844


; =============== S U B R O U T I N E =======================================


sub_10872:
                bsr.w   sub_109AE
                bsr.w   loc_10AE2
                move.w  d5,-(sp)
                lea     ($FFFF8000).w,a1
                move.b  ($FFFFF780).w,d0
                andi.b  #$FC,d0
                jsr     (CalcSine).l
                move.w  d0,d4
                move.w  d1,d5
                muls.w  #$18,d4
                muls.w  #$18,d5
                moveq   #0,d2
                move.w  ($FFFFF700).w,d2
                divu.w  #$18,d2
                swap    d2
                neg.w   d2
                addi.w  #-$B4,d2
                moveq   #0,d3
                move.w  ($FFFFF704).w,d3
                divu.w  #$18,d3
                swap    d3
                neg.w   d3
                addi.w  #-$B4,d3
                move.w  #$F,d7

loc_108C2:
                movem.w d0-d2,-(sp)
                movem.w d0-d1,-(sp)
                neg.w   d0
                muls.w  d2,d1
                muls.w  d3,d0
                move.l  d0,d6
                add.l   d1,d6
                movem.w (sp)+,d0-d1
                muls.w  d2,d0
                muls.w  d3,d1
                add.l   d0,d1
                move.l  d6,d2
                move.w  #$F,d6

loc_108E4:
                move.l  d2,d0
                asr.l   #8,d0
                move.w  d0,(a1)+
                move.l  d1,d0
                asr.l   #8,d0
                move.w  d0,(a1)+
                add.l   d5,d2
                add.l   d4,d1
                dbf     d6,loc_108E4
                movem.w (sp)+,d0-d2
                addi.w  #$18,d3
                dbf     d7,loc_108C2
                move.w  (sp)+,d5
                lea     ($FF0000).l,a0
                moveq   #0,d0
                move.w  ($FFFFF704).w,d0
                divu.w  #$18,d0
                mulu.w  #$80,d0
                adda.l  d0,a0
                moveq   #0,d0
                move.w  ($FFFFF700).w,d0
                divu.w  #$18,d0
                adda.w  d0,a0
                lea     ($FFFF8000).w,a4
                move.w  #$F,d7

loc_10930:
                move.w  #$F,d6

loc_10934:
                moveq   #0,d0
                move.b  (a0)+,d0
                beq.s   loc_10986
                move.w  (a4),d3
                addi.w  #$120,d3
                cmpi.w  #$70,d3 
                bcs.s   loc_10986
                cmpi.w  #$1D0,d3
                bcc.s   loc_10986
                move.w  2(a4),d2
                addi.w  #$F0,d2
                cmpi.w  #$70,d2 
                bcs.s   loc_10986
                cmpi.w  #$170,d2
                bcc.s   loc_10986
                lea     ($FF4000).l,a5
                lsl.w   #3,d0
                lea     (a5,d0.w),a5
                movea.l (a5)+,a1
                move.w  (a5)+,d1
                add.w   d1,d1
                adda.w  (a1,d1.w),a1
                movea.w (a5)+,a3
                moveq   #0,d1
                move.b  (a1)+,d1
                subq.b  #1,d1
                bmi.s   loc_10986
                jsr     (loc_88AA).l

loc_10986:
                addq.w  #4,a4
                dbf     d6,loc_10934
                lea     $70(a0),a0
                dbf     d7,loc_10930
                move.b  d5,($FFFFF62C).w
                cmpi.b  #$50,d5 
                beq.s   loc_109A6
                move.l  #0,(a2)
                rts
; ---------------------------------------------------------------------------

loc_109A6:
                move.b  #0,-5(a2)
                rts
; End of function sub_10872


; =============== S U B R O U T I N E =======================================


sub_109AE:
                lea     ($FF400C).l,a1
                moveq   #0,d0
                move.b  ($FFFFF780).w,d0
                lsr.b   #2,d0
                andi.w  #$F,d0
                moveq   #$F,d1

loc_109C2:
                move.w  d0,(a1)
                addq.w  #8,a1
                dbf     d1,loc_109C2
                subq.b  #1,($FFFFFEC2).w
                bpl.s   loc_109E0
                move.b  #7,($FFFFFEC2).w
                addq.b  #1,($FFFFFEC3).w
                andi.b  #3,($FFFFFEC3).w

loc_109E0:
                move.b  ($FFFFFEC3).w,1(a1)
                addq.w  #8,a1
                addq.w  #8,a1
                subq.b  #1,($FFFFFEC4).w
                bpl.s   loc_10A02
                move.b  #7,($FFFFFEC4).w
                bra.s   loc_10A02
; ---------------------------------------------------------------------------
                addq.b  #1,($FFFFFEC5).w
                andi.b  #1,($FFFFFEC5).w

loc_10A02:
                move.b  ($FFFFFEC5).w,1(a1)
                addq.w  #8,a1
                move.b  ($FFFFFEC5).w,1(a1)
                subq.b  #1,($FFFFFEC0).w
                bpl.s   loc_10A26
                move.b  #7,($FFFFFEC0).w
                subq.b  #1,($FFFFFEC1).w
                andi.b  #3,($FFFFFEC1).w

loc_10A26:
                lea     ($FF402E).l,a1
                lea     (unk_10A8C).l,a0
                moveq   #0,d0
                move.b  ($FFFFFEC1).w,d0
                add.w   d0,d0
                lea     (a0,d0.w),a0
                move.w  (a0),(a1)
                move.w  2(a0),8(a1)
                move.w  4(a0),$10(a1)
                move.w  6(a0),$18(a1)
                adda.w  #$10,a0
                adda.w  #$20,a1 
                move.w  (a0),(a1)
                move.w  2(a0),8(a1)
                move.w  4(a0),$10(a1)
                move.w  6(a0),$18(a1)
                adda.w  #$10,a0
                adda.w  #$20,a1 
                move.w  (a0),(a1)
                move.w  2(a0),8(a1)
                move.w  4(a0),$10(a1)
                move.w  6(a0),$18(a1)
                rts
; End of function sub_109AE

; ---------------------------------------------------------------------------
unk_10A8C:      dc.b   1
                dc.b $42 ; B
                dc.b   1
                dc.b $42 ; B
                dc.b   1
                dc.b $42 ; B
                dc.b $21 ; !
                dc.b $42 ; B
                dc.b   1
                dc.b $42 ; B
                dc.b   1
                dc.b $42 ; B
                dc.b   1
                dc.b $42 ; B
                dc.b   1
                dc.b $42 ; B
                dc.b $21 ; !
                dc.b $42 ; B
                dc.b $21 ; !
                dc.b $42 ; B
                dc.b $21 ; !
                dc.b $42 ; B
                dc.b   1
                dc.b $42 ; B
                dc.b $21 ; !
                dc.b $42 ; B
                dc.b $21 ; !
                dc.b $42 ; B
                dc.b $21 ; !
                dc.b $42 ; B
                dc.b $21 ; !
                dc.b $42 ; B
                dc.b $41 
                dc.b $42 ; B
                dc.b $41 
                dc.b $42 ; B
                dc.b $41 
                dc.b $42 ; B
                dc.b $21 ; !
                dc.b $42 ; B
                dc.b $41 
                dc.b $42 ; B
                dc.b $41 
                dc.b $42 ; B
                dc.b $41 
                dc.b $42 ; B
                dc.b $41 
                dc.b $42 ; B
                dc.b $61 
                dc.b $42 ; B
                dc.b $61 
                dc.b $42 ; B
                dc.b $61 
                dc.b $42 ; B
                dc.b $21 ; !
                dc.b $42 ; B
                dc.b $61 
                dc.b $42 ; B
                dc.b $61 
                dc.b $42 ; B
                dc.b $61 
                dc.b $42 ; B
                dc.b $61 
                dc.b $42 ; B

; =============== S U B R O U T I N E =======================================


sub_10ACC:
                lea     ($FF4400).l,a2
                move.w  #$1F,d0

loc_10AD6:
                tst.b   (a2)
                beq.s   locret_10AE0
                addq.w  #8,a2
                dbf     d0,loc_10AD6

locret_10AE0:
                rts
; End of function sub_10ACC

; ---------------------------------------------------------------------------

loc_10AE2:
                lea     ($FF4400).l,a0
                move.w  #$1F,d7

loc_10AEC:
                moveq   #0,d0
                move.b  (a0),d0
                beq.s   loc_10AFA
                lsl.w   #2,d0
                movea.l loc_10AFC+2(pc,d0.w),a1
                jsr     (a1)

loc_10AFA:
                addq.w  #8,a0

loc_10AFC:
                dbf     d7,loc_10AEC
                rts
; ---------------------------------------------------------------------------
                dc.l loc_10B0A
                dc.l loc_10B3A
; ---------------------------------------------------------------------------

loc_10B0A:
                subq.b  #1,2(a0)
                bpl.s   locret_10B32
                move.b  #5,2(a0)
                moveq   #0,d0
                move.b  3(a0),d0
                addq.b  #1,3(a0)
                movea.l 4(a0),a1
                move.b  byte_10B34(pc,d0.w),d0
                move.b  d0,(a1)
                bne.s   locret_10B32
                clr.l   (a0)
                clr.l   4(a0)

locret_10B32:
                rts
; ---------------------------------------------------------------------------
byte_10B34:     dc.b $17, $18, $19, $1A, 0, 0
; ---------------------------------------------------------------------------

loc_10B3A:
                subq.b  #1,2(a0)
                bpl.s   locret_10B68
                move.b  #7,2(a0)
                moveq   #0,d0
                move.b  3(a0),d0
                addq.b  #1,3(a0)
                movea.l 4(a0),a1
                move.b  byte_10B6A(pc,d0.w),d0
                bne.s   loc_10B66
                clr.l   (a0)
                clr.l   4(a0)
                move.b  #$12,(a1)
                rts
; ---------------------------------------------------------------------------

loc_10B66:
                move.b  d0,(a1)

locret_10B68:
                rts
; ---------------------------------------------------------------------------
byte_10B6A:     dc.b $1B, $1C, $1B, $1C, 0, 0

; =============== S U B R O U T I N E =======================================


sub_10B70:
                lea     ($FF0000).l,a1
                move.w  #$FFF,d0

loc_10B7A:
                clr.l   (a1)+
                dbf     d0,loc_10B7A
                lea     ($FF172E).l,a1
                lea     (SS_Layout).l,a0
                moveq   #$23,d1

loc_10B8E:
                moveq   #8,d2

loc_10B90:
                move.l  (a0)+,(a1)+
                dbf     d2,loc_10B90
                lea     $5C(a1),a1
                dbf     d1,loc_10B8E
                lea     ($FF4008).l,a1
                lea     (SS_MapIndex).l,a0
                moveq   #$1B,d1

loc_10BAC:
                move.l  (a0)+,(a1)+
                move.w  #0,(a1)+
                move.b  -4(a0),-1(a1)
                move.w  (a0)+,(a1)+
                dbf     d1,loc_10BAC
                lea     ($FF4400).l,a1
                move.w  #$3F,d1 

loc_10BC8:
                clr.l   (a1)+
                dbf     d1,loc_10BC8
                rts
; End of function sub_10B70

; ---------------------------------------------------------------------------
SS_MapIndex:    dc.l Map_SSWalls
                dc.w $142
                dc.l Map_SSWalls
                dc.w $2142
                dc.l Map_SSWalls
                dc.w $4142
                dc.l Map_SSWalls
                dc.w $6142
                dc.l Map_SSWalls
                dc.w $142
                dc.l Map_SSWalls
                dc.w $142
                dc.l Map_SSWalls
                dc.w $142
                dc.l Map_SSWalls
                dc.w $142
                dc.l Map_SSWalls
                dc.w $2142
                dc.l Map_SSWalls
                dc.w $2142
                dc.l Map_SSWalls
                dc.w $2142
                dc.l Map_SSWalls
                dc.w $2142
                dc.l Map_SSWalls
                dc.w $4142
                dc.l Map_SSWalls
                dc.w $4142
                dc.l Map_SSWalls
                dc.w $4142
                dc.l Map_SSWalls
                dc.w $4142
                dc.l Map_Signpost_Sparkle
                dc.w $27B2
                dc.l unk_C6C2
                dc.w $23B
                dc.l unk_10C78
                dc.w $251
                dc.l unk_10C88
                dc.w $251
                dc.l unk_10C78
                dc.w $263
                dc.l unk_10C88
                dc.w $263
                dc.l Map_Signpost_Sparkle+$4000000
                dc.w $27B2
                dc.l Map_Signpost_Sparkle+$5000000
                dc.w $27B2
                dc.l Map_Signpost_Sparkle+$6000000
                dc.w $27B2
                dc.l Map_Signpost_Sparkle+$7000000
                dc.w $27B2
                dc.l unk_C6C2+$1000000
                dc.w $23B
                dc.l unk_C6C2+$2000000
                dc.w $23B
unk_10C78:      dc.b   0
                dc.b   4
                dc.b   0
                dc.b  $A
                dc.b   1
                dc.b $F4
                dc.b  $A
                dc.b   0
                dc.b   0
                dc.b $F4
                dc.b   1
                dc.b $F4
                dc.b  $A
                dc.b $20
                dc.b   0
                dc.b $F4
unk_10C88:      dc.b   0
                dc.b   4
                dc.b   0
                dc.b  $A
                dc.b   1
                dc.b $F4
                dc.b  $A
                dc.b   0
                dc.b   9
                dc.b $F4
                dc.b   1
                dc.b $F4
                dc.b  $A
                dc.b $20
                dc.b   9
                dc.b $F4
                dc.b $43 ; C
                dc.b $F9
                dc.b   0
                dc.b $FF
                dc.b $10
                dc.b $20
                dc.b $41 
                dc.b $F9
                dc.b   0
                dc.b   6
                dc.b $AB
                dc.b   8
                dc.b $72 ; r
                dc.b $3F ; ?
                dc.b $74 ; t
                dc.b  $F
                dc.b $22 ; "
                dc.b $D8
                dc.b $51 ; Q
                dc.b $CA
                dc.b $FF
                dc.b $FC
                dc.b $43 ; C
                dc.b $E9
                dc.b   0
                dc.b $40 ; @
                dc.b $51 ; Q
                dc.b $C9
                dc.b $FF
                dc.b $F2
                dc.b $4E ; N
                dc.b $75 ; u
; ---------------------------------------------------------------------------
; ObjSpecialSonic:
Obj09:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  Obj09_Index(pc,d0.w),d1
                jmp     Obj09_Index(pc,d1.w)
; ---------------------------------------------------------------------------
Obj09_Index:dc.w Obj09_Init-*
                dc.w loc_10D0A-Obj09_Index
                dc.w loc_10EF8-Obj09_Index
                dc.w loc_10F3C-Obj09_Index
; ---------------------------------------------------------------------------

Obj09_Init:
                addq.b  #2,$24(a0)
                move.b  #$E,$16(a0)
                move.b  #7,$17(a0)
                move.l  #Map_Sonic,4(a0)
                move.w  #$780,2(a0)
                move.b  #4,1(a0)
                move.b  #0,$19(a0)
                move.b  #2,$1C(a0)
                bset    #2,$22(a0)
                bset    #1,$22(a0)

loc_10D0A:
                move.b  #0,$30(a0)
                moveq   #0,d0
                move.b  $22(a0),d0
                andi.w  #2,d0
                move.w  Obj09_Modes(pc,d0.w),d1
                jsr     Obj09_Modes(pc,d1.w)
                jsr     (Sonic_LoadDPLCs).l
                jmp     (DisplaySprite).l
; ---------------------------------------------------------------------------
Obj09_Modes:dc.w Obj09_OnWall-*
                dc.w Obj09_InAir-Obj09_Modes
; ---------------------------------------------------------------------------

Obj09_OnWall:
                bsr.w   Obj09_Jump
                bsr.w   Obj09_Move
                bsr.w   Obj09_Fall
                bra.s   Obj09_Display
; ---------------------------------------------------------------------------

Obj09_InAir:
                bsr.w   Obj09_Move
                bsr.w   Obj09_Fall

Obj09_Display:
                bsr.w   sub_1107C
                bsr.w   sub_110DE
                jsr     (ObjectMove).l
                bsr.w   sub_10ECE
                btst    #6,($FFFFF604).w
                beq.s   loc_10D66
                subq.w  #2,($FFFFF782).w

loc_10D66:
                btst    #4,($FFFFF604).w
                beq.s   loc_10D72
                addq.w  #2,($FFFFF782).w

loc_10D72:
                btst    #7,($FFFFF605).w
                beq.s   loc_10D80
                move.w  #0,($FFFFF782).w

loc_10D80:
                move.w  ($FFFFF780).w,d0
                add.w   ($FFFFF782).w,d0
                move.w  d0,($FFFFF780).w
                jsr     (Sonic_Animate).l
                rts

; =============== S U B R O U T I N E =======================================


Obj09_Move:
                btst    #2,($FFFFF602).w
                beq.s   Obj09_CheckRight
                bsr.w   sub_10E2C

Obj09_CheckRight:
                btst    #3,($FFFFF602).w
                beq.s   loc_10DAC
                bsr.w   sub_10E5C

loc_10DAC:
                move.b  ($FFFFF602).w,d0
                andi.b  #$C,d0
                bne.s   loc_10DDC
                move.w  $14(a0),d0
                beq.s   loc_10DDC
                bmi.s   loc_10DCE
                subi.w  #$C,d0
                bcc.s   loc_10DC8
                move.w  #0,d0

loc_10DC8:
                move.w  d0,$14(a0)
                bra.s   loc_10DDC
; ---------------------------------------------------------------------------

loc_10DCE:
                addi.w  #$C,d0
                bcc.s   loc_10DD8
                move.w  #0,d0

loc_10DD8:
                move.w  d0,$14(a0)

loc_10DDC:
                move.b  ($FFFFF780).w,d0
                addi.b  #$20,d0 
                andi.b  #$C0,d0
                neg.b   d0
                jsr     (CalcSine).l
                muls.w  $14(a0),d1
                add.l   d1,8(a0)
                muls.w  $14(a0),d0
                add.l   d0,$C(a0)
                movem.l d0-d1,-(sp)
                move.l  $C(a0),d2
                move.l  8(a0),d3
                bsr.w   sub_1100E
                beq.s   loc_10E26
                movem.l (sp)+,d0-d1
                sub.l   d1,8(a0)
                sub.l   d0,$C(a0)
                move.w  #0,$14(a0)
                rts
; ---------------------------------------------------------------------------

loc_10E26:
                movem.l (sp)+,d0-d1
                rts
; End of function Obj09_Move


; =============== S U B R O U T I N E =======================================


sub_10E2C:
                bset    #0,$22(a0)
                move.w  $14(a0),d0
                beq.s   loc_10E3A
                bpl.s   loc_10E4E

loc_10E3A:
                subi.w  #$C,d0
                cmpi.w  #$F800,d0
                bgt.s   loc_10E48
                move.w  #$F800,d0

loc_10E48:
                move.w  d0,$14(a0)
                rts
; ---------------------------------------------------------------------------

loc_10E4E:
                subi.w  #$40,d0 
                bcc.s   loc_10E56
                nop

loc_10E56:
                move.w  d0,$14(a0)
                rts
; End of function sub_10E2C


; =============== S U B R O U T I N E =======================================


sub_10E5C:
                bclr    #0,$22(a0)
                move.w  $14(a0),d0
                bmi.s   loc_10E7C
                addi.w  #$C,d0
                cmpi.w  #$800,d0
                blt.s   loc_10E76
                move.w  #$800,d0

loc_10E76:
                move.w  d0,$14(a0)
                bra.s   locret_10E88
; ---------------------------------------------------------------------------

loc_10E7C:
                addi.w  #$40,d0 
                bcc.s   loc_10E84
                nop

loc_10E84:
                move.w  d0,$14(a0)

locret_10E88:
                rts
; End of function sub_10E5C


; =============== S U B R O U T I N E =======================================


Obj09_Jump:
                move.b  ($FFFFF603).w,d0
                andi.b  #$20,d0 
                beq.s   Obj09_Jump_Return
                move.b  ($FFFFF780).w,d0
                andi.b  #$FC,d0
                neg.b   d0
                subi.b  #$40,d0 
                jsr     (CalcSine).l
                muls.w  #$700,d1
                asr.l   #8,d1
                move.w  d1,$10(a0)
                muls.w  #$700,d0
                asr.l   #8,d0
                move.w  d0,$12(a0)
                bset    #1,$22(a0)
                move.w  #$A0,d0
                jsr     (PlaySound_Special).l

Obj09_Jump_Return:
                rts
; End of function Obj09_Jump


; =============== S U B R O U T I N E =======================================


sub_10ECE:
                move.w  $C(a0),d2
                move.w  8(a0),d3
                move.w  ($FFFFF700).w,d0
                subi.w  #$A0,d3
                bcs.s   loc_10EE6
                sub.w   d3,d0
                sub.w   d0,($FFFFF700).w

loc_10EE6:
                move.w  ($FFFFF704).w,d0
                subi.w  #$70,d2 
                bcs.s   locret_10EF6
                sub.w   d2,d0
                sub.w   d0,($FFFFF704).w

locret_10EF6:
                rts
; End of function sub_10ECE

; ---------------------------------------------------------------------------

loc_10EF8:
                addi.w  #$40,($FFFFF782).w 
                cmpi.w  #$3000,($FFFFF782).w
                blt.s   loc_10F1C
                move.w  #0,($FFFFF782).w
                move.w  #$4000,($FFFFF780).w
                addq.b  #2,$24(a0)
                move.w  #$12C,$38(a0)

loc_10F1C:
                move.w  ($FFFFF780).w,d0
                add.w   ($FFFFF782).w,d0
                move.w  d0,($FFFFF780).w
                bsr.w   Sonic_Animate
                jsr     (Sonic_LoadDPLCs).l
                bsr.w   sub_10ECE
                jmp     (DisplaySprite).l
; ---------------------------------------------------------------------------

loc_10F3C:
                subq.w  #1,$38(a0)
                bne.s   loc_10F66
                clr.w   ($FFFFF780).w
                move.w  #$40,($FFFFF782).w 
                move.w  #$458,($FFFFD008).w
                move.w  #$4A0,($FFFFD00C).w
                clr.b   $24(a0)
                move.l  a0,-(sp)
                jsr     (sub_10B70).l
                movea.l (sp)+,a0

loc_10F66:
                jsr     (Sonic_Animate).l
                jsr     (Sonic_LoadDPLCs).l
                bsr.w   sub_10ECE
                jmp     (DisplaySprite).l

; =============== S U B R O U T I N E =======================================


Obj09_Fall:
                move.l  $C(a0),d2
                move.l  8(a0),d3
                move.b  ($FFFFF780).w,d0
                andi.b  #$FC,d0
                jsr     (CalcSine).l
                move.w  $10(a0),d4
                ext.l   d4
                asl.l   #8,d4
                muls.w  #$2A,d0 
                add.l   d4,d0
                move.w  $12(a0),d4
                ext.l   d4
                asl.l   #8,d4
                muls.w  #$2A,d1
                add.l   d4,d1
                add.l   d0,d3
                bsr.w   sub_1100E
                beq.s   loc_10FD6
                sub.l   d0,d3
                moveq   #0,d0
                move.w  d0,$10(a0)
                bclr    #1,$22(a0)
                add.l   d1,d2
                bsr.w   sub_1100E
                beq.s   loc_10FEC
                sub.l   d1,d2
                moveq   #0,d1
                move.w  d1,$12(a0)
                rts
; ---------------------------------------------------------------------------

loc_10FD6:
                add.l   d1,d2
                bsr.w   sub_1100E
                beq.s   loc_10FFA
                sub.l   d1,d2
                moveq   #0,d1
                move.w  d1,$12(a0)
                bclr    #1,$22(a0)

loc_10FEC:
                asr.l   #8,d0
                asr.l   #8,d1
                move.w  d0,$10(a0)
                move.w  d1,$12(a0)
                rts
; ---------------------------------------------------------------------------

loc_10FFA:
                asr.l   #8,d0
                asr.l   #8,d1
                move.w  d0,$10(a0)
                move.w  d1,$12(a0)
                bset    #1,$22(a0)
                rts
; End of function Obj09_Fall


; =============== S U B R O U T I N E =======================================


sub_1100E:
                lea     ($FF0000).l,a1
                moveq   #0,d4
                swap    d2
                move.w  d2,d4
                swap    d2
                addi.w  #$44,d4 
                divu.w  #$18,d4
                mulu.w  #$80,d4
                adda.l  d4,a1
                moveq   #0,d4
                swap    d3
                move.w  d3,d4
                swap    d3
                addi.w  #$14,d4
                divu.w  #$18,d4
                adda.w  d4,a1
                moveq   #0,d5
                move.b  (a1)+,d4
                bsr.s   sub_11056
                move.b  (a1)+,d4
                bsr.s   sub_11056
                adda.w  #$7E,a1
                move.b  (a1)+,d4
                bsr.s   sub_11056
                move.b  (a1)+,d4
                bsr.s   sub_11056
                tst.b   d5
                rts
; End of function sub_1100E


; =============== S U B R O U T I N E =======================================


sub_11056:
                beq.s   locret_1105E
                cmpi.b  #$11,d4
                bne.s   loc_11060

locret_1105E:
                rts
; ---------------------------------------------------------------------------

loc_11060:
                cmpi.b  #$12,d4
                bcs.s   loc_11078
                cmpi.b  #$17,d4
                bcc.s   locret_1105E
                move.b  d4,$30(a0)
                move.l  a1,$32(a0)
                moveq   #$FFFFFFFF,d5
                rts
; ---------------------------------------------------------------------------

loc_11078:
                moveq   #$FFFFFFFF,d5
                rts
; End of function sub_11056


; =============== S U B R O U T I N E =======================================


sub_1107C:
                lea     ($FF0000).l,a1
                moveq   #0,d4
                move.w  $C(a0),d4
                addi.w  #$50,d4
                divu.w  #$18,d4
                mulu.w  #$80,d4
                adda.l  d4,a1
                moveq   #0,d4
                move.w  8(a0),d4
                addi.w  #$20,d4
                divu.w  #$18,d4
                adda.w  d4,a1
                move.b  (a1),d4
                bne.s   loc_110AE
                moveq   #0,d4
                rts
; ---------------------------------------------------------------------------

loc_110AE:
                cmpi.b  #$11,d4
                bne.s   loc_110D0
                bsr.w   sub_10ACC
                bne.s   loc_110C2
                move.b  #1,(a2)
                move.l  a1,4(a2)

loc_110C2:
                move.w  #$B5,d0
                jsr     (PlaySound_Special).l
                moveq   #0,d4
                rts
; ---------------------------------------------------------------------------

loc_110D0:
                cmpi.b  #$12,d4
                bne.s   loc_110DA
                moveq   #0,d4
                rts
; ---------------------------------------------------------------------------

loc_110DA:
                moveq   #$FFFFFFFF,d4
                rts
; End of function sub_1107C


; =============== S U B R O U T I N E =======================================


sub_110DE:
                move.b  $30(a0),d0
                bne.s   loc_110FE
                subq.b  #1,$36(a0)
                bpl.s   loc_110F0
                move.b  #0,$36(a0)

loc_110F0:
                subq.b  #1,$37(a0)
                bpl.s   locret_110FC
                move.b  #0,$37(a0)

locret_110FC:
                rts
; ---------------------------------------------------------------------------

loc_110FE:
                cmpi.b  #$12,d0
                bne.s   loc_11176
                move.l  $32(a0),d1
                subi.l  #$FF0001,d1
                move.w  d1,d2
                andi.w  #$7F,d1
                mulu.w  #$18,d1
                subi.w  #$14,d1
                lsr.w   #7,d2
                andi.w  #$7F,d2
                mulu.w  #$18,d2
                subi.w  #$44,d2
                sub.w   8(a0),d1
                sub.w   $C(a0),d2
                jsr     (CalcAngle).l
                jsr     (CalcSine).l
                muls.w  #$FB00,d1
                asr.l   #8,d1
                move.w  d1,$10(a0)
                muls.w  #$FB00,d0
                asr.l   #8,d0
                move.w  d0,$12(a0)
                bset    #1,$22(a0)
                bsr.w   sub_10ACC
                bne.s   loc_1116C
                move.b  #2,(a2)
                move.l  $32(a0),d0
                subq.l  #1,d0
                move.l  d0,4(a2)

loc_1116C:
                move.w  #$B4,d0
                jmp     (PlaySound_Special).l
; ---------------------------------------------------------------------------

loc_11176:
                cmpi.b  #$14,d0
                bne.s   loc_11182
                addq.b  #2,$24(a0)
                rts
; ---------------------------------------------------------------------------

loc_11182:
                cmpi.b  #$15,d0
                bne.s   loc_111A8
                tst.b   $36(a0)
                bne.s   locret_111C0
                move.b  #$1E,$36(a0)
                btst    #6,($FFFFF783).w
                beq.s   loc_111A2
                asl     ($FFFFF782).w
                rts
; ---------------------------------------------------------------------------

loc_111A2:
                asr     ($FFFFF782).w
                rts
; ---------------------------------------------------------------------------

loc_111A8:
                cmpi.b  #$16,d0
                bne.s   locret_111C0
                tst.b   $37(a0)
                bne.s   locret_111C0
                move.b  #$1E,$37(a0)
                neg.w   ($FFFFF782).w
                rts
; ---------------------------------------------------------------------------

locret_111C0:
                rts
; End of function sub_110DE

; ---------------------------------------------------------------------------

Obj10:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  Obj10_Index(pc,d0.w),d1
                jmp     Obj10_Index(pc,d1.w)
; ---------------------------------------------------------------------------
Obj10_Index:dc.w Obj10_Init-*
                dc.w Obj10_Display-Obj10_Index
                dc.w Obj10_Delete-Obj10_Index
                dc.w Obj10_Delete-Obj10_Index
; ---------------------------------------------------------------------------

Obj10_Init:
                addq.b  #2,$24(a0)
                move.b  #$12,$16(a0)
                move.b  #9,$17(a0)
                move.l  #Map_Sonic,4(a0)
                move.w  #$780,2(a0)
                move.b  #4,1(a0)
                move.b  #2,$19(a0)

Obj10_Display:
                bsr.w   Obj10_Control
                bsr.w   Sonic_LoadDPLCs
                jmp     (DisplaySprite).l

; =============== S U B R O U T I N E =======================================


Obj10_Control:
                move.b  ($FFFFF602).w,d4
                move.w  $C(a0),d2
                move.w  8(a0),d3
                moveq   #1,d1
                btst    #0,d4
                beq.s   Obj10_ChkDown
                sub.w   d1,d2

Obj10_ChkDown:
                btst    #1,d4
                beq.s   Obj10_ChkLeft
                add.w   d1,d2

Obj10_ChkLeft:
                btst    #2,d4
                beq.s   Obj10_ChkRight
                sub.w   d1,d3

Obj10_ChkRight:
                btst    #3,d4
                beq.s   Obj10_ChkB
                add.w   d1,d3

Obj10_ChkB:
                move.w  d2,$C(a0)
                move.w  d3,8(a0)
                btst    #4,($FFFFF603).w
                beq.s   Obj10_ChkC
                move.b  1(a0),d0
                move.b  d0,d1
                addq.b  #1,d0
                andi.b  #3,d0
                andi.b  #$FC,d1
                or.b    d1,d0
                move.b  d0,1(a0)

Obj10_ChkC:
                btst    #5,($FFFFF603).w
                beq.s   Obj10_Animate
                addq.b  #1,$1C(a0)
                cmpi.b  #$19,$1C(a0)
                bcs.s   Obj10_Animate
                move.b  #0,$1C(a0)

Obj10_Animate:
                jsr     (Sonic_Animate).l
                rts
; End of function Obj10_Control

; ---------------------------------------------------------------------------

Obj10_Delete:
                jmp     (DeleteObject).l
; ---------------------------------------------------------------------------

loc_1128C:
                tst.w   ($FFFFF63A).w
                bmi.s   AnimArt_Pause
                lea     ($C00000).l,a6
                moveq   #0,d0
                move.b  ($FFFFFE10).w,d0
                add.w   d0,d0
                move.w  AnimArt_Index(pc,d0.w),d0
                jmp     AnimArt_Index(pc,d0.w)
; ---------------------------------------------------------------------------

AnimArt_Pause:
                rts
; ---------------------------------------------------------------------------
AnimArt_Index:  dc.w AnimArt_GHZ-AnimArt_Index
                dc.w AnimArt_Null-AnimArt_Index
                dc.w AnimArt_MZ-AnimArt_Index
                dc.w AnimArt_Null-AnimArt_Index
                dc.w AnimArt_Null-AnimArt_Index
                dc.w AnimArt_Null-AnimArt_Index
                dc.w AnimArt_Null-AnimArt_Index
; ---------------------------------------------------------------------------

AnimArt_GHZ:
                subq.b  #1,($FFFFF7B1).w
                bpl.s   AnimGHZ_Sunflower
                move.b  #5,($FFFFF7B1).w
                lea     (Art_GHZWaterfall).l,a1
                move.b  ($FFFFF7B0).w,d0
                addq.b  #1,($FFFFF7B0).w
                andi.w  #1,d0
                beq.s   loc_112DC
                lea     $100(a1),a1

loc_112DC:
                move.l  #$6F000001,($C00004).l
                move.w  #7,d1
                bra.w   LoadTiles
; ---------------------------------------------------------------------------

AnimGHZ_Sunflower:
                subq.b  #1,($FFFFF7B3).w
                bpl.s   loc_11324
                move.b  #$F,($FFFFF7B3).w
                lea     (Art_GHZSunflower).l,a1
                move.b  ($FFFFF7B2).w,d0
                addq.b  #1,($FFFFF7B2).w
                andi.w  #1,d0
                beq.s   loc_11312
                lea     $200(a1),a1

loc_11312:
                move.l  #$6B800001,($C00004).l
                move.w  #$F,d1
                bra.w   LoadTiles
; ---------------------------------------------------------------------------

loc_11324:
                subq.b  #1,($FFFFF7B5).w
                bpl.s   locret_11370
                move.b  #7,($FFFFF7B5).w
                move.b  ($FFFFF7B4).w,d0
                addq.b  #1,($FFFFF7B4).w
                andi.w  #3,d0
                move.b  AnimGHZ_FrameOrder(pc,d0.w),d0
                btst    #0,d0
                bne.s   AnimGHZ_PurpleFlower
                move.b  #$7F,($FFFFF7B5).w

AnimGHZ_PurpleFlower:
                lsl.w   #7,d0
                move.w  d0,d1
                add.w   d0,d0
                add.w   d1,d0
                move.l  #$6D800001,($C00004).l
                lea     (Art_GHZPurpleFlower).l,a1
                lea     (a1,d0.w),a1
                move.w  #$B,d1
                bsr.w   LoadTiles

locret_11370:
                rts
; ---------------------------------------------------------------------------
AnimGHZ_FrameOrder:dc.b 0, 1, 2, 1
; ---------------------------------------------------------------------------

AnimArt_MZ:
                subq.b  #1,($FFFFF7B1).w
                bpl.s   loc_113B4
                move.b  #$13,($FFFFF7B1).w
                lea     (Art_MZLavaSurface).l,a1
                moveq   #0,d0
                move.b  ($FFFFF7B0).w,d0
                addq.b  #1,d0
                cmpi.b  #3,d0
                bne.s   loc_11398
                moveq   #0,d0

loc_11398:
                move.b  d0,($FFFFF7B0).w
                mulu.w  #$100,d0
                adda.w  d0,a1
                move.l  #$5C400001,($C00004).l
                move.w  #7,d1
                bsr.w   LoadTiles

loc_113B4:
                subq.b  #1,($FFFFF7B3).w
                bpl.s   AnimMZ_UFO
                move.b  #1,($FFFFF7B3).w
                moveq   #0,d0
                move.b  ($FFFFF7B0).w,d0
                lea     (Art_MZLavaBody).l,a4
                ror.w   #7,d0
                adda.w  d0,a4
                move.l  #$5A400001,($C00004).l
                moveq   #0,d3
                move.b  ($FFFFF7B2).w,d3
                addq.b  #1,($FFFFF7B2).w
                move.b  ($FFFFFE68).w,d3
                move.w  #3,d2

loc_113EC:
                move.w  d3,d0
                add.w   d0,d0
                andi.w  #$1E,d0
                lea     (AnimMZ_Routines).l,a3
                move.w  (a3,d0.w),d0
                lea     (a3,d0.w),a3
                movea.l a4,a1
                move.w  #$1F,d1
                jsr     (a3)
                addq.w  #4,d3
                dbf     d2,loc_113EC
                rts
; ---------------------------------------------------------------------------

AnimMZ_UFO:
                subq.b  #1,($FFFFF7B5).w
                bpl.w   AnimMZ_Return
                move.b  #7,($FFFFF7B5).w
                lea     (Art_MZUFOs).l,a1
                moveq   #0,d0
                move.b  ($FFFFF7B4).w,d0
                addq.b  #1,d0
                cmpi.b  #5,d0		; This is meant to be 6, changing it to 6 will enable the last frame of the UFOs which goes unused.
                bne.s   AnimMZ_Torch
                moveq   #0,d0

AnimMZ_Torch:
                move.b  d0,($FFFFF7B4).w
                mulu.w  #$100,d0
                adda.w  d0,a1
                move.l  #$5D400001,($C00004).l
                move.w  #7,d1
                bsr.w   LoadTiles
                lea     (Art_MZTorch).l,a1
                moveq   #0,d0
                move.b  ($FFFFF7B6).w,d0
                addq.b  #1,($FFFFF7B6).w
                andi.b  #3,($FFFFF7B6).w
                mulu.w  #$C0,d0
                adda.w  d0,a1
                move.l  #$5E400001,($C00004).l
                move.w  #5,d1
                bra.w   LoadTiles
; ---------------------------------------------------------------------------

AnimMZ_Return:
                rts
; ---------------------------------------------------------------------------

AnimArt_Null:
                rts

; =============== S U B R O U T I N E =======================================


LoadTiles:
                move.l  (a1)+,(a6)
                move.l  (a1)+,(a6)
                move.l  (a1)+,(a6)
                move.l  (a1)+,(a6)
                move.l  (a1)+,(a6)
                move.l  (a1)+,(a6)
                move.l  (a1)+,(a6)
                move.l  (a1)+,(a6)
                dbf     d1,LoadTiles
                rts
; End of function LoadTiles

; ---------------------------------------------------------------------------
AnimMZ_Routines:dc.w loc_114BA-*
                dc.w loc_114C6-AnimMZ_Routines
                dc.w loc_114DC-AnimMZ_Routines
                dc.w loc_114EA-AnimMZ_Routines
                dc.w loc_11500-AnimMZ_Routines
                dc.w loc_1150E-AnimMZ_Routines
                dc.w loc_11524-AnimMZ_Routines
                dc.w loc_11532-AnimMZ_Routines
                dc.w loc_11548-AnimMZ_Routines
                dc.w loc_11556-AnimMZ_Routines
                dc.w loc_1156C-AnimMZ_Routines
                dc.w loc_1157A-AnimMZ_Routines
                dc.w loc_11590-AnimMZ_Routines
                dc.w loc_1159E-AnimMZ_Routines
                dc.w loc_115B4-AnimMZ_Routines
                dc.w loc_115C6-AnimMZ_Routines
; ---------------------------------------------------------------------------

loc_114BA:
                move.l  (a1),(a6)
                lea     $10(a1),a1
                dbf     d1,loc_114BA
                rts
; ---------------------------------------------------------------------------

loc_114C6:
                move.l  2(a1),d0
                move.b  1(a1),d0
                ror.l   #8,d0
                move.l  d0,(a6)
                lea     $10(a1),a1
                dbf     d1,loc_114C6
                rts
; ---------------------------------------------------------------------------

loc_114DC:
                move.l  2(a1),(a6)
                lea     $10(a1),a1
                dbf     d1,loc_114DC
                rts
; ---------------------------------------------------------------------------

loc_114EA:
                move.l  4(a1),d0
                move.b  3(a1),d0
                ror.l   #8,d0
                move.l  d0,(a6)
                lea     $10(a1),a1
                dbf     d1,loc_114EA
                rts
; ---------------------------------------------------------------------------

loc_11500:
                move.l  4(a1),(a6)
                lea     $10(a1),a1
                dbf     d1,loc_11500
                rts
; ---------------------------------------------------------------------------

loc_1150E:
                move.l  6(a1),d0
                move.b  5(a1),d0
                ror.l   #8,d0
                move.l  d0,(a6)
                lea     $10(a1),a1
                dbf     d1,loc_1150E
                rts
; ---------------------------------------------------------------------------

loc_11524:
                move.l  6(a1),(a6)
                lea     $10(a1),a1
                dbf     d1,loc_11524
                rts
; ---------------------------------------------------------------------------

loc_11532:
                move.l  8(a1),d0
                move.b  7(a1),d0
                ror.l   #8,d0
                move.l  d0,(a6)
                lea     $10(a1),a1
                dbf     d1,loc_11532
                rts
; ---------------------------------------------------------------------------

loc_11548:
                move.l  8(a1),(a6)
                lea     $10(a1),a1
                dbf     d1,loc_11548
                rts
; ---------------------------------------------------------------------------

loc_11556:
                move.l  $A(a1),d0
                move.b  9(a1),d0
                ror.l   #8,d0
                move.l  d0,(a6)
                lea     $10(a1),a1
                dbf     d1,loc_11556
                rts
; ---------------------------------------------------------------------------

loc_1156C:
                move.l  $A(a1),(a6)
                lea     $10(a1),a1
                dbf     d1,loc_1156C
                rts
; ---------------------------------------------------------------------------

loc_1157A:
                move.l  $C(a1),d0
                move.b  $B(a1),d0
                ror.l   #8,d0
                move.l  d0,(a6)
                lea     $10(a1),a1
                dbf     d1,loc_1157A
                rts
; ---------------------------------------------------------------------------

loc_11590:
                move.l  $C(a1),(a6)
                lea     $10(a1),a1
                dbf     d1,loc_11590
                rts
; ---------------------------------------------------------------------------

loc_1159E:
                move.l  $C(a1),d0
                rol.l   #8,d0
                move.b  0(a1),d0
                move.l  d0,(a6)
                lea     $10(a1),a1
                dbf     d1,loc_1159E
                rts
; ---------------------------------------------------------------------------

loc_115B4:
                move.w  $E(a1),(a6)
                move.w  0(a1),(a6)
                lea     $10(a1),a1
                dbf     d1,loc_115B4
                rts
; ---------------------------------------------------------------------------

loc_115C6:
                move.l  0(a1),d0
                move.b  $F(a1),d0
                ror.l   #8,d0
                move.l  d0,(a6)
                lea     $10(a1),a1
                dbf     d1,loc_115C6
                rts
; ---------------------------------------------------------------------------

ObjHUD:
                moveq   #0,d0
                move.b  $24(a0),d0
                move.w  ObjHUD_Index(pc,d0.w),d1
                jmp     ObjHUD_Index(pc,d1.w)
; ---------------------------------------------------------------------------
ObjHUD_Index:   dc.w ObjHUD_Init-*
                dc.w ObjHUD_Display-ObjHUD_Index
; ---------------------------------------------------------------------------

ObjHUD_Init:
                addq.b  #2,$24(a0)
                move.w  #$90,8(a0)
                move.w  #$108,$A(a0)
                move.l  #Map_HUD,4(a0)
                move.w  #$6CA,2(a0)
                move.b  #0,1(a0)
                move.b  #0,$19(a0)

ObjHUD_Display:
                jmp     (DisplaySprite).l
; ---------------------------------------------------------------------------
Map_HUD:        include "Map/HUD.asm"

; =============== S U B R O U T I N E =======================================


sub_1164E:
                move.b  #1,($FFFFFE1F).w
                lea     ($FFFFFE50).w,a2
                lea     ($FFFFFE26).w,a3
                add.l   d0,(a3)
                move.l  #$F423F,d1
                cmp.l   (a3),d1
                bhi.w   loc_1166E
                move.l  d1,(a3)
                move.l  d1,(a2)

loc_1166E:
                move.l  (a3),d0
                cmp.l   (a2),d0
                bcs.w   locret_11678
                move.l  d0,(a2)

locret_11678:
                rts
; End of function sub_1164E


; =============== S U B R O U T I N E =======================================


sub_1167A:
                tst.w   ($FFFFFFFA).w
                bne.w   loc_11746
                tst.b   ($FFFFFE1F).w
                beq.s   loc_1169A
                clr.b   ($FFFFFE1F).w
                move.l  #$5C800003,d0
                move.l  ($FFFFFE26).w,d1
                bsr.w   sub_1187E

loc_1169A:
                tst.b   ($FFFFFE1D).w
                beq.s   loc_116BA
                bpl.s   loc_116A6
                bsr.w   sub_117B2

loc_116A6:
                clr.b   ($FFFFFE1D).w
                move.l  #$5F400003,d0
                moveq   #0,d1
                move.w  ($FFFFFE20).w,d1
                bsr.w   sub_11874

loc_116BA:
                tst.b   ($FFFFFE1E).w
                beq.s   loc_1170E
                tst.w   ($FFFFF63A).w
                bmi.s   loc_1170E
                lea     ($FFFFFE26).w,a1
                addq.b  #1,-(a1)
                cmpi.b  #$3C,(a1) 
                bcs.s   loc_1170E
                move.b  #0,(a1)
                addq.b  #1,-(a1)
                cmpi.b  #$3C,(a1)
                bcs.s   loc_116EE
                move.b  #0,(a1)
                addq.b  #1,-(a1)
                cmpi.b  #9,(a1)
                bcs.s   loc_116EE
                move.b  #9,(a1)

loc_116EE:
                move.l  #$5E400003,d0
                moveq   #0,d1
                move.b  ($FFFFFE23).w,d1
                bsr.w   sub_118F4
                move.l  #$5EC00003,d0
                moveq   #0,d1
                move.b  ($FFFFFE24).w,d1
                bsr.w   sub_118FE

loc_1170E:
                tst.b   ($FFFFFE1C).w
                beq.s   loc_1171C
                clr.b   ($FFFFFE1C).w
                bsr.w   sub_119BA

loc_1171C:
                tst.b   ($FFFFFE58).w
                beq.s   locret_11744
                clr.b   ($FFFFFE58).w
                move.l  #$6E000002,($C00004).l
                moveq   #0,d1
                move.w  ($FFFFFE54).w,d1
                bsr.w   sub_11958
                moveq   #0,d1
                move.w  ($FFFFFE56).w,d1
                bsr.w   sub_11958

locret_11744:
                rts
; ---------------------------------------------------------------------------

loc_11746:
                bsr.w   sub_1181E
                tst.b   ($FFFFFE1D).w
                beq.s   loc_1176A
                bpl.s   loc_11756
                bsr.w   sub_117B2

loc_11756:
                clr.b   ($FFFFFE1D).w
                move.l  #$5F400003,d0
                moveq   #0,d1
                move.w  ($FFFFFE20).w,d1
                bsr.w   sub_11874

loc_1176A:
                move.l  #$5EC00003,d0
                moveq   #0,d1
                move.b  ($FFFFF62C).w,d1
                bsr.w   sub_118FE
                tst.b   ($FFFFFE1C).w
                beq.s   loc_11788
                clr.b   ($FFFFFE1C).w
                bsr.w   sub_119BA

loc_11788:
                tst.b   ($FFFFFE58).w
                beq.s   locret_117B0
                clr.b   ($FFFFFE58).w
                move.l  #$6E000002,($C00004).l
                moveq   #0,d1
                move.w  ($FFFFFE54).w,d1
                bsr.w   sub_11958
                moveq   #0,d1
                move.w  ($FFFFFE56).w,d1
                bsr.w   sub_11958

locret_117B0:
                rts
; End of function sub_1167A


; =============== S U B R O U T I N E =======================================


sub_117B2:
                move.l  #$5F400003,($C00004).l
                lea     unk_1181A(pc),a2
                move.w  #2,d2
                bra.s   loc_117E2
; End of function sub_117B2


; =============== S U B R O U T I N E =======================================


sub_117C6:
                lea     ($C00000).l,a6
                bsr.w   sub_119BA
                move.l  #$5C400003,($C00004).l
                lea     unk_1180E(pc),a2
                move.w  #$E,d2

loc_117E2:
                lea     unk_11A26(pc),a1

loc_117E6:
                move.w  #$F,d1
                move.b  (a2)+,d0
                bmi.s   loc_11802
                ext.w   d0
                lsl.w   #5,d0
                lea     (a1,d0.w),a3

loc_117F6:
                move.l  (a3)+,(a6)
                dbf     d1,loc_117F6

loc_117FC:
                dbf     d2,loc_117E6
                rts
; ---------------------------------------------------------------------------

loc_11802:
                move.l  #0,(a6)
                dbf     d1,loc_11802
                bra.s   loc_117FC
; End of function sub_117C6

; ---------------------------------------------------------------------------
unk_1180E:      dc.b $16
                dc.b $FF
                dc.b $FF
                dc.b $FF
                dc.b $FF
                dc.b $FF
                dc.b $FF
                dc.b   0
                dc.b   0
                dc.b $14
                dc.b   0
                dc.b   0
unk_1181A:      dc.b $FF
                dc.b $FF
                dc.b   0
                dc.b   0

; =============== S U B R O U T I N E =======================================


sub_1181E:
                move.l  #$5C400003,($C00004).l
                move.w  ($FFFFF700).w,d1
                swap    d1
                move.w  ($FFFFD008).w,d1
                bsr.s   sub_1183E
                move.w  ($FFFFF704).w,d1
                swap    d1
                move.w  ($FFFFD00C).w,d1
; End of function sub_1181E


; =============== S U B R O U T I N E =======================================


sub_1183E:
                moveq   #7,d6
                lea     (Art_Text).l,a1

loc_11846:
                rol.w   #4,d1
                move.w  d1,d2
                andi.w  #$F,d2
                cmpi.w  #$A,d2
                bcs.s   loc_11856
                addq.w  #7,d2

loc_11856:
                lsl.w   #5,d2
                lea     (a1,d2.w),a3
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                swap    d1
                dbf     d6,loc_11846
                rts
; End of function sub_1183E


; =============== S U B R O U T I N E =======================================


sub_11874:
                lea     (unk_118E8).l,a2
                moveq   #2,d6
                bra.s   loc_11886
; End of function sub_11874


; =============== S U B R O U T I N E =======================================


sub_1187E:
                lea     (unk_118DC).l,a2
                moveq   #5,d6

loc_11886:
                moveq   #0,d4
                lea     unk_11A26(pc),a1

loc_1188C:
                moveq   #0,d2
                move.l  (a2)+,d3

loc_11890:
                sub.l   d3,d1
                bcs.s   loc_11898
                addq.w  #1,d2
                bra.s   loc_11890
; ---------------------------------------------------------------------------

loc_11898:
                add.l   d3,d1
                tst.w   d2
                beq.s   loc_118A2
                move.w  #1,d4

loc_118A2:
                tst.w   d4
                beq.s   loc_118D0
                lsl.w   #6,d2
                move.l  d0,4(a6)
                lea     (a1,d2.w),a3
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)

loc_118D0:
                addi.l  #$400000,d0
                dbf     d6,loc_1188C
                rts
; End of function sub_1187E

; ---------------------------------------------------------------------------
unk_118DC:      dc.b   0
                dc.b   1
                dc.b $86
                dc.b $A0
                dc.b   0
                dc.b   0
                dc.b $27 ; '
                dc.b $10
unk_118E4:      dc.b   0
                dc.b   0
                dc.b   3
                dc.b $E8
unk_118E8:      dc.b   0
                dc.b   0
                dc.b   0
                dc.b $64 ; d
unk_118EC:      dc.b   0
                dc.b   0
                dc.b   0
                dc.b  $A
unk_118F0:      dc.b   0
                dc.b   0
                dc.b   0
                dc.b   1

; =============== S U B R O U T I N E =======================================


sub_118F4:
                lea     (unk_118F0).l,a2
                moveq   #0,d6
                bra.s   loc_11906
; End of function sub_118F4


; =============== S U B R O U T I N E =======================================


sub_118FE:
                lea     (unk_118EC).l,a2
                moveq   #1,d6

loc_11906:
                moveq   #0,d4
                lea     unk_11A26(pc),a1

loc_1190C:
                moveq   #0,d2
                move.l  (a2)+,d3

loc_11910:
                sub.l   d3,d1
                bcs.s   loc_11918
                addq.w  #1,d2
                bra.s   loc_11910
; ---------------------------------------------------------------------------

loc_11918:
                add.l   d3,d1
                tst.w   d2
                beq.s   loc_11922
                move.w  #1,d4

loc_11922:
                lsl.w   #6,d2
                move.l  d0,4(a6)
                lea     (a1,d2.w),a3
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                addi.l  #$400000,d0
                dbf     d6,loc_1190C
                rts
; End of function sub_118FE


; =============== S U B R O U T I N E =======================================


sub_11958:
                lea     (unk_118E4).l,a2
                moveq   #3,d6
                moveq   #0,d4
                lea     unk_11A26(pc),a1

loc_11966:
                moveq   #0,d2
                move.l  (a2)+,d3

loc_1196A:
                sub.l   d3,d1
                bcs.s   loc_11972
                addq.w  #1,d2
                bra.s   loc_1196A
; ---------------------------------------------------------------------------

loc_11972:
                add.l   d3,d1
                tst.w   d2
                beq.s   loc_1197C
                move.w  #1,d4

loc_1197C:
                tst.w   d4
                beq.s   loc_119AC
                lsl.w   #6,d2
                lea     (a1,d2.w),a3
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)

loc_119A6:
                dbf     d6,loc_11966
                rts
; ---------------------------------------------------------------------------

loc_119AC:
                moveq   #$F,d5

loc_119AE:
                move.l  #0,(a6)
                dbf     d5,loc_119AE
                bra.s   loc_119A6
; End of function sub_11958


; =============== S U B R O U T I N E =======================================


sub_119BA:
                move.l  #$7BA00003,d0
                moveq   #0,d1
                move.b  ($FFFFFE12).w,d1
                lea     (unk_118EC).l,a2
                moveq   #1,d6
                moveq   #0,d4
                lea     unk_11D26(pc),a1

loc_119D4:
                move.l  d0,4(a6)
                moveq   #0,d2
                move.l  (a2)+,d3

loc_119DC:
                sub.l   d3,d1
                bcs.s   loc_119E4
                addq.w  #1,d2
                bra.s   loc_119DC
; ---------------------------------------------------------------------------

loc_119E4:
                add.l   d3,d1
                tst.w   d2
                beq.s   loc_119EE
                move.w  #1,d4

loc_119EE:
                tst.w   d4
                beq.s   loc_11A14

loc_119F2:
                lsl.w   #5,d2
                lea     (a1,d2.w),a3
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)
                move.l  (a3)+,(a6)

loc_11A08:
                addi.l  #$400000,d0
                dbf     d6,loc_119D4
                rts
; ---------------------------------------------------------------------------

loc_11A14:
                tst.w   d6
                beq.s   loc_119F2
                moveq   #7,d5

loc_11A1A:
                move.l  #0,(a6)
                dbf     d5,loc_11A1A
                bra.s   loc_11A08
; End of function sub_119BA

; ---------------------------------------------------------------------------
unk_11A26:      include "Unknown/Unk_11A26.asm"

unk_11D26:      include "Unknown/Unk_11D26.asm"
; ---------------------------------------------------------------------------

DebugMode:
                moveq   #0,d0
                move.b  ($FFFFFE08).w,d0
                move.w  Debug_Index(pc,d0.w),d1
                jmp     Debug_Index(pc,d1.w)
; ---------------------------------------------------------------------------
Debug_Index:    dc.w Debug_Main-*
                dc.w entry_11eb8-Debug_Index
; ---------------------------------------------------------------------------

Debug_Main:
                addq.b  #2,($FFFFFE08).w
                move.b  #0,$1A(a0)
                move.b  #0,$1C(a0)
                moveq   #0,d0
                move.b  ($FFFFFE10).w,d0
                lea     (DebugList).l,a2
                add.w   d0,d0
                adda.w  (a2,d0.w),a2
                move.w  (a2)+,d6
                cmp.b   ($FFFFFE06).w,d6
                bhi.s   loc_11EA8
                move.b  #0,($FFFFFE06).w

loc_11EA8:
                bsr.w   sub_11FCE
                move.b  #$C,($FFFFFE0A).w
                move.b  #1,($FFFFFE0B).w

entry_11eb8:
                moveq   #0,d0
                move.b  ($FFFFFE10).w,d0
                lea     (DebugList).l,a2
                add.w   d0,d0
                adda.w  (a2,d0.w),a2
                move.w  (a2)+,d6
                bsr.w   sub_11ED6
                jmp     (DisplaySprite).l

; =============== S U B R O U T I N E =======================================


sub_11ED6:
                moveq   #0,d4
                move.w  #1,d1
                move.b  ($FFFFF605).w,d4
                bne.s   loc_11F0E
                tst.b   ($FFFFF604).w
                bne.s   loc_11EF6
                move.b  #$C,($FFFFFE0A).w
                move.b  #$F,($FFFFFE0B).w
                rts
; ---------------------------------------------------------------------------

loc_11EF6:
                subq.b  #1,($FFFFFE0A).w
                bne.s   loc_11F12
                move.b  #1,($FFFFFE0A).w
                addq.b  #1,($FFFFFE0B).w
                bne.s   loc_11F0E
                move.b  #$FF,($FFFFFE0B).w

loc_11F0E:
                move.b  ($FFFFF604).w,d4

loc_11F12:
                moveq   #0,d1
                move.b  ($FFFFFE0B).w,d1
                addq.w  #1,d1
                swap    d1
                asr.l   #4,d1
                move.l  $C(a0),d2
                move.l  8(a0),d3
                btst    #0,d4
                beq.s   loc_11F32
                sub.l   d1,d2
                bcc.s   loc_11F32
                moveq   #0,d2

loc_11F32:
                btst    #1,d4
                beq.s   loc_11F48
                add.l   d1,d2
                cmpi.l  #$7FF0000,d2
                bcs.s   loc_11F48
                move.l  #$7FF0000,d2

loc_11F48:
                btst    #2,d4
                beq.s   loc_11F54
                sub.l   d1,d3
                bcc.s   loc_11F54
                moveq   #0,d3

loc_11F54:
                btst    #3,d4
                beq.s   loc_11F5C
                add.l   d1,d3

loc_11F5C:
                move.l  d2,$C(a0)
                move.l  d3,8(a0)
                btst    #6,($FFFFF603).w
                beq.s   loc_11F80
                addq.b  #1,($FFFFFE06).w
                cmp.b   ($FFFFFE06).w,d6
                bhi.s   loc_11F7C
                move.b  #0,($FFFFFE06).w

loc_11F7C:
                bra.w   sub_11FCE
; ---------------------------------------------------------------------------

loc_11F80:
                btst    #5,($FFFFF603).w
                beq.s   loc_11FA4
                jsr     (FindFreeObjectSlot).l
                bne.s   loc_11FA4
                move.w  8(a0),8(a1)
                move.w  $C(a0),$C(a1)
                move.b  4(a0),0(a1)
                rts
; ---------------------------------------------------------------------------

loc_11FA4:
                btst    #4,($FFFFF603).w
                beq.s   locret_11FCC
                moveq   #0,d0
                move.w  d0,($FFFFFE08).w
                move.l  #Map_Sonic,($FFFFD004).w
                move.w  #$780,($FFFFD002).w
                move.b  d0,($FFFFD01C).w
                move.w  d0,$A(a0)
                move.w  d0,$E(a0)

locret_11FCC:
                rts
; End of function sub_11ED6


; =============== S U B R O U T I N E =======================================


sub_11FCE:
                moveq   #0,d0
                move.b  ($FFFFFE06).w,d0
                lsl.w   #3,d0
                move.l  (a2,d0.w),4(a0)
                move.w  6(a2,d0.w),2(a0)
                move.b  5(a2,d0.w),$1A(a0)
                rts
; End of function sub_11FCE

; ---------------------------------------------------------------------------
DebugList:      include "_inc/Debug Index.asm"

Pattern_Load_Cues: include "_inc/Pattern Load Cues.asm"
                if Padding
                dcb.b $18000-*,$FF ; Padding
                endif
byte_18000:     incbin "Art/Nemesis/UnusedText.bin"
                even
Nem_Sega:       incbin "Art/Nemesis/Sega.bin"
                even
Eni_Sega:       incbin "Map/Eni/Sega.bin"
                even
byte_18A62:     incbin "Map/Eni/Title.bin"
                even
Nem_Title:      incbin "Art/Nemesis/Title.bin"
                even
Nem_TitleSonic: incbin "Art/Nemesis/TitleSonic.bin"
                even
Map_Sonic:      include "Map/Sonic.asm"

SonicDynPLC:    include "Map/SonicPLC.asm"

Art_Sonic:      incbin "Art/Uncompressed/Sonic.bin"
                even
;---------------------------------------------------
; Nemesis compressed art
;---------------------------------------------------
Nem_Smoke:      incbin "Art/Nemesis/Smoke.bin"
                even
Nem_Splash:     incbin "Art/Nemesis/Splash.bin"
                even
Nem_Sparkles:   incbin "Art/Nemesis/Sparkles.bin"
                even
Nem_Shield:     incbin "Art/Nemesis/Shield.bin"
                even
Nem_InvincStars:incbin "Art/Nemesis/InvStars.bin"
                even
Nem_SSWarp:     incbin "Art/Nemesis/SSWarp.bin"
                even
Nem_FlowerStalk:incbin "Art/Nemesis/FlowerStalk.bin"
                even
Nem_Fireballs:  incbin "Art/Nemesis/Fireballs.bin"
                even
Nem_SwingPltfrm:incbin "Art/Nemesis/SwingPltfrm.bin"
                even
Nem_GHZBridge:  incbin "Art/Nemesis/GHZBridge.bin"
                even
Nem_GHZBall:    incbin "Art/Nemesis/GHZBall.bin"
                even
Nem_Spikes:     incbin "Art/Nemesis/Spikes.bin"
                even
Nem_GHZHelix:   incbin "Art/Nemesis/GHZHelix.bin"
                even
Nem_PurpleRock: incbin "Art/Nemesis/PurpleRock.bin"
                even
Nem_GHZWall1:   incbin "Art/Nemesis/GHZWall1.bin"
                even
Nem_GHZWall2:   incbin "Art/Nemesis/GHZWall2.bin"
                even
Nem_MzMetal:    incbin "Art/Nemesis/MZMetal.bin"
                even
Nem_MZSwitch:   incbin "Art/Nemesis/MZSwitch.bin"
                even
Nem_MZPillar:   incbin "Art/Nemesis/MZPillar.bin"
                even
Nem_SLZFireball:incbin "Art/Nemesis/SLZFireball.bin"
                even
Nem_Lava:       incbin "Art/Nemesis/MZLava.bin"
                even
Nem_MZPushBlock:incbin "Art/Nemesis/MZPushBlock.bin"
                even
Nem_SLZSeesaw:  incbin "Art/Nemesis/SLZSeesaw.bin"
                even
Nem_SLZFan:     incbin "Art/Nemesis/SLZFan.bin"
                even
Nem_SLZWall:    incbin "Art/Nemesis/SLZWall.bin"
                even
Nem_SLZPylon:   incbin "Art/Nemesis/SLZPylon.bin"
                even
Nem_SLZSwing:   incbin "Art/Nemesis/SLZSwing.bin"
                even
Nem_MZFire:     incbin "Art/Nemesis/MZFire.bin"
                even
Nem_SLZBlock:   incbin "Art/Nemesis/SLZBlock.bin"
                even
Nem_Bumper:     incbin "Art/Nemesis/Bumper.bin"
                even
Nem_SZSpike2:   incbin "Art/Nemesis/SZSpike2.bin"
                even
Nem_Switch:     incbin "Art/Nemesis/Switch.bin"
                even
Nem_SZSpike1:   incbin "Art/Nemesis/SZSpike1.bin"
                even
Nem_Ballhog:    incbin "Art/Nemesis/BallHog.bin"
                even
Nem_Crabmeat:   incbin "Art/Nemesis/Crabmeat.bin"
                even
Nem_BuzzBomber: incbin "Art/Nemesis/BuzzBomber.bin"
                even
Nem_Chopper:    incbin "Art/Nemesis/Chopper.bin"
                even
Nem_Jaws:       incbin "Art/Nemesis/Jaws.bin"
                even
Nem_Roller:     incbin "Art/Nemesis/Roller.bin"
                even
Nem_Motobug:    incbin "Art/Nemesis/Motobug.bin"
                even
Nem_Newtron:    incbin "Art/Nemesis/Newtron.bin"
                even
Nem_Yadrin:     incbin "Art/Nemesis/Yadrin.bin"
                even
Nem_BatBrain:   incbin "Art/Nemesis/BatBrain.bin"
                even
Nem_Splats:     incbin "Art/Nemesis/Splats.bin"
                even
Nem_TitleCard:  incbin "Art/Nemesis/TitleCard.bin"
                even
Nem_HUD:        incbin "Art/Nemesis/HUD.bin"
                even
Nem_HUDLives:   incbin "Art/Nemesis/HUDLives.bin"
                even
Nem_Ring:       incbin "Art/Nemesis/Ring.bin"
                even
Nem_Monitors:   incbin "Art/Nemesis/Monitors.bin"
                even
Nem_Explosion:  incbin "Art/Nemesis/Explosion.bin"
                even
Nem_Points:     incbin "Art/Nemesis/Points.bin"
                even
Nem_GameOver:   incbin "Art/Nemesis/GameOver.bin"
                even
Nem_HSpring:    incbin "Art/Nemesis/HSpring.bin"
                even
Nem_VSpring:    incbin "Art/Nemesis/VSpring.bin"
                even
Nem_Signpost:   incbin "Art/Nemesis/Signpost.bin"
                even
Nem_Rabbit:     incbin "Art/Nemesis/Rabbit.bin"
                even
Nem_Chicken:    incbin "Art/Nemesis/Chicken.bin"
                even
Nem_Penguin:    incbin "Art/Nemesis/Penguin.bin"
                even
Nem_Seal:       incbin "Art/Nemesis/Seal.bin"
                even
Nem_Pig:        incbin "Art/Nemesis/Pig.bin"
                even
Nem_Flicky:     incbin "Art/Nemesis/Flicky.bin"
                even
Nem_Squirrel:   incbin "Art/Nemesis/Squirrel.bin"
                even
                if Padding
                dcb.b $30000-*,$FF ; Padding
                endif
; ===========================================================================
; Level Data
; ===========================================================================
Blk16_GHZ:      incbin "Level/Green Hill Zone/Block16.bin"
                even
Nem_GHZ1:       incbin "Level/Green Hill Zone/Art1.bin"
                even
Nem_GHZ2:       incbin "Level/Green Hill Zone/Art2.bin"
                even
Blk256_GHZ:     incbin "Level/Green Hill Zone/Block256.bin"
                even
Blk16_LZ:       incbin "Level/Labyrinth Zone/Block16.bin"
                even
Nem_LZ:         incbin "Level/Labyrinth Zone/Art.bin"
                even
Blk256_LZ:      incbin "Level/Labyrinth Zone/Block256.bin"
                even
Blk16_MZ:       incbin "Level/Marble Zone/Block16.bin"
                even
Nem_MZ:         incbin "Level/Marble Zone/Art.bin"
                even
Blk256_MZ:      incbin "Level/Marble Zone/Block256.bin"
                even
Blk16_SLZ:      incbin "Level/Star Light Zone/Block16.bin"
                even
Nem_SLZ:        incbin "Level/Star Light Zone/Art.bin"
                even
Blk256_SLZ:     incbin "Level/Star Light Zone/Block256.bin"
                even
Blk16_SZ:       incbin "Level/Sparkling Zone/Block16.bin"
                even
Nem_SZ:         incbin "Level/Sparkling Zone/Art.bin"
                even
Blk256_SZ:      incbin "Level/Sparkling Zone/Block256.bin"
                even
Blk16_CWZ:      incbin "Level/Clock Work Zone/Block16.bin"
                even
Nem_CWZ:        incbin "Level/Clock Work Zone/Art.bin"
                even
Blk256_CWZ:     incbin "Level/Clock Work Zone/Block256.bin"
                even
Nem_BossMain:   incbin "Art/Nemesis/BossMain.bin"
                even
Nem_BossItems:  incbin "Art/Nemesis/BossItems.bin"
                even
Nem_Capsule:    incbin "Art/Nemesis/Capsule.bin"
                even
Demo_SS:        include "Misc/DemoSS.asm"

Demo_GHZ:       incbin "Misc/DemoGHZ.bin"
                even
Demo_MZ:        include "Misc/DemoMZ.asm"

Demo_SZ:        include "Misc/DemoSZ.asm"
                if Padding
                dcb.b $63000-*,$FF
                endif
Map_SSWalls:    include "Map/SSWalls.asm"

Nem_SSWalls:    incbin "Art/Nemesis/SSWalls.bin"
                even
Eni_SSBg1:      incbin "Map/Eni/SSBG1.bin"

Nem_SSBirdFish: incbin "Art/Nemesis/SSBirdFish.bin"
                even
Eni_SSBg2:      include "Map/Eni/SSBG2.asm"

Nem_SSCloudBubble:incbin "Art/Nemesis/SSCloudBubble.bin"
                even
Nem_SSGoal:     incbin "Art/Nemesis/SSGoal.bin"
                even
byte_6505E:     incbin "Art/Nemesis/SSRBlock.bin"
                even
Nem_SSSkull:    incbin "Art/Nemesis/SSSkull.bin"
                even
Nem_SSU:        incbin "Art/Nemesis/SSU.bin"
                even
Nem_SS1Up:      incbin "Art/Nemesis/SS1up.bin"
                even
Nem_SSEmeraldEffect:incbin "Art/Nemesis/SSEmeraldEffect.bin"
                even
Nem_SSRedWhiteBlock:incbin "Art/Nemesis/SSRedWhiteBlock.bin"
                even
Nem_SSZone1:    incbin "Art/Nemesis/SSZone1.bin"
                even
Nem_SSZone2:    incbin "Art/Nemesis/SSZone2.bin"
                even
Nem_SSZone3:    incbin "Art/Nemesis/SSZone3.bin"
                even
Nem_SSZone4:    incbin "Art/Nemesis/SSZone4.bin"
                even
Nem_SSZone5:    incbin "Art/Nemesis/SSZone5.bin"
                even
Nem_SSZone6:    incbin "Art/Nemesis/SSZone6.bin"
                even
Nem_SSUpDown:   incbin "Art/Nemesis/SSUpDown.bin"
                even
Nem_Emerald:    incbin "Art/Nemesis/Emerald.bin"
                even
                if Padding
                dcb.b $68000-*,$FF
                endif
AngleMap:       incbin "Collision Data/AngleMap.bin"
                even
CollArray1:     incbin "Collision Data/CollArray1.bin"
                even
CollArray2:     incbin "Collision Data/CollArray2.bin"
                even
Col_GHZ:        incbin "Level/Green Hill Zone/Collision.bin"
                even
Col_LZ:         incbin "Level/Labyrinth Zone/Collision.bin"
                even
Col_MZ:         incbin "Level/Marble Zone/Collision.bin"
                even
Col_SLZ:        incbin "Level/Star Light Zone/Collision.bin"
                even
Col_SZ:         incbin "Level/Sparkling Zone/Collision.bin"
                even
Col_CWZ:        incbin "Level/Clock Work Zone/Collision.bin"
                even
SS_Layout:      incbin "Level/Special Stage/Layout.bin"
                even
Art_GHZWaterfall:incbin "Art/Uncompressed/Anim - GHZ Waterfall.bin"
                even
Art_GHZSunflower:incbin "Art/Uncompressed/Anim - GHZ Sunflower.bin"
                even
Art_GHZPurpleFlower:incbin "Art/Uncompressed/Anim - GHZ Purple Flower.bin"
                even
Art_MZLavaSurface:incbin "Art/Uncompressed/Anim - MZ Lava Surface.bin"
                even
Art_MZLavaBody: incbin "Art/Uncompressed/Anim - MZ Lava Body.bin"
                even
Art_MZUFOs:     incbin "Art/Uncompressed/Anim - MZ UFOs.bin"
                even
Art_MZTorch:    incbin "Art/Uncompressed/Anim - MZ Torch.bin"
                even
; ---------------------------------------------------------------------------
; Level layout index
; ---------------------------------------------------------------------------
Level_Index:    dc.w Level_GHZ1-Level_Index
                dc.w Level_GHZ1bg-Level_Index
                dc.w entry_6ce54-Level_Index
                dc.w Level_GHZ2-Level_Index
                dc.w Level_GHZ2bg-Level_Index
                dc.w entry_6cf3c-Level_Index
                dc.w Level_GHZ3-Level_Index
                dc.w Level_GHZ3bg-Level_Index
                dc.w entry_6d084-Level_Index
                dc.w entry_6D088-Level_Index
                dc.w entry_6D088-Level_Index
                dc.w entry_6D088-Level_Index
                dc.w Level_LZ1-Level_Index
                dc.w Level_LZbg-Level_Index
                dc.w entry_6d190-Level_Index
                dc.w Level_LZ2-Level_Index
                dc.w Level_LZbg-Level_Index
                dc.w entry_6d216-Level_Index
                dc.w Level_LZ3-Level_Index
                dc.w Level_LZbg-Level_Index
                dc.w entry_6d31c-Level_Index
                dc.w entry_6d320-Level_Index
                dc.w entry_6d320-Level_Index
                dc.w entry_6d320-Level_Index
                dc.w Level_MZ1-Level_Index
                dc.w Level_MZ1bg-Level_Index
                dc.w Level_MZ1-Level_Index
                dc.w Level_MZ2-Level_Index
                dc.w Level_MZ2bg-Level_Index
                dc.w entry_6d614-Level_Index
                dc.w Level_MZ3-Level_Index
                dc.w Level_MZ3bg-Level_Index
                dc.w entry_6d7dc-Level_Index
                dc.w entry_6d7e0-Level_Index
                dc.w entry_6d7e0-Level_Index
                dc.w entry_6d7e0-Level_Index
                dc.w Level_SLZ1-Level_Index
                dc.w Level_SLZbg-Level_Index
                dc.w entry_6dbe4-Level_Index
                dc.w Level_SLZ2-Level_Index
                dc.w Level_SLZbg-Level_Index
                dc.w entry_6dbe4-Level_Index
                dc.w Level_SLZ3-Level_Index
                dc.w Level_SLZbg-Level_Index
                dc.w entry_6dbe4-Level_Index
                dc.w entry_6dbe4-Level_Index
                dc.w entry_6dbe4-Level_Index
                dc.w entry_6dbe4-Level_Index
                dc.w Level_SZ1-Level_Index
                dc.w Level_SZbg-Level_Index
                dc.w entry_6dcd8-Level_Index
                dc.w Level_SZ2-Level_Index
                dc.w Level_SZbg-Level_Index
                dc.w entry_6ddda-Level_Index
                dc.w Level_SZ3-Level_Index
                dc.w Level_SZbg-Level_Index
                dc.w entry_6df30-Level_Index
                dc.w entry_6df34-Level_Index
                dc.w entry_6df34-Level_Index
                dc.w entry_6df34-Level_Index
                dc.w Level_CWZ1-Level_Index
                dc.w Level_CWZ2-Level_Index
                dc.w Level_CWZ2-Level_Index
                dc.w Level_CWZ2-Level_Index
                dc.w entry_6e33c-Level_Index
                dc.w entry_6e33c-Level_Index
                dc.w Level_CWZ3_empty-Level_Index
                dc.w Level_CWZ3_empty-Level_Index
                dc.w Level_CWZ3_empty-Level_Index
                dc.w entry_6e344-Level_Index
                dc.w entry_6e344-Level_Index
                dc.w entry_6e344-Level_Index
                dc.w Level_Test-Level_Index
                dc.w entry_6e3ca-Level_Index
                dc.w entry_6e3ca-Level_Index
                dc.w entry_6e3ce-Level_Index
                dc.w entry_6e3ce-Level_Index
                dc.w entry_6e3ce-Level_Index
                dc.w entry_6e3d2-Level_Index
                dc.w entry_6e3d2-Level_Index
                dc.w entry_6e3d2-Level_Index
                dc.w entry_6e3d6-Level_Index
                dc.w entry_6e3d6-Level_Index
                dc.w entry_6e3d6-Level_Index
Level_GHZ1:     incbin "Level/Green Hill Zone/Layout1.bin"
                even
Level_GHZ1bg:   incbin "Level/Green Hill Zone/LayBG1.bin"
                even
entry_6ce54:    dc.l 0
Level_GHZ2:     incbin "Level/Green Hill Zone/Layout2.bin"
                even
Level_GHZ2bg:   incbin "Level/Green Hill Zone/LayBG2.bin"
                even
entry_6cf3c:    dc.l 0
Level_GHZ3:     incbin "Level/Green Hill Zone/Layout3.bin"
                even
Level_GHZ3bg:   incbin "Level/Green Hill Zone/LayBG3.bin"
                even
entry_6d084:    dc.l 0
entry_6D088:    dc.l 0
Level_LZ1:      incbin "Level/Labyrinth Zone/Layout1.bin"
                even
Level_LZbg:     incbin "Level/Labyrinth Zone/LayBG.bin"
                even
entry_6d190:    dc.l 0
Level_LZ2:      incbin "Level/Labyrinth Zone/Layout2.bin"
                even
entry_6d216:    dc.l 0
Level_LZ3:      incbin "Level/Labyrinth Zone/Layout3.bin"
                even
entry_6d31c:    dc.l 0
entry_6d320:    dc.l 0
Level_MZ1:      incbin "Level/Marble Zone/Layout1.bin"
                even
Level_MZ1bg:    incbin "Level/Marble Zone/LayBG1.bin"
                even
Level_MZ2:      incbin "Level/Marble Zone/Layout2.bin"
                even
Level_MZ2bg:    incbin "Level/Marble Zone/LayBG2.bin"
                even
entry_6d614:    dc.l 0
Level_MZ3:      incbin "Level/Marble Zone/Layout3.bin"
                even
Level_MZ3bg:    incbin "Level/Marble Zone/LayBG3.bin"
                even
entry_6d7dc:    dc.l 0
entry_6d7e0:    dc.l 0
Level_SLZ1:     incbin "Level/Star Light Zone/Layout1.bin"
                even
Level_SLZbg:    incbin "Level/Star Light Zone/LayBG.bin"
                even
Level_SLZ2:     incbin "Level/Star Light Zone/Layout2.bin"
                even
Level_SLZ3:     incbin "Level/Star Light Zone/Layout3.bin"
                even
entry_6dbe4:    dc.l 0
Level_SZ1:      incbin "Level/Sparkling Zone/Layout1.bin"
                even
Level_SZbg:     incbin "Level/Sparkling Zone/LayBG.bin"
                even
entry_6dcd8:    dc.l 0
Level_SZ2:      incbin "Level/Sparkling Zone/Layout2.bin"
                even
entry_6ddda:    dc.l 0
Level_SZ3:      incbin "Level/Sparkling Zone/Layout3.bin"
                even
entry_6df30:    dc.l 0
entry_6df34:    dc.l 0
Level_CWZ1:     incbin "Level/Clock Work Zone/Layout1.bin"
                even
Level_CWZ2:     incbin "Level/Clock Work Zone/Layout2.bin"
                even
entry_6e33c:    dc.l 0
Level_CWZ3_empty:dc.l 0
entry_6e344:    dc.l 0
Level_Test:     incbin "Level/LayoutUnk.bin"
                even
entry_6e3ca:    dc.l 0
entry_6e3ce:    dc.l 0
entry_6e3d2:    dc.l 0
entry_6e3d6:    dc.l 0
                if Padding
                dcb.b $70000-*,$FF ; Padding
                endif
ObjPos_Index:   dc.w ObjPos_GHZ1-ObjPos_Index
                dc.w ObjPos_Null-ObjPos_Index
                dc.w ObjPos_GHZ2-ObjPos_Index
                dc.w ObjPos_Null-ObjPos_Index
                dc.w ObjPos_GHZ3-ObjPos_Index
                dc.w ObjPos_Null-ObjPos_Index
                dc.w ObjPos_GHZ1-ObjPos_Index
                dc.w ObjPos_Null-ObjPos_Index
                dc.w ObjPos_LZ1-ObjPos_Index
                dc.w ObjPos_Null-ObjPos_Index
                dc.w ObjPos_LZ2-ObjPos_Index
                dc.w ObjPos_Null-ObjPos_Index
                dc.w ObjPos_LZ3-ObjPos_Index
                dc.w ObjPos_Null-ObjPos_Index
                dc.w ObjPos_LZ1-ObjPos_Index
                dc.w ObjPos_Null-ObjPos_Index
                dc.w ObjPos_MZ1-ObjPos_Index
                dc.w ObjPos_Null-ObjPos_Index
                dc.w ObjPos_MZ2-ObjPos_Index
                dc.w ObjPos_Null-ObjPos_Index
                dc.w ObjPos_MZ3-ObjPos_Index
                dc.w ObjPos_Null-ObjPos_Index
                dc.w ObjPos_MZ1-ObjPos_Index
                dc.w ObjPos_Null-ObjPos_Index
                dc.w ObjPos_SLZ1-ObjPos_Index
                dc.w ObjPos_Null-ObjPos_Index
                dc.w ObjPos_SLZ2-ObjPos_Index
                dc.w ObjPos_Null-ObjPos_Index
                dc.w ObjPos_SLZ3-ObjPos_Index
                dc.w ObjPos_Null-ObjPos_Index
                dc.w ObjPos_SLZ1-ObjPos_Index
                dc.w ObjPos_Null-ObjPos_Index
                dc.w ObjPos_SZ1-ObjPos_Index
                dc.w ObjPos_Null-ObjPos_Index
                dc.w ObjPos_SZ2-ObjPos_Index
                dc.w ObjPos_Null-ObjPos_Index
                dc.w ObjPos_SZ3-ObjPos_Index
                dc.w ObjPos_Null-ObjPos_Index
                dc.w ObjPos_SZ1-ObjPos_Index
                dc.w ObjPos_Null-ObjPos_Index
                dc.w ObjPos_CWZ1-ObjPos_Index
                dc.w ObjPos_Null-ObjPos_Index
                dc.w ObjPos_CWZ2-ObjPos_Index
                dc.w ObjPos_Null-ObjPos_Index
                dc.w ObjPos_CWZ3-ObjPos_Index
                dc.w ObjPos_Null-ObjPos_Index
                dc.w ObjPos_CWZ1-ObjPos_Index
                dc.w ObjPos_Null-ObjPos_Index
                dc.w 0
                dc.w 0
ObjPos_GHZ1:    incbin "Level/Green Hill Zone/ObjPos1.bin"
                even
ObjPos_GHZ2:    incbin "Level/Green Hill Zone/ObjPos2.bin"
                even
ObjPos_GHZ3:    incbin "Level/Green Hill Zone/ObjPos3.bin"
                even
ObjPos_LZ1:     incbin "Level/Labyrinth Zone/ObjPos1.bin"
                even
ObjPos_LZ2:     incbin "Level/Labyrinth Zone/ObjPos2.bin"
                even
ObjPos_LZ3:     incbin "Level/Labyrinth Zone/ObjPos3.bin"
                even
ObjPos_MZ1:     incbin "Level/Marble Zone/ObjPos1.bin"
                even
ObjPos_MZ2:     incbin "Level/Marble Zone/ObjPos2.bin"
                even
ObjPos_MZ3:     incbin "Level/Marble Zone/ObjPos3.bin"
                even
ObjPos_SLZ1:    incbin "Level/Star Light Zone/ObjPos1.bin"
                even
ObjPos_SLZ2:    incbin "Level/Star Light Zone/ObjPos2.bin"
                even
ObjPos_SLZ3:    incbin "Level/Star Light Zone/ObjPos3.bin"
                even
ObjPos_SZ1:     incbin "Level/Sparkling Zone/ObjPos1.bin"
                even
ObjPos_SZ2:     incbin "Level/Sparkling Zone/ObjPos2.bin"
                even
ObjPos_SZ3:     incbin "Level/Sparkling Zone/ObjPos3.bin"
                even
ObjPos_CWZ1:    incbin "Level/Clock Work Zone/ObjPos1.bin"
                even
ObjPos_CWZ2:    incbin "Level/Clock Work Zone/ObjPos2.bin"
                even
ObjPos_CWZ3:    incbin "Level/Clock Work Zone/ObjPos3.bin"
                even
ObjPos_Null:    dc.b $FF, $FF, 0, 0, 0, 0
                if Padding
                 dcb.b $74000-*,$FF ; Padding
                endif

; ---------------------------------------------------------------------------
Go_SoundTypes:  dc.l SoundTypes
Go_SpecSoundIndex:dc.l SpecSoundIndex
Go_MusicIndex:  dc.l MusicIndex
Go_SoundIndex:  dc.l SoundIndex
off_74010:      dc.l byte_74110
Go_PSGIndex:    dc.l PSG_Index
                dc.l $A0
                dc.l UpdateMusic
Go_SpeedUpIndex:dc.l SpeedUpIndex

PSG_Index:      dc.l PSG1, PSG2, PSG3
                dc.l PSG4, PSG5, PSG6
                dc.l PSG7, PSG8, PSG9

PSG1:           incbin "Sound/PSG/PSG1.bin"
PSG2:           incbin "Sound/PSG/PSG2.bin"
PSG3:           incbin "Sound/PSG/PSG3.bin"
PSG4:           incbin "Sound/PSG/PSG4.bin"
PSG6:           incbin "Sound/PSG/PSG6.bin"
PSG5:           incbin "Sound/PSG/PSG5.bin"
PSG7:           incbin "Sound/PSG/PSG7.bin"
PSG8:           incbin "Sound/PSG/PSG8.bin"
PSG9:           incbin "Sound/PSG/PSG9.bin"

byte_74110:     dc.b $D, 1, 7, 4, 1, 1, 1, 4, 2, 1, 2, 4, 8, 1, 6, 4

SpeedUpIndex:   dc.b   7
                dc.b $72
                dc.b $73
                dc.b $26
                dc.b $15
                dc.b   8
                dc.b $FF
                dc.b   5

MusicIndex:     dc.l Music81
                dc.l Music82
                dc.l Music83
                dc.l Music84
                dc.l Music85
                dc.l Music86
                dc.l Music87
                dc.l Music88
                dc.l Music89
                dc.l Music8A
                dc.l Music8B
                dc.l Music8C
                dc.l Music8D
                dc.l Music8E
                dc.l Music8F
                dc.l Music90
                dc.l Music91

SoundTypes:     dc.b $80, $80, $80, $80, $80, $80, $80, $80, $80, $80, $80, $80, $80, $80, $80, $80
                dc.b $80, $80, $80, $80, $80, $80, $80, $80, $80, $80, $80, $80, $80, $80, $80, $70
                dc.b $70, $70, $70, $70, $70, $70, $70, $70, $70, $70, $70, $70, $70, $70, $70, $70
                dc.b $70, $70, $70, $70, $70, $70, $70, $70, $70, $70, $70, $70, $70, $70, $70, $70
                dc.b $70, $70, $70, $70, $70, $70, $70, $70, $70, $70, $70, $70, $70, $70, $70, $80
                dc.b $80, $80, $80, $80, $80, $80, $80, $80, $80, $80, $80, $80, $80, $80, $80, $80
                dc.b $80, $80, $80, $80, $80, 0
                even

; =============== S U B R O U T I N E =======================================


UpdateMusic:
		stopZ80
                btst    #7,($A01FFD).l
                beq.s   loc_74202
		move.w	#$0,($A11100).l
                nop
                nop
                nop
                nop
                nop
                bra.s   UpdateMusic
; ---------------------------------------------------------------------------

loc_74202:
                lea     ($FFF000).l,a6
                clr.b   $E(a6)
                tst.b   3(a6)
                bne.w   loc_745C6
                subq.b  #1,1(a6)
                bne.s   loc_7421E
                jsr     TempoWait(pc)

loc_7421E:
                move.b  4(a6),d0
                beq.s   loc_74228
                jsr     DoFadeOut(pc)

loc_74228:
                tst.b   $24(a6)
                beq.s   loc_74232
                jsr     DoFadeIn(pc)

loc_74232:
                tst.w   $A(a6)
                beq.s   loc_7423C
                jsr     CycleSoundQueue(pc)

loc_7423C:
                lea     $40(a6),a5
                tst.b   (a5)
                bpl.s   loc_74248
                jsr     DACUpdateTrack(pc)

loc_74248:
                clr.b   8(a6)
                moveq   #5,d7

loc_7424E:
                adda.w  #$30,a5 
                tst.b   (a5)
                bpl.s   loc_7425A
                jsr     sub_74350(pc)

loc_7425A:
                dbf     d7,loc_7424E
                moveq   #2,d7

loc_74260:
                adda.w  #$30,a5 
                tst.b   (a5)
                bpl.s   loc_7426C
                jsr     sub_74F5C(pc)

loc_7426C:
                dbf     d7,loc_74260
                move.b  #$80,$E(a6)
                moveq   #2,d7

loc_74278:
                adda.w  #$30,a5 
                tst.b   (a5)
                bpl.s   loc_74284
                jsr     sub_74350(pc)

loc_74284:
                dbf     d7,loc_74278
                moveq   #2,d7

loc_7428A:
                adda.w  #$30,a5 
                tst.b   (a5)
                bpl.s   loc_74296
                jsr     sub_74F5C(pc)

loc_74296:
                dbf     d7,loc_7428A
                move.b  #$40,$E(a6) 
                adda.w  #$30,a5 
                tst.b   (a5)
                bpl.s   loc_742AC
                jsr     sub_74350(pc)

loc_742AC:
                adda.w  #$30,a5 
                tst.b   (a5)
                bpl.s   loc_742B8
                jsr     sub_74F5C(pc)

loc_742B8:
		move.w	#$0,($A11100).l
                rts
; End of function UpdateMusic


; =============== S U B R O U T I N E =======================================


DACUpdateTrack:
                subq.b  #1,$E(a5)
                bne.s   locret_74326
                move.b  #$80,8(a6)
                movea.l 4(a5),a4

loc_742D2:
                moveq   #0,d5
                move.b  (a4)+,d5
                cmpi.b  #$E0,d5
                bcs.s   loc_742E2
                jsr     CoordFlag(pc)
                bra.s   loc_742D2
; ---------------------------------------------------------------------------

loc_742E2:
                tst.b   d5
                bpl.s   loc_742F8
                move.b  d5,$10(a5)
                move.b  (a4)+,d5
                bpl.s   loc_742F8
                subq.w  #1,a4
                move.b  $F(a5),$E(a5)
                bra.s   loc_742FC
; ---------------------------------------------------------------------------

loc_742F8:
                jsr     sub_743CA(pc)

loc_742FC:
                move.l  a4,4(a5)
                btst    #2,(a5)
                bne.s   locret_74326
                moveq   #0,d0
                move.b  $10(a5),d0
                cmpi.b  #$80,d0
                beq.s   locret_74326
                btst    #3,d0
                bne.s   loc_74328
                tst.b   ($A01FF6).l
                bne.s   locret_74326
                move.b  d0,($A01FFF).l

locret_74326:
                rts
; ---------------------------------------------------------------------------

loc_74328:
                subi.b  #$88,d0
                move.b  byte_74348(pc,d0.w),d0
                tst.b   ($A01FF6).l
                bne.s   locret_74346
                move.b  d0,($A00183).l
                move.b  #$83,($A01FFF).l

locret_74346:
                rts
; End of function DACUpdateTrack

; ---------------------------------------------------------------------------
byte_74348:     dc.b $12, $15, $1C, $1D, $FF, $FF, $FF, $FF

; =============== S U B R O U T I N E =======================================


sub_74350:

                subq.b  #1,$E(a5)
                bne.s   loc_7436A
                bclr    #4,(a5)
                jsr     sub_74376(pc)
                jsr     sub_744A2(pc)
                jsr     loc_74518(pc)
                bra.w   loc_74E10
; ---------------------------------------------------------------------------

loc_7436A:
                jsr     sub_74428(pc)
                jsr     sub_74450(pc)
                bra.w   loc_744AE
; End of function sub_74350


; =============== S U B R O U T I N E =======================================


sub_74376:
                movea.l 4(a5),a4
                bclr    #1,(a5)

loc_7437E:
                moveq   #0,d5
                move.b  (a4)+,d5
                cmpi.b  #$E0,d5
                bcs.s   loc_7438E
                jsr     CoordFlag(pc)
                bra.s   loc_7437E
; ---------------------------------------------------------------------------

loc_7438E:
                jsr     sub_74E2C(pc)
                tst.b   d5
                bpl.s   loc_743A4
                jsr     sub_743AC(pc)
                move.b  (a4)+,d5
                bpl.s   loc_743A4
                subq.w  #1,a4
                bra.w   sub_743EA
; ---------------------------------------------------------------------------

loc_743A4:
                jsr     sub_743CA(pc)
                bra.w   sub_743EA
; End of function sub_74376


; =============== S U B R O U T I N E =======================================


sub_743AC:

                subi.b  #$80,d5
                beq.s   loc_743E2
                add.b   8(a5),d5
                andi.w  #$7F,d5
                lsl.w   #1,d5
                lea     FMFrequencies(pc),a0
                move.w  (a0,d5.w),d6
                move.w  d6,$10(a5)
                rts
; End of function sub_743AC


; =============== S U B R O U T I N E =======================================


sub_743CA:
                move.b  d5,d0
                move.b  2(a5),d1

loc_743D0:
                subq.b  #1,d1
                beq.s   loc_743D8
                add.b   d5,d0
                bra.s   loc_743D0
; ---------------------------------------------------------------------------

loc_743D8:
                move.b  d0,$F(a5)
                move.b  d0,$E(a5)
                rts
; End of function sub_743CA

; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR sub_743AC

loc_743E2:
                bset    #1,(a5)
                clr.w   $10(a5)
; END OF FUNCTION CHUNK FOR sub_743AC

; =============== S U B R O U T I N E =======================================


sub_743EA:
                move.l  a4,4(a5)
                move.b  $F(a5),$E(a5)
                btst    #4,(a5)
                bne.s   locret_74426
                move.b  $13(a5),$12(a5)
                clr.b   $C(a5)
                btst    #3,(a5)
                beq.s   locret_74426
                movea.l $14(a5),a0
                move.b  (a0)+,$18(a5)
                move.b  (a0)+,$19(a5)
                move.b  (a0)+,$1A(a5)
                move.b  (a0)+,d0
                lsr.b   #1,d0
                move.b  d0,$1B(a5)
                clr.w   $1C(a5)

locret_74426:
                rts
; End of function sub_743EA


; =============== S U B R O U T I N E =======================================


sub_74428:
                tst.b   $12(a5)
                beq.s   locret_7444E
                subq.b  #1,$12(a5)
                bne.s   locret_7444E
                bset    #1,(a5)
                tst.b   1(a5)
                bmi.w   loc_74448
                jsr     sub_74E2C(pc)
                addq.w  #4,sp
                rts
; ---------------------------------------------------------------------------

loc_74448:
                jsr     PSGNoteOff(pc)
                addq.w  #4,sp

locret_7444E:
                rts
; End of function sub_74428


; =============== S U B R O U T I N E =======================================


sub_74450:
                addq.w  #4,sp
                btst    #3,(a5)
                beq.s   locret_744A0
                tst.b   $18(a5)
                beq.s   loc_74464
                subq.b  #1,$18(a5)
                rts
; ---------------------------------------------------------------------------

loc_74464:
                subq.b  #1,$19(a5)
                beq.s   loc_7446C
                rts
; ---------------------------------------------------------------------------

loc_7446C:
                movea.l $14(a5),a0
                move.b  1(a0),$19(a5)
                tst.b   $1B(a5)
                bne.s   loc_74488
                move.b  3(a0),$1B(a5)
                neg.b   $1A(a5)
                rts
; ---------------------------------------------------------------------------

loc_74488:
                subq.b  #1,$1B(a5)
                move.b  $1A(a5),d6
                ext.w   d6
                add.w   $1C(a5),d6
                move.w  d6,$1C(a5)
                add.w   $10(a5),d6
                subq.w  #4,sp

locret_744A0:
                rts
; End of function sub_74450


; =============== S U B R O U T I N E =======================================


sub_744A2:
                btst    #1,(a5)
                bne.s   locret_744E0
                move.w  $10(a5),d6
                beq.s   loc_744E2

loc_744AE:
                move.b  $1E(a5),d0
                ext.w   d0
                add.w   d0,d6
                btst    #2,(a5)
                bne.s   locret_744E0
                tst.b   $F(a6)
                beq.s   loc_744CA
                cmpi.b  #2,1(a5)
                beq.s   loc_744E8

loc_744CA:
                move.w  d6,d1
                lsr.w   #8,d1
                move.b  #$A4,d0
                jsr     sub_74E50(pc)
                move.b  d6,d1
                move.b  #$A0,d0
                jsr     sub_74E50(pc)

locret_744E0:
                rts
; ---------------------------------------------------------------------------

loc_744E2:
                bset    #1,(a5)
                rts
; ---------------------------------------------------------------------------

loc_744E8:
                lea     byte_74510(pc),a1
                lea     $10(a6),a2
                moveq   #3,d7

loc_744F2:
                move.w  d6,d1
                move.w  (a2)+,d0
                add.w   d0,d1
                move.w  d1,d3
                lsr.w   #8,d1
                move.b  (a1)+,d0
                jsr     WriteFMI(pc)
                move.b  d3,d1
                move.b  (a1)+,d0
                jsr     WriteFMI(pc)
                dbf     d7,loc_744F2
                rts
; End of function sub_744A2

; ---------------------------------------------------------------------------
byte_74510:     dc.b $AD, $A9, $AC, $A8, $AE, $AA, $A6, $A2
; ---------------------------------------------------------------------------

loc_74518:
                btst    #1,(a5)
                bne.s   locret_7452A
                moveq   #0,d0
                move.b  $1F(a5),d0
                lsl.w   #1,d0
                jmp     locret_7452A(pc,d0.w)
; ---------------------------------------------------------------------------

locret_7452A:
                rts
; ---------------------------------------------------------------------------
                bra.s   loc_74556
; ---------------------------------------------------------------------------
                bra.s   loc_7454C
; ---------------------------------------------------------------------------
                bra.s   loc_7454C
; ---------------------------------------------------------------------------
                btst    #1,(a5)
                bne.s   locret_74544
                moveq   #0,d0
                move.b  $1F(a5),d0
                lsl.w   #1,d0
                jmp     locret_74544(pc,d0.w)
; ---------------------------------------------------------------------------

locret_74544:
                rts
; ---------------------------------------------------------------------------
                rts
; ---------------------------------------------------------------------------
                bra.s   loc_74556
; ---------------------------------------------------------------------------
                bra.s   loc_74556
; ---------------------------------------------------------------------------

loc_7454C:
                move.b  $23(a5),$24(a5)
                clr.b   $21(a5)

loc_74556:
                move.b  $24(a5),d0
                cmp.b   $23(a5),d0
                bne.s   loc_7457E
                move.b  $22(a5),d3
                cmp.b   $21(a5),d3
                bpl.s   loc_74576
                cmpi.b  #2,$1F(a5)
                beq.s   locret_745AE
                clr.b   $21(a5)

loc_74576:
                clr.b   $24(a5)
                addq.b  #1,$21(a5)

loc_7457E:
                moveq   #0,d0
                move.b  $20(a5),d0
                subq.w  #1,d0
                lsl.w   #2,d0
                movea.l off_745B0(pc,d0.w),a0
                moveq   #0,d0
                move.b  $21(a5),d0
                subq.w  #1,d0
                move.b  (a0,d0.w),d1
                move.b  $A(a5),d0
                andi.b  #$37,d0 
                or.b    d0,d1
                move.b  #$B4,d0
                jsr     sub_74E44(pc)
                addq.b  #1,$24(a5)

locret_745AE:
                rts
; ---------------------------------------------------------------------------
off_745B0:      dc.l unk_745BC
                dc.l unk_745BE
                dc.l unk_745C1
unk_745BC:      dc.b $40 ; @
                dc.b $80
unk_745BE:      dc.b $40 ; @
                dc.b $C0
                dc.b $80
unk_745C1:      dc.b $C0
                dc.b $80
                dc.b $C0
                dc.b $40 ; @
                dc.b   0
; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR UpdateMusic

loc_745C6:
                bmi.s   loc_7460A
                cmpi.b  #2,3(a6)
                beq.w   loc_74674
                move.b  #2,3(a6)
                moveq   #2,d2
                move.b  #$B4,d0
                moveq   #0,d1

loc_745E0:
                jsr     WriteFMI(pc)
                jsr     WriteFMII(pc)
                addq.b  #1,d0
                dbf     d2,loc_745E0
                moveq   #2,d2
                moveq   #$28,d0 

loc_745F2:
                move.b  d2,d1
                jsr     WriteFMI(pc)
                addq.b  #4,d1
                jsr     WriteFMI(pc)
                dbf     d2,loc_745F2
                jsr     PSGSilenceAll(pc)
                bra.w   loc_742B8
; ---------------------------------------------------------------------------

loc_7460A:
                clr.b   3(a6)
                moveq   #$30,d3 
                lea     $40(a6),a5
                moveq   #6,d4

loc_74616:
                btst    #7,(a5)
                beq.s   loc_7462E
                btst    #2,(a5)
                bne.s   loc_7462E
                move.b  #$B4,d0
                move.b  $A(a5),d1
                jsr     sub_74E50(pc)

loc_7462E:
                adda.w  d3,a5
                dbf     d4,loc_74616
                lea     $220(a6),a5
                moveq   #2,d4

loc_7463A:
                btst    #7,(a5)
                beq.s   loc_74652
                btst    #2,(a5)
                bne.s   loc_74652
                move.b  #$B4,d0
                move.b  $A(a5),d1
                jsr     sub_74E50(pc)

loc_74652:
                adda.w  d3,a5
                dbf     d4,loc_7463A
                lea     $340(a6),a5
                btst    #7,(a5)
                beq.s   loc_74674
                btst    #2,(a5)
                bne.s   loc_74674
                move.b  #$B4,d0
                move.b  $A(a5),d1
                jsr     sub_74E50(pc)

loc_74674:
                bra.w   loc_742B8
; END OF FUNCTION CHUNK FOR UpdateMusic

; =============== S U B R O U T I N E =======================================


CycleSoundQueue:
                movea.l (Go_SoundTypes).l,a0
                lea     $A(a6),a1
                move.b  0(a6),d3
                moveq   #2,d4

loc_74688:
                move.b  (a1),d0
                move.b  d0,d1
                clr.b   (a1)+
                subi.b  #$81,d0
                bcs.s   loc_746A6
                andi.w  #$7F,d0
                move.b  (a0,d0.w),d2
                cmp.b   d3,d2
                bcs.s   loc_746A6
                move.b  d2,d3
                move.b  d1,9(a6)

loc_746A6:
                dbf     d4,loc_74688
                tst.b   d3
                bmi.s   loc_746B2
                move.b  d3,0(a6)

loc_746B2:
                moveq   #0,d7
                move.b  9(a6),d7
                move.b  #$80,9(a6)
                cmpi.b  #$80,d7
                beq.s   locret_746FC
                bcs.w   loc_74CFE
                cmpi.b  #$9F,d7
                bls.w   PlayMusic
                cmpi.b  #$A0,d7
                bcs.w   locret_746FC
                cmpi.b  #$CF,d7
                bls.w   loc_74920
                cmpi.b  #$D0,d7
                bcs.w   locret_746FC
                cmpi.b  #$D7,d7
                bcs.w   loc_74A4C
                cmpi.b  #$E0,d7
                bcs.s   loc_7471C
                cmpi.b  #$E5,d7
                bls.s   loc_746FE

locret_746FC:
                rts
; ---------------------------------------------------------------------------

loc_746FE:
                subi.b  #$E0,d7
                lsl.w   #2,d7
                jmp     loc_74708(pc,d7.w)
; ---------------------------------------------------------------------------

loc_74708:
                bra.w   loc_74C1E
; ---------------------------------------------------------------------------
                bra.w   sub_74B10
; ---------------------------------------------------------------------------
                bra.w   loc_74D90
; ---------------------------------------------------------------------------
                bra.w   loc_74DA4
; ---------------------------------------------------------------------------
                bra.w   sub_74BB4
; ---------------------------------------------------------------------------

loc_7471C:
                addi.b  #-$4F,d7
                move.b  d7,($A01FFF).l
                nop
                nop
                nop
                clr.b   (a0)+
                rts
; ---------------------------------------------------------------------------
; loc_74730:
PlayMusic:
                cmpi.b  #$88,d7
                bne.s   loc_7477E
                tst.b   $27(a6)
                bne.w   loc_74910
                lea     $40(a6),a5
                moveq   #9,d0

loc_74744:
                bclr    #2,(a5)
                adda.w  #$30,a5 
                dbf     d0,loc_74744
                lea     $220(a6),a5
                moveq   #5,d0

loc_74756:
                bclr    #7,(a5)
                adda.w  #$30,a5 
                dbf     d0,loc_74756
                movea.l a6,a0
                lea     $3A0(a6),a1
                move.w  #$87,d0

loc_7476C:
                move.l  (a0)+,(a1)+
                dbf     d0,loc_7476C
                move.b  #$80,$27(a6)
                clr.b   0(a6)
                bra.s   loc_74786
; ---------------------------------------------------------------------------

loc_7477E:
                clr.b   $27(a6)
                clr.b   $26(a6)

loc_74786:
                jsr     sub_74D2A(pc)
                movea.l (Go_SpeedUpIndex).l,a4
                subi.b  #$81,d7
                move.b  (a4,d7.w),$29(a6)
                movea.l (Go_MusicIndex).l,a4
                lsl.w   #2,d7
                movea.l (a4,d7.w),a4
                moveq   #0,d0
                move.w  (a4),d0
                add.l   a4,d0
                move.l  d0,$18(a6)
                move.b  5(a4),d0
                move.b  d0,$28(a6)
                tst.b   $2A(a6)
                beq.s   loc_747C2
                move.b  $29(a6),d0

loc_747C2:
                move.b  d0,2(a6)
                move.b  d0,1(a6)
                moveq   #0,d1
                movea.l a4,a3
                addq.w  #6,a4
                moveq   #0,d7
                move.b  2(a3),d7
                beq.w   loc_7486E
                subq.b  #1,d7
                move.b  #$C0,d1
                move.b  4(a3),d4
                moveq   #$30,d6 
                move.b  #1,d5
                lea     $40(a6),a1
                lea     byte_74914(pc),a2

loc_747F2:
                bset    #7,(a1)
                move.b  (a2)+,1(a1)
                move.b  d4,2(a1)
                move.b  d6,$D(a1)
                move.b  d1,$A(a1)
                move.b  d5,$E(a1)
                moveq   #0,d0
                move.w  (a4)+,d0
                add.l   a3,d0
                move.l  d0,4(a1)
                move.w  (a4)+,8(a1)
                adda.w  d6,a1
                dbf     d7,loc_747F2
                cmpi.b  #7,2(a3)
                bne.s   loc_74832
                moveq   #$2B,d0 
                moveq   #0,d1
                jsr     WriteFMI(pc)
                bra.w   loc_7486E
; ---------------------------------------------------------------------------

loc_74832:
                moveq   #$28,d0 
                moveq   #6,d1
                jsr     WriteFMI(pc)
                move.b  #$42,d0
                moveq   #$7F,d1
                jsr     WriteFMII(pc)
                move.b  #$4A,d0
                moveq   #$7F,d1
                jsr     WriteFMII(pc)
                move.b  #$46,d0
                moveq   #$7F,d1
                jsr     WriteFMII(pc)
                move.b  #$4E,d0
                moveq   #$7F,d1
                jsr     WriteFMII(pc)
                move.b  #$B6,d0
                move.b  #$C0,d1
                jsr     WriteFMII(pc)

loc_7486E:
                moveq   #0,d7
                move.b  3(a3),d7
                beq.s   loc_748AE
                subq.b  #1,d7
                lea     $190(a6),a1
                lea     byte_7491C(pc),a2

loc_74880:
                bset    #7,(a1)
                move.b  (a2)+,1(a1)
                move.b  d4,2(a1)
                move.b  d6,$D(a1)
                move.b  d5,$E(a1)
                moveq   #0,d0
                move.w  (a4)+,d0
                add.l   a3,d0
                move.l  d0,4(a1)
                move.w  (a4)+,8(a1)
                move.b  (a4)+,d0
                move.b  (a4)+,$B(a1)
                adda.w  d6,a1
                dbf     d7,loc_74880

loc_748AE:
                lea     $220(a6),a1
                moveq   #5,d7

loc_748B4:
                tst.b   (a1)
                bpl.w   loc_748D6
                moveq   #0,d0
                move.b  1(a1),d0
                bmi.s   loc_748C8
                subq.b  #2,d0
                lsl.b   #2,d0
                bra.s   loc_748CA
; ---------------------------------------------------------------------------

loc_748C8:
                lsr.b   #3,d0

loc_748CA:
                lea     dword_74A0C(pc),a0
                movea.l (a0,d0.w),a0
                bset    #2,(a0)

loc_748D6:
                adda.w  d6,a1
                dbf     d7,loc_748B4
                tst.w   $340(a6)
                bpl.s   loc_748E8
                bset    #2,$100(a6)

loc_748E8:
                tst.w   $370(a6)
                bpl.s   loc_748F4
                bset    #2,$1F0(a6)

loc_748F4:
                lea     $70(a6),a5
                moveq   #5,d4

loc_748FA:
                jsr     sub_74E2C(pc)
                adda.w  d6,a5
                dbf     d4,loc_748FA
                moveq   #2,d4

loc_74906:
                jsr     PSGNoteOff(pc)
                adda.w  d6,a5
                dbf     d4,loc_74906

loc_74910:
                addq.w  #4,sp
                rts
; ---------------------------------------------------------------------------
byte_74914:     dc.b 6, 0, 1, 2, 4, 5, 6, 0
byte_7491C:     dc.b $80, $A0, $C0, 0
; ---------------------------------------------------------------------------

loc_74920:
                tst.b   $27(a6)
                bne.w   locret_74A0A
                cmpi.b  #$B5,d7
                bne.s   loc_7493E
                tst.b   $2B(a6)
                bne.s   loc_74938
                move.b  #$CE,d7

loc_74938:
                bchg    #0,$2B(a6)

loc_7493E:
                cmpi.b  #$A7,d7
                bne.s   loc_74952
                tst.b   $2C(a6)
                bne.w   locret_74A0A
                move.b  #$80,$2C(a6)

loc_74952:
                movea.l (Go_SoundIndex).l,a0
                subi.b  #$A0,d7
                lsl.w   #2,d7
                movea.l (a0,d7.w),a3
                movea.l a3,a1
                moveq   #0,d0
                move.w  (a1)+,d0
                add.l   a3,d0
                move.l  d0,$1C(a6)
                move.b  (a1)+,d5
                move.b  (a1)+,d7
                subq.b  #1,d7
                moveq   #$30,d6 

loc_74976:
                moveq   #0,d3
                move.b  1(a1),d3
                move.b  d3,d4
                bmi.s   loc_74992
                subq.w  #2,d3
                lsl.w   #2,d3
                lea     dword_74A0C(pc),a5
                movea.l (a5,d3.w),a5
                bset    #2,(a5)
                bra.s   loc_749B8
; ---------------------------------------------------------------------------

loc_74992:
                lsr.w   #3,d3
                movea.l dword_74A0C(pc,d3.w),a5
                bset    #2,(a5)
                cmpi.b  #$C0,d4
                bne.s   loc_749B8
                move.b  d4,d0
                ori.b   #$1F,d0
                move.b  d0,($C00011).l
                bchg    #5,d0
                move.b  d0,($C00011).l

loc_749B8:
                movea.l dword_74A2C(pc,d3.w),a5
                movea.l a5,a2
                moveq   #$B,d0

loc_749C0:
                clr.l   (a2)+
                dbf     d0,loc_749C0
                move.w  (a1)+,(a5)
                move.b  d5,2(a5)
                moveq   #0,d0
                move.w  (a1)+,d0
                add.l   a3,d0
                move.l  d0,4(a5)
                move.w  (a1)+,8(a5)
                move.b  #1,$E(a5)
                move.b  d6,$D(a5)
                tst.b   d4
                bmi.s   loc_749EE
                move.b  #$C0,$A(a5)

loc_749EE:
                dbf     d7,loc_74976
                tst.b   $250(a6)
                bpl.s   loc_749FE
                bset    #2,$340(a6)

loc_749FE:
                tst.b   $310(a6)
                bpl.s   locret_74A0A
                bset    #2,$370(a6)

locret_74A0A:
                rts
; ---------------------------------------------------------------------------
dword_74A0C:    dc.l $FFF0D0
                dc.l 0
                dc.l $FFF100
                dc.l $FFF130
                dc.l $FFF190
                dc.l $FFF1C0
                dc.l $FFF1F0
                dc.l $FFF1F0
dword_74A2C:    dc.l $FFF220
                dc.l 0
                dc.l $FFF250
                dc.l $FFF280
                dc.l $FFF2B0
                dc.l $FFF2E0
                dc.l $FFF310
                dc.l $FFF310
; ---------------------------------------------------------------------------

loc_74A4C:
                tst.b   $27(a6)
                bne.w   locret_74AF6
                movea.l (Go_SpecSoundIndex).l,a0
                subi.b  #$D0,d7
                lsl.w   #2,d7
                movea.l (a0,d7.w),a3
                movea.l a3,a1
                moveq   #0,d0
                move.w  (a1)+,d0
                add.l   a3,d0
                move.l  d0,$20(a6)
                move.b  (a1)+,d5
                move.b  (a1)+,d7
                subq.b  #1,d7
                moveq   #$30,d6 

loc_74A78:
                move.b  1(a1),d4
                bmi.s   loc_74A8A
                bset    #2,$100(a6)
                lea     $340(a6),a5
                bra.s   loc_74A94
; ---------------------------------------------------------------------------

loc_74A8A:
                bset    #2,$1F0(a6)
                lea     $370(a6),a5

loc_74A94:
                movea.l a5,a2
                moveq   #$B,d0

loc_74A98:
                clr.l   (a2)+
                dbf     d0,loc_74A98
                move.w  (a1)+,(a5)
                move.b  d5,2(a5)
                moveq   #0,d0
                move.w  (a1)+,d0
                add.l   a3,d0
                move.l  d0,4(a5)
                move.w  (a1)+,8(a5)
                move.b  #1,$E(a5)
                move.b  d6,$D(a5)
                tst.b   d4
                bmi.s   loc_74AC6
                move.b  #$C0,$A(a5)

loc_74AC6:
                dbf     d7,loc_74A78
                tst.b   $250(a6)
                bpl.s   loc_74AD6
                bset    #2,$340(a6)

loc_74AD6:
                tst.b   $310(a6)
                bpl.s   locret_74AF6
                bset    #2,$370(a6)
                ori.b   #$1F,d4
                move.b  d4,($C00011).l
                bchg    #5,d4
                move.b  d4,($C00011).l

locret_74AF6:
                rts
; End of function CycleSoundQueue

; ---------------------------------------------------------------------------
                dc.l $FFF100
                dc.l $FFF1F0
                dc.l $FFF250
                dc.l $FFF310
                dc.l $FFF340
                dc.l $FFF370

; =============== S U B R O U T I N E =======================================


sub_74B10:
                clr.b   0(a6)
                moveq   #$27,d0 
                moveq   #0,d1
                jsr     WriteFMI(pc)
                lea     $220(a6),a5
                moveq   #5,d7

loc_74B22:
                tst.b   (a5)
                bpl.w   loc_74BAA
                bclr    #7,(a5)
                moveq   #0,d3
                move.b  1(a5),d3
                bmi.s   loc_74B74
                jsr     sub_74E2C(pc)
                cmpi.b  #4,d3
                bne.s   loc_74B4E
                tst.b   $340(a6)
                bpl.s   loc_74B4E
                lea     $340(a6),a5
                movea.l $20(a6),a1
                bra.s   loc_74B60
; ---------------------------------------------------------------------------

loc_74B4E:
                subq.b  #2,d3
                lsl.b   #2,d3
                lea     dword_74A0C(pc),a0
                movea.l a5,a3
                movea.l (a0,d3.w),a5
                movea.l $18(a6),a1

loc_74B60:
                bclr    #2,(a5)
                bset    #1,(a5)
                move.b  $B(a5),d0
                jsr     sub_753F8(pc)
                movea.l a3,a5
                bra.s   loc_74BAA
; ---------------------------------------------------------------------------

loc_74B74:
                jsr     PSGNoteOff(pc)
                lea     $370(a6),a0
                cmpi.b  #$E0,d3
                beq.s   loc_74B92
                cmpi.b  #$C0,d3
                beq.s   loc_74B92
                lsr.b   #3,d3
                lea     dword_74A0C(pc),a0
                movea.l (a0,d3.w),a0

loc_74B92:
                bclr    #2,(a0)
                bset    #1,(a0)
                cmpi.b  #$E0,1(a0)
                bne.s   loc_74BAA
                move.b  $26(a0),($C00011).l

loc_74BAA:
                adda.w  #$30,a5 
                dbf     d7,loc_74B22
                rts
; End of function sub_74B10


; =============== S U B R O U T I N E =======================================


sub_74BB4:
                lea     $340(a6),a5
                tst.b   (a5)
                bpl.s   loc_74BE6
                bclr    #7,(a5)
                btst    #2,(a5)
                bne.s   loc_74BE6
                jsr     loc_74E38(pc)
                lea     $100(a6),a5
                bclr    #2,(a5)
                bset    #1,(a5)
                tst.b   (a5)
                bpl.s   loc_74BE6
                movea.l $18(a6),a1
                move.b  $B(a5),d0
                jsr     sub_753F8(pc)

loc_74BE6:
                lea     $370(a6),a5
                tst.b   (a5)
                bpl.s   locret_74C1C
                bclr    #7,(a5)
                btst    #2,(a5)
                bne.s   locret_74C1C
                jsr     loc_750D0(pc)
                lea     $1F0(a6),a5
                bclr    #2,(a5)
                bset    #1,(a5)
                tst.b   (a5)
                bpl.s   locret_74C1C
                cmpi.b  #$E0,1(a5)
                bne.s   locret_74C1C
                move.b  $26(a5),($C00011).l

locret_74C1C:
                rts
; End of function sub_74BB4

; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR CycleSoundQueue

loc_74C1E:
                jsr     sub_74B10(pc)
                jsr     sub_74BB4(pc)
                move.b  #3,6(a6)
                move.b  #$28,4(a6) 
                clr.b   $40(a6)
                clr.b   $2A(a6)
                rts
; END OF FUNCTION CHUNK FOR CycleSoundQueue

; =============== S U B R O U T I N E =======================================


DoFadeOut:

                move.b  6(a6),d0
                beq.s   loc_74C48
                subq.b  #1,6(a6)
                rts
; ---------------------------------------------------------------------------

loc_74C48:
                subq.b  #1,4(a6)
                beq.w   loc_74CFE
                move.b  #3,6(a6)
                lea     $70(a6),a5
                moveq   #5,d7

loc_74C5C:
                tst.b   (a5)
                bpl.s   loc_74C70
                addq.b  #1,9(a5)
                bpl.s   loc_74C6C
                bclr    #7,(a5)
                bra.s   loc_74C70
; ---------------------------------------------------------------------------

loc_74C6C:
                jsr     sub_7545E(pc)

loc_74C70:
                adda.w  #$30,a5 
                dbf     d7,loc_74C5C
                moveq   #2,d7

loc_74C7A:
                tst.b   (a5)
                bpl.s   loc_74C98
                addq.b  #1,9(a5)
                cmpi.b  #$10,9(a5)
                bcs.s   loc_74C90
                bclr    #7,(a5)
                bra.s   loc_74C98
; ---------------------------------------------------------------------------

loc_74C90:
                move.b  9(a5),d6
                jsr     sub_75082(pc)

loc_74C98:
                adda.w  #$30,a5 
                dbf     d7,loc_74C7A
                rts
; End of function DoFadeOut


; =============== S U B R O U T I N E =======================================


sub_74CA2:
                moveq   #3,d4
                moveq   #$40,d3 
                moveq   #$7F,d1

loc_74CA8:
                move.b  d3,d0
                jsr     sub_74E50(pc)
                addq.b  #4,d3
                dbf     d4,loc_74CA8
                moveq   #3,d4
                move.b  #$80,d3
                moveq   #$F,d1

loc_74CBC:
                move.b  d3,d0
                jsr     sub_74E50(pc)
                addq.b  #4,d3
                dbf     d4,loc_74CBC
                rts
; End of function sub_74CA2


; =============== S U B R O U T I N E =======================================


sub_74CCA:
                moveq   #2,d2
                moveq   #$28,d0 

loc_74CCE:
                move.b  d2,d1
                jsr     WriteFMI(pc)
                addq.b  #4,d1
                jsr     WriteFMI(pc)
                dbf     d2,loc_74CCE
                moveq   #$40,d0 
                moveq   #$7F,d1
                moveq   #2,d3

loc_74CE4:
                moveq   #3,d2

loc_74CE6:
                jsr     WriteFMI(pc)
                jsr     WriteFMII(pc)
                addq.w  #4,d0
                dbf     d2,loc_74CE6
                subi.b  #$F,d0
                dbf     d3,loc_74CE4
                rts
; End of function sub_74CCA

; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR CycleSoundQueue
;   ADDITIONAL PARENT FUNCTION DoFadeOut

loc_74CFE:
                moveq   #$2B,d0
                move.b  #$80,d1
                jsr     WriteFMI(pc)
                moveq   #$27,d0 
                moveq   #0,d1
                jsr     WriteFMI(pc)
                movea.l a6,a0
                move.w  #$E3,d0

loc_74D16:
                clr.l   (a0)+
                dbf     d0,loc_74D16
                move.b  #$80,9(a6)
                jsr     sub_74CCA(pc)
                bra.w   PSGSilenceAll
; END OF FUNCTION CHUNK FOR CycleSoundQueue

; =============== S U B R O U T I N E =======================================


sub_74D2A:
                movea.l a6,a0
                move.b  0(a6),d1
                move.b  $27(a6),d2
                move.b  $2A(a6),d3
                move.b  $26(a6),d4
                move.w  #$87,d0

loc_74D40:
                clr.l   (a0)+
                dbf     d0,loc_74D40
                move.b  d1,0(a6)
                move.b  d2,$27(a6)
                move.b  d3,$2A(a6)
                move.b  d4,$26(a6)
                move.b  #$80,9(a6)
                bra.w   PSGSilenceAll
; End of function sub_74D2A


; =============== S U B R O U T I N E =======================================


TempoWait:
                move.b  2(a6),1(a6)
                addq.b  #1,$4E(a6)
                addq.b  #1,$7E(a6)
                addq.b  #1,$AE(a6)
                addq.b  #1,$DE(a6)
                addq.b  #1,$10E(a6)
                addq.b  #1,$13E(a6)
                addq.b  #1,$16E(a6)
                addq.b  #1,$19E(a6)
                addq.b  #1,$1CE(a6)
                addq.b  #1,$1FE(a6)
                rts
; End of function TempoWait

; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR CycleSoundQueue

loc_74D90:
                move.b  $29(a6),2(a6)
                move.b  $29(a6),1(a6)
                move.b  #$80,$2A(a6)
                rts
; ---------------------------------------------------------------------------

loc_74DA4:
                move.b  $28(a6),2(a6)
                move.b  $28(a6),1(a6)
                clr.b   $2A(a6)
                rts
; END OF FUNCTION CHUNK FOR CycleSoundQueue

; =============== S U B R O U T I N E =======================================


DoFadeIn:
                tst.b   $25(a6)
                beq.s   loc_74DC2
                subq.b  #1,$25(a6)
                rts
; ---------------------------------------------------------------------------

loc_74DC2:
                tst.b   $26(a6)
                beq.s   loc_74E04
                subq.b  #1,$26(a6)
                move.b  #2,$25(a6)
                lea     $70(a6),a5
                moveq   #5,d7

loc_74DD8:
                tst.b   (a5)
                bpl.s   loc_74DE4
                subq.b  #1,9(a5)
                jsr     sub_7545E(pc)

loc_74DE4:
                adda.w  #$30,a5 
                dbf     d7,loc_74DD8
                moveq   #2,d7

loc_74DEE:
                tst.b   (a5)
                bpl.s   loc_74DFA
                subq.b  #1,9(a5)
                jsr     sub_75082(pc)

loc_74DFA:
                adda.w  #$30,a5 
                dbf     d7,loc_74DEE
                rts
; ---------------------------------------------------------------------------

loc_74E04:
                bclr    #2,$40(a6)
                clr.b   $24(a6)
                rts
; End of function DoFadeIn

; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR sub_74350

loc_74E10:
                btst    #1,(a5)
                bne.s   locret_74E2A
                btst    #2,(a5)
                bne.s   locret_74E2A
                moveq   #$28,d0 
                move.b  1(a5),d1
                ori.b   #$F0,d1
                bra.w   WriteFMI
; ---------------------------------------------------------------------------

locret_74E2A:
                rts
; END OF FUNCTION CHUNK FOR sub_74350

; =============== S U B R O U T I N E =======================================


sub_74E2C:
                btst    #4,(a5)
                bne.s   locret_74E42
                btst    #2,(a5)
                bne.s   locret_74E42

loc_74E38:
                moveq   #$28,d0 
                move.b  1(a5),d1
                bra.w   WriteFMI
; ---------------------------------------------------------------------------

locret_74E42:
                rts
; End of function sub_74E2C


; =============== S U B R O U T I N E =======================================


sub_74E44:
                btst    #2,(a5)
                bne.s   locret_74E4E
                bra.w   sub_74E50
; ---------------------------------------------------------------------------

locret_74E4E:
                rts
; End of function sub_74E44


; =============== S U B R O U T I N E =======================================


sub_74E50:

                btst    #2,1(a5)
                bne.s   loc_74E76
                add.b   1(a5),d0
; End of function sub_74E50


; =============== S U B R O U T I N E =======================================

; sub_74E5C:
WriteFMI:
                lea     ($A04000).l,a0

loc_74E62:
                btst    #7,(a0)
                bne.s   loc_74E62
                move.b  d0,(a0)

loc_74E6A:
                btst    #7,(a0)
                bne.s   loc_74E6A
                move.b  d1,1(a0)
                rts
; End of function WriteFMI

; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR sub_74E50

loc_74E76:
                move.b  1(a5),d2
                bclr    #2,d2
                add.b   d2,d0
; END OF FUNCTION CHUNK FOR sub_74E50

; =============== S U B R O U T I N E =======================================

; sub_74E80:
WriteFMII:
                lea     ($A04000).l,a0

loc_74E86:
                btst    #7,(a0)
                bne.s   loc_74E86
                move.b  d0,2(a0)

loc_74E90:
                btst    #7,(a0)
                bne.s   loc_74E90
                move.b  d1,3(a0)
                rts
; End of function WriteFMII

; ---------------------------------------------------------------------------
FMFrequencies:  dc.w $25E, $284, $2AB, $2D3, $2FE, $32D, $35C, $38F, $3C5, $3FF, $43C, $47C, $A5E, $A84, $AAB, $AD3
                dc.w $AFE, $B2D, $B5C, $B8F, $BC5, $BFF, $C3C, $C7C, $125E, $1284, $12AB, $12D3, $12FE, $132D, $135C, $138F
                dc.w $13C5, $13FF, $143C, $147C, $1A5E, $1A84, $1AAB, $1AD3, $1AFE, $1B2D, $1B5C, $1B8F, $1BC5, $1BFF, $1C3C, $1C7C
                dc.w $225E, $2284, $22AB, $22D3, $22FE, $232D, $235C, $238F, $23C5, $23FF, $243C, $247C, $2A5E, $2A84, $2AAB, $2AD3
                dc.w $2AFE, $2B2D, $2B5C, $2B8F, $2BC5, $2BFF, $2C3C, $2C7C, $325E, $3284, $32AB, $32D3, $32FE, $332D, $335C, $338F
                dc.w $33C5, $33FF, $343C, $347C, $3A5E, $3A84, $3AAB, $3AD3, $3AFE, $3B2D, $3B5C, $3B8F, $3BC5, $3BFF, $3C3C, $3C7C

; =============== S U B R O U T I N E =======================================


sub_74F5C:
                subq.b  #1,$E(a5)
                bne.s   loc_74F72
                bclr    #4,(a5)
                jsr     sub_74F84(pc)
                jsr     sub_74FE8(pc)
                bra.w   loc_7503A
; ---------------------------------------------------------------------------

loc_74F72:
                jsr     sub_74428(pc)
                jsr     sub_75032(pc)
                jsr     sub_74450(pc)
                jsr     sub_74FEE(pc)
                rts
; End of function sub_74F5C


; =============== S U B R O U T I N E =======================================


sub_74F84:
                bclr    #1,(a5)
                movea.l 4(a5),a4

loc_74F8C:
                moveq   #0,d5
                move.b  (a4)+,d5
                cmpi.b  #$E0,d5
                bcs.s   loc_74F9C
                jsr     CoordFlag(pc)
                bra.s   loc_74F8C
; ---------------------------------------------------------------------------

loc_74F9C:
                tst.b   d5
                bpl.s   loc_74FB0
                jsr     sub_74FB8(pc)
                move.b  (a4)+,d5
                tst.b   d5
                bpl.s   loc_74FB0
                subq.w  #1,a4
                bra.w   sub_743EA
; ---------------------------------------------------------------------------

loc_74FB0:
                jsr     sub_743CA(pc)
                bra.w   sub_743EA
; End of function sub_74F84


; =============== S U B R O U T I N E =======================================


sub_74FB8:
                subi.b  #$81,d5
                bcs.s   loc_74FD6
                add.b   8(a5),d5
                andi.w  #$7F,d5
                lsl.w   #1,d5
                lea     PSGFrequencies(pc),a0
                move.w  (a0,d5.w),$10(a5)
                bra.w   sub_743EA
; ---------------------------------------------------------------------------

loc_74FD6:
                bset    #1,(a5)
                move.w  #$FFFF,$10(a5)
                jsr     sub_743EA(pc)
                bra.w   PSGNoteOff
; End of function sub_74FB8


; =============== S U B R O U T I N E =======================================


sub_74FE8:

                move.w  $10(a5),d6
                bmi.s   loc_7502C
; End of function sub_74FE8


; =============== S U B R O U T I N E =======================================


sub_74FEE:
                move.b  $1E(a5),d0
                ext.w   d0
                add.w   d0,d6
                btst    #2,(a5)
                bne.s   locret_7502A
                btst    #1,(a5)
                bne.s   locret_7502A
                move.b  1(a5),d0
                cmpi.b  #$E0,d0
                bne.s   loc_75010
                move.b  #$C0,d0

loc_75010:
                move.w  d6,d1
                andi.b  #$F,d1
                or.b    d1,d0
                lsr.w   #4,d6
                andi.b  #$3F,d6
                move.b  d0,($C00011).l
                move.b  d6,($C00011).l

locret_7502A:
                rts
; End of function sub_74FEE

; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR sub_74FE8

loc_7502C:
                bset    #1,(a5)
                rts
; END OF FUNCTION CHUNK FOR sub_74FE8

; =============== S U B R O U T I N E =======================================


sub_75032:

                tst.b   $B(a5)
                beq.w   locret_750A2

loc_7503A:
                move.b  9(a5),d6
                moveq   #0,d0
                move.b  $B(a5),d0
                beq.s   sub_75082
                movea.l (Go_PSGIndex).l,a0
                subq.w  #1,d0
                lsl.w   #2,d0
                movea.l (a0,d0.w),a0
                move.b  $C(a5),d0
                move.b  (a0,d0.w),d0
                addq.b  #1,$C(a5)
                btst    #7,d0
                beq.s   loc_75078
                cmpi.b  #$83,d0
                beq.s   loc_750B2
                cmpi.b  #$85,d0
                beq.s   loc_750B8
                cmpi.b  #$80,d0
                beq.s   loc_750C2

loc_75078:
                add.w   d0,d6
                cmpi.b  #$10,d6
                bcs.s   sub_75082
                moveq   #$F,d6
; End of function sub_75032


; =============== S U B R O U T I N E =======================================


sub_75082:
                btst    #1,(a5)
                bne.s   locret_750A2
                btst    #2,(a5)
                bne.s   locret_750A2
                btst    #4,(a5)
                bne.s   loc_750A4

loc_75094:
                or.b    1(a5),d6
                addi.b  #$10,d6
                move.b  d6,($C00011).l

locret_750A2:
                rts
; ---------------------------------------------------------------------------

loc_750A4:
                tst.b   $13(a5)
                beq.s   loc_75094
                tst.b   $12(a5)
                bne.s   loc_75094
                rts
; End of function sub_75082

; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR sub_75032

loc_750B2:
                subq.b  #1,$C(a5)
                rts
; ---------------------------------------------------------------------------

loc_750B8:
                move.b  1(a0,d0.w),$C(a5)
                bra.w   loc_7503A
; ---------------------------------------------------------------------------

loc_750C2:
                clr.b   $C(a5)
                bra.w   loc_7503A
; END OF FUNCTION CHUNK FOR sub_75032

; =============== S U B R O U T I N E =======================================


PSGNoteOff:
                btst    #2,(a5)
                bne.s   locret_750DE

loc_750D0:
                move.b  1(a5),d0
                ori.b   #$1F,d0
                move.b  d0,($C00011).l

locret_750DE:
                rts
; End of function PSGNoteOff


; =============== S U B R O U T I N E =======================================


PSGSilenceAll:
                lea     ($C00011).l,a0
                move.b  #$9F,(a0)
                move.b  #$BF,(a0)
                move.b  #$DF,(a0)
                move.b  #$FF,(a0)
                rts
; End of function PSGSilenceAll

; ---------------------------------------------------------------------------
PSGFrequencies: dc.w $356, $326, $2F9, $2CE, $2A5, $280, $25C, $23A, $21A, $1FB, $1DF, $1C4, $1AB, $193, $17D, $167
                dc.w $153, $140, $12E, $11D, $10D, $FE, $EF, $E2, $D6, $C9, $BE, $B4, $A9, $A0, $97, $8F
                dc.w $87, $7F, $78, $71, $6B, $65, $5F, $5A, $55, $50, $4B, $47, $43, $40, $3C, $39
                dc.w $36, $33, $30, $2D, $2B, $28, $26, $24, $22, $20, $1F, $1D, $1B, $1A, $18, $17
                dc.w $16, $15, $13, $12, $11, 0

; =============== S U B R O U T I N E =======================================


CoordFlag:
                subi.w  #$E0,d5
                lsl.w   #2,d5
                jmp     loc_7518E(pc,d5.w)
; End of function CoordFlag

; ---------------------------------------------------------------------------

loc_7518E:
                bra.w   loc_7521C
; ---------------------------------------------------------------------------
                bra.w   loc_7523C
; ---------------------------------------------------------------------------
                bra.w   loc_75242
; ---------------------------------------------------------------------------
                bra.w   loc_75248
; ---------------------------------------------------------------------------
                bra.w   loc_7527A
; ---------------------------------------------------------------------------
                bra.w   loc_7532C
; ---------------------------------------------------------------------------
                bra.w   loc_7533C
; ---------------------------------------------------------------------------
                bra.w   loc_75346
; ---------------------------------------------------------------------------
                bra.w   loc_7534C
; ---------------------------------------------------------------------------
                bra.w   loc_75356
; ---------------------------------------------------------------------------
                bra.w   loc_753A8
; ---------------------------------------------------------------------------
                bra.w   loc_753B2
; ---------------------------------------------------------------------------
                bra.w   loc_753B8
; ---------------------------------------------------------------------------
                bra.w   loc_753C0
; ---------------------------------------------------------------------------
                bra.w   loc_753C8
; ---------------------------------------------------------------------------
                bra.w   loc_753D0
; ---------------------------------------------------------------------------
                bra.w   loc_754DA
; ---------------------------------------------------------------------------
                bra.w   loc_754FC
; ---------------------------------------------------------------------------
                bra.w   loc_75502
; ---------------------------------------------------------------------------
                bra.w   loc_755C4
; ---------------------------------------------------------------------------
                bra.w   loc_755DE
; ---------------------------------------------------------------------------
                bra.w   loc_755E4
; ---------------------------------------------------------------------------
                bra.w   loc_755EA
; ---------------------------------------------------------------------------
                bra.w   loc_755F6
; ---------------------------------------------------------------------------
                bra.w   loc_75610
; ---------------------------------------------------------------------------
                bra.w   loc_75622
; ---------------------------------------------------------------------------
                bra.w   loc_75636
; ---------------------------------------------------------------------------
                bra.w   loc_7563C
; ---------------------------------------------------------------------------
                bra.w   loc_75644
; ---------------------------------------------------------------------------
                bra.w   loc_7565A
; ---------------------------------------------------------------------------
                bra.w   loc_7568C
; ---------------------------------------------------------------------------
                moveq   #0,d0
                move.b  (a4)+,d0
                lsl.w   #2,d0
                jmp     loc_75214(pc,d0.w)
; ---------------------------------------------------------------------------

loc_75214:
                bra.w   loc_756A8
; ---------------------------------------------------------------------------
                bra.w   loc_756A8
; ---------------------------------------------------------------------------

loc_7521C:
                move.b  (a4)+,d1
                tst.b   1(a5)
                bmi.s   locret_7523A
                move.b  $A(a5),d0
                andi.b  #$37,d0
                or.b    d0,d1
                move.b  d1,$A(a5)
                move.b  #$B4,d0
                bra.w   sub_74E44
; ---------------------------------------------------------------------------

locret_7523A:
                rts
; ---------------------------------------------------------------------------

loc_7523C:
                move.b  (a4)+,$1E(a5)
                rts
; ---------------------------------------------------------------------------

loc_75242:
                move.b  (a4)+,7(a6)
                rts
; ---------------------------------------------------------------------------

loc_75248:
                movea.l (off_74010).l,a0
                moveq   #0,d0
                move.b  (a4)+,d0
                subq.b  #1,d0
                lsl.w   #2,d0
                adda.w  d0,a0
                bset    #3,(a5)
                move.l  a0,$14(a5)
                move.b  (a0)+,$18(a5)
                move.b  (a0)+,$19(a5)
                move.b  (a0)+,$1A(a5)
                move.b  (a0)+,d0
                lsr.b   #1,d0
                move.b  d0,$1B(a5)
                clr.w   $1C(a5)
                rts
; ---------------------------------------------------------------------------

loc_7527A:
                movea.l a6,a0
                lea     $3A0(a6),a1
                move.w  #$87,d0

loc_75284:
                move.l  (a1)+,(a0)+
                dbf     d0,loc_75284
                bset    #2,$40(a6)
                movea.l a5,a3
                move.b  #$28,d6 
                sub.b   $26(a6),d6
                moveq   #5,d7
                lea     $70(a6),a5

loc_752A0:
                btst    #7,(a5)
                beq.s   loc_752C2
                bset    #1,(a5)
                add.b   d6,9(a5)
                btst    #2,(a5)
                bne.s   loc_752C2
                moveq   #0,d0
                move.b  $B(a5),d0
                movea.l $18(a6),a1
                jsr     sub_753F8(pc)

loc_752C2:
                adda.w  #$30,a5 
                dbf     d7,loc_752A0
                moveq   #2,d7

loc_752CC:
                btst    #7,(a5)
                beq.s   loc_752DE
                bset    #1,(a5)
                jsr     PSGNoteOff(pc)
                add.b   d6,9(a5)

loc_752DE:
                adda.w  #$30,a5 
                dbf     d7,loc_752CC
                movea.l a3,a5
                move.b  #$80,$24(a6)
                move.b  #$28,$26(a6)
                clr.b   $27(a6)
                addq.w  #8,sp
                rts
; ---------------------------------------------------------------------------
                jsr     sub_74CA2(pc)
                bra.w   loc_75502
; ---------------------------------------------------------------------------
                move.b  (a4)+,$1F(a5)
                beq.s   loc_75320
                move.b  (a4)+,$20(a5)
                move.b  (a4)+,$21(a5)
                move.b  (a4)+,$22(a5)
                move.b  (a4),$23(a5)
                move.b  (a4)+,$24(a5)
                rts
; ---------------------------------------------------------------------------

loc_75320:
                move.b  #$B4,d0
                move.b  $A(a5),d1
                bra.w   sub_74E44
; ---------------------------------------------------------------------------

loc_7532C:
                move.b  (a4)+,d0
                tst.b   1(a5)
                bpl.s   loc_7533C
                add.b   d0,9(a5)
                addq.w  #1,a4
                rts
; ---------------------------------------------------------------------------

loc_7533C:
                move.b  (a4)+,d0
                add.b   d0,9(a5)
                bra.w   sub_7545E
; ---------------------------------------------------------------------------

loc_75346:
                bset    #4,(a5)
                rts
; ---------------------------------------------------------------------------

loc_7534C:
                move.b  (a4),$12(a5)
                move.b  (a4)+,$13(a5)
                rts
; ---------------------------------------------------------------------------

loc_75356:
                movea.l $18(a6),a1
                beq.s   loc_75360
                movea.l $1C(a6),a1

loc_75360:
                move.b  (a4),d3
                adda.w  #9,a0
                lea     unk_753A4(pc),a2
                moveq   #3,d6

loc_7536C:
                move.b  (a1)+,d1
                move.b  (a2)+,d0
                btst    #7,d3
                beq.s   loc_7537E
                bset    #7,d1
                jsr     sub_74E44(pc)

loc_7537E:
                lsl.w   #1,d3
                dbf     d6,loc_7536C
                move.b  (a4)+,d1
                moveq   #$22,d0
                jsr     WriteFMI(pc)
                move.b  (a4)+,d1
                move.b  $A(a5),d0
                andi.b  #$C0,d0
                or.b    d0,d1
                move.b  d1,$A(a5)
                move.b  #$B4,d0
                bra.w   sub_74E44
; ---------------------------------------------------------------------------
unk_753A4:      dc.b $60
                dc.b $68 ; h
                dc.b $64 ; d
                dc.b $6C ; l
; ---------------------------------------------------------------------------

loc_753A8:
                move.b  (a4),2(a6)
                move.b  (a4)+,1(a6)
                rts
; ---------------------------------------------------------------------------

loc_753B2:
                move.b  (a4)+,$A(a6)
                rts
; ---------------------------------------------------------------------------

loc_753B8:
                move.b  (a4)+,d0
                add.b   d0,9(a5)
                rts
; ---------------------------------------------------------------------------

loc_753C0:
                move.b  #0,$2C(a6)
                rts
; ---------------------------------------------------------------------------

loc_753C8:
                move.b  (a4)+,d0
                move.b  (a4)+,d1
                bra.w   WriteFMI
; ---------------------------------------------------------------------------

loc_753D0:
                moveq   #0,d0
                move.b  (a4)+,d0
                move.b  d0,$B(a5)
                btst    #2,(a5)
                bne.w   locret_75454
                movea.l $18(a6),a1
                tst.b   $E(a6)
                beq.s   sub_753F8
                movea.l $1C(a6),a1
                tst.b   $E(a6)
                bmi.s   sub_753F8
                movea.l $20(a6),a1

; =============== S U B R O U T I N E =======================================


sub_753F8:
                subq.w  #1,d0
                bmi.s   loc_75406
                move.w  #$19,d1

loc_75400:
                adda.w  d1,a1
                dbf     d0,loc_75400

loc_75406:
                move.b  (a1)+,d1
                move.b  d1,$25(a5)
                move.b  d1,d4
                move.b  #$B0,d0
                jsr     sub_74E50(pc)
                lea     sub_754C2(pc),a2
                moveq   #$13,d3

loc_7541C:
                move.b  (a2)+,d0
                move.b  (a1)+,d1
                jsr     sub_74E50(pc)
                dbf     d3,loc_7541C
                moveq   #3,d5
                andi.w  #7,d4
                move.b  byte_75456(pc,d4.w),d4
                move.b  9(a5),d3

loc_75436:
                move.b  (a2)+,d0
                move.b  (a1)+,d1
                lsr.b   #1,d4
                bcc.s   loc_75440
                add.b   d3,d1

loc_75440:
                jsr     sub_74E50(pc)
                dbf     d5,loc_75436
                move.b  #$B4,d0
                move.b  $A(a5),d1
                jsr     sub_74E50(pc)

locret_75454:
                rts
; End of function sub_753F8

; ---------------------------------------------------------------------------
byte_75456:     dc.b 8
                dc.b   8
                dc.b   8
                dc.b   8
                dc.b  $A
                dc.b  $E
                dc.b  $E
                dc.b  $F

; =============== S U B R O U T I N E =======================================


sub_7545E:
                btst    #2,(a5)
                bne.s   locret_754C0
                moveq   #0,d0
                move.b  $B(a5),d0
                movea.l $18(a6),a1
                tst.b   $E(a6)
                beq.s   loc_75482
                movea.l $1C(a6),a1
                tst.b   $E(a6)
                bmi.s   loc_75482
                movea.l $20(a6),a1

loc_75482:
                subq.w  #1,d0
                bmi.s   loc_75490
                move.w  #$19,d1

loc_7548A:
                adda.w  d1,a1
                dbf     d0,loc_7548A

loc_75490:
                adda.w  #$15,a1
                lea     unk_754D6(pc),a2
                move.b  $25(a5),d0
                andi.w  #7,d0
                move.b  byte_75456(pc,d0.w),d4
                move.b  9(a5),d3
                bmi.s   locret_754C0
                moveq   #3,d5

loc_754AC:
                move.b  (a2)+,d0
                move.b  (a1)+,d1
                lsr.b   #1,d4
                bcc.s   loc_754BC
                add.b   d3,d1
                bcs.s   loc_754BC
                jsr     sub_74E50(pc)

loc_754BC:
                dbf     d5,loc_754AC

locret_754C0:
                rts
; End of function sub_7545E


; =============== S U B R O U T I N E =======================================


sub_754C2:
                move.w  (Osc_Data2+$2E).w,d0
                addq.w  #8,(a0)+
                addq.w  #2,(a4)+
                bra.s   loc_75534
; ---------------------------------------------------------------------------
                dc.b $64
                dc.b $6C ; l
                dc.b $70
                dc.b $78 ; x
                dc.b $74
                dc.b $7C ; |
                dc.b $80
                dc.b $88
                dc.b $84
                dc.b $8C
unk_754D6:      dc.b $40 ; @
                dc.b $48 ; H
                dc.b $44 ; D
                dc.b $4C ; L
; ---------------------------------------------------------------------------

loc_754DA:
                bset    #3,(a5)
                move.l  a4,$14(a5)
                move.b  (a4)+,$18(a5)
                move.b  (a4)+,$19(a5)
                move.b  (a4)+,$1A(a5)
                move.b  (a4)+,d0
                lsr.b   #1,d0
                move.b  d0,$1B(a5)
                clr.w   $1C(a5)
                rts
; ---------------------------------------------------------------------------

loc_754FC:
                bset    #3,(a5)
                rts
; ---------------------------------------------------------------------------

loc_75502:
                bclr    #7,(a5)
                bclr    #4,(a5)
                tst.b   1(a5)
                bmi.s   loc_7551E
                tst.b   8(a6)
                bmi.w   loc_755C0
                jsr     sub_74E2C(pc)
                bra.s   loc_75522
; ---------------------------------------------------------------------------

loc_7551E:
                jsr     PSGNoteOff(pc)

loc_75522:
                tst.b   $E(a6)
                bpl.w   loc_755C0
                clr.b   0(a6)
                moveq   #0,d0
                move.b  1(a5),d0

loc_75534:
                bmi.s   loc_7558A
                lea     dword_74A0C(pc),a0
                movea.l a5,a3
                cmpi.b  #4,d0
                bne.s   loc_75552
                tst.b   $340(a6)
                bpl.s   loc_75552
                lea     $340(a6),a5
                movea.l $20(a6),a1
                bra.s   loc_75562
; ---------------------------------------------------------------------------

loc_75552:
                subq.b  #2,d0
                lsl.b   #2,d0
                movea.l (a0,d0.w),a5
                tst.b   (a5)
                bpl.s   loc_75572
                movea.l $18(a6),a1

loc_75562:
                bclr    #2,(a5)
                bset    #1,(a5)
                move.b  $B(a5),d0
                jsr     sub_753F8(pc)

loc_75572:
                movea.l a3,a5
                cmpi.b  #2,1(a5)
                bne.s   loc_755C0
                clr.b   $F(a6)
                moveq   #0,d1
                moveq   #$27,d0 
                jsr     WriteFMI(pc)
                bra.s   loc_755C0
; ---------------------------------------------------------------------------

loc_7558A:
                lea     $370(a6),a0
                tst.b   (a0)
                bpl.s   loc_7559E
                cmpi.b  #$E0,d0
                beq.s   loc_755A8
                cmpi.b  #$C0,d0
                beq.s   loc_755A8

loc_7559E:
                lea     dword_74A0C(pc),a0
                lsr.b   #3,d0
                movea.l (a0,d0.w),a0

loc_755A8:
                bclr    #2,(a0)
                bset    #1,(a0)
                cmpi.b  #$E0,1(a0)
                bne.s   loc_755C0
                move.b  $26(a0),($C00011).l

loc_755C0:
                addq.w  #8,sp
                rts
; End of function sub_754C2

; ---------------------------------------------------------------------------

loc_755C4:
                move.b  #$E0,1(a5)
                move.b  (a4)+,$26(a5)
                btst    #2,(a5)
                bne.s   locret_755DC
                move.b  -1(a4),($C00011).l

locret_755DC:
                rts
; ---------------------------------------------------------------------------

loc_755DE:
                bclr    #3,(a5)
                rts
; ---------------------------------------------------------------------------

loc_755E4:
                move.b  (a4)+,$B(a5)
                rts
; ---------------------------------------------------------------------------

loc_755EA:
                move.b  (a4)+,d0
                lsl.w   #8,d0
                move.b  (a4)+,d0
                adda.w  d0,a4
                subq.w  #1,a4
                rts
; ---------------------------------------------------------------------------

loc_755F6:
                moveq   #0,d0
                move.b  (a4)+,d0
                move.b  (a4)+,d1
                tst.b   $28(a5,d0.w)
                bne.s   loc_75606
                move.b  d1,$28(a5,d0.w)

loc_75606:
                subq.b  #1,$28(a5,d0.w)
                bne.s   loc_755EA
                addq.w  #2,a4
                rts
; ---------------------------------------------------------------------------

loc_75610:
                moveq   #0,d0
                move.b  $D(a5),d0
                subq.b  #4,d0
                move.l  a4,(a5,d0.w)
                move.b  d0,$D(a5)
                bra.s   loc_755EA
; ---------------------------------------------------------------------------

loc_75622:
                moveq   #0,d0
                move.b  $D(a5),d0
                movea.l (a5,d0.w),a4
                addq.w  #2,a4
                addq.b  #4,d0
                move.b  d0,$D(a5)
                rts
; ---------------------------------------------------------------------------

loc_75636:
                move.b  (a4)+,2(a5)
                rts
; ---------------------------------------------------------------------------

loc_7563C:
                move.b  (a4)+,d0
                add.b   d0,8(a5)
                rts
; ---------------------------------------------------------------------------

loc_75644:
                lea     $40(a6),a0
                move.b  (a4)+,d0
                moveq   #$30,d1
                moveq   #9,d2

loc_7564E:
                move.b  d0,2(a0)
                adda.w  d1,a0
                dbf     d2,loc_7564E
                rts
; ---------------------------------------------------------------------------

loc_7565A:
                bclr    #7,(a5)
                bclr    #4,(a5)
                jsr     sub_74E2C(pc)
                tst.b   $250(a6)
                bmi.s   loc_75688
                movea.l a5,a3
                lea     $100(a6),a5
                movea.l $18(a6),a1
                bclr    #2,(a5)
                bset    #1,(a5)
                move.b  $B(a5),d0
                jsr     sub_753F8(pc)
                movea.l a3,a5

loc_75688:
                addq.w  #8,sp
                rts
; ---------------------------------------------------------------------------

loc_7568C:
                lea     $10(a6),a0
                moveq   #7,d0

loc_75692:
                move.b  (a4)+,(a0)+
                dbf     d0,loc_75692
                move.b  #$80,$F(a6)
                move.b  #$27,d0
                moveq   #$40,d1
                bra.w   WriteFMI
; ---------------------------------------------------------------------------

loc_756A8:
                lea     unk_756C8(pc),a1
                moveq   #3,d3

loc_756AE:
                move.b  (a1)+,d0
                move.b  (a4)+,d1
                bset    #3,d1
                jsr     sub_74E44(pc)
                move.b  (a1)+,d0
                moveq   #$1F,d1
                jsr     sub_74E44(pc)
                dbf     d3,loc_756AE
                rts
; ---------------------------------------------------------------------------
unk_756C8:      dc.b $90
                dc.b $50
                dc.b $98
                dc.b $58
                dc.b $94
                dc.b $54
                dc.b $9C
                dc.b $5C

SoundDriver:    incbin "Sound/Driver/z80.bin"
                even
Music81:        incbin "Sound/Music/music81.bin"
                even
Music82:        incbin "Sound/Music/music82.bin"
                even
Music83:        incbin "Sound/Music/music83.bin"
                even
Music84:        incbin "Sound/Music/music84.bin"
                even
Music85:        incbin "Sound/Music/music85.bin"
                even
Music86:        incbin "Sound/Music/music86.bin"
                even
Music87:        incbin "Sound/Music/music87.bin"
                even
Music88:        incbin "Sound/Music/music88.bin"
                even
Music89:        incbin "Sound/Music/music89.bin"
                even
Music8A:        incbin "Sound/Music/music8A.bin"
                even
Music8B:        incbin "Sound/Music/music8B.bin"
                even
Music8C:        incbin "Sound/Music/music8C.bin"
                even
Music8D:        incbin "Sound/Music/music8D.bin"
                even
Music8E:        incbin "Sound/Music/music8E.bin"
                even
Music8F:        incbin "Sound/Music/music8F.bin"
                even
Music90:        incbin "Sound/Music/music90.bin"
                even
Music91:        incbin "Sound/Music/music91.bin"
                even
SoundIndex:     dc.l Sound_A0, Sound_A1, Sound_A2
		dc.l Sound_A3, Sound_A4, Sound_A5
		dc.l Sound_A6, Sound_A7, Sound_A8
		dc.l Sound_A9, Sound_AA, Sound_AB
		dc.l Sound_AC, Sound_AD, Sound_AE
		dc.l Sound_AF, Sound_B0, Sound_B1
		dc.l Sound_B2, Sound_B3, Sound_B4
		dc.l Sound_B5, Sound_B6, Sound_B7
		dc.l Sound_B8, Sound_B9, Sound_BA
		dc.l Sound_BB, Sound_BC, Sound_BD
		dc.l Sound_BE, Sound_BF, Sound_C0
		dc.l Sound_C1, Sound_C2, Sound_C3
		dc.l Sound_C4, Sound_C5, Sound_C6
		dc.l Sound_C7, Sound_C8, Sound_C9
		dc.l Sound_CA, Sound_CB, Sound_CC
		dc.l Sound_CD, Sound_CE, Sound_CF
SpecSoundIndex: dc.l Sound_D0
                dc.l Sound_D1
                dc.l Sound_D2
Sound_A0:       incbin "Sound/SoundA0.bin"
                even
Sound_A1:       incbin "Sound/SoundA1.bin"
                even
Sound_A2:       incbin "Sound/SoundA2.bin"
                even
Sound_A3:       incbin "Sound/SoundA3.bin"
                even
Sound_A4:       incbin "Sound/SoundA4.bin"
                even
Sound_A5:       incbin "Sound/SoundA5.bin"
                even
Sound_A6:       incbin "Sound/SoundA6.bin"
                even
Sound_A7:       incbin "Sound/SoundA7.bin"
                even
Sound_A8:       incbin "Sound/SoundA8.bin"
                even
Sound_A9:       incbin "Sound/SoundA9.bin"
                even
Sound_AA:       incbin "Sound/SoundAA.bin"
                even
Sound_AB:       incbin "Sound/SoundAB.bin"
                even
Sound_AC:       incbin "Sound/SoundAC.bin"
                even
Sound_AD:       incbin "Sound/SoundAD.bin"
                even
Sound_AE:       incbin "Sound/SoundAE.bin"
                even
Sound_AF:       incbin "Sound/SoundAF.bin"
                even
Sound_B0:       incbin "Sound/SoundB0.bin"
                even
Sound_B1:       incbin "Sound/SoundB1.bin"
                even
Sound_B2:       incbin "Sound/SoundB2.bin"
                even
Sound_B3:       incbin "Sound/SoundB3.bin"
                even
Sound_B4:       incbin "Sound/SoundB4.bin"
                even
Sound_B5:       incbin "Sound/SoundB5.bin"
                even
Sound_B6:       incbin "Sound/SoundB6.bin"
                even
Sound_B7:       incbin "Sound/SoundB7.bin"
                even
Sound_B8:       incbin "Sound/SoundB8.bin"
                even
Sound_B9:       incbin "Sound/SoundB9.bin"
                even
Sound_BA:       incbin "Sound/SoundBA.bin"
                even
Sound_BB:       incbin "Sound/SoundBB.bin"
                even
Sound_BC:       incbin "Sound/SoundBC.bin"
                even
Sound_BD:       incbin "Sound/SoundBD.bin"
                even
Sound_BE:       incbin "Sound/SoundBE.bin"
                even
Sound_BF:       incbin "Sound/SoundBF.bin"
                even
Sound_C0:       incbin "Sound/SoundC0.bin"
                even
Sound_C1:       incbin "Sound/SoundC1.bin"
                even
Sound_C2:       incbin "Sound/SoundC2.bin"
                even
Sound_C3:       incbin "Sound/SoundC3.bin"
                even
Sound_C4:       incbin "Sound/SoundC4.bin"
                even
Sound_C5:       incbin "Sound/SoundC5.bin"
                even
Sound_C6:       incbin "Sound/SoundC6.bin"
                even
Sound_C7:       incbin "Sound/SoundC7.bin"
                even
Sound_C8:       incbin "Sound/SoundC8.bin"
                even
Sound_C9:       incbin "Sound/SoundC9.bin"
                even
Sound_CA:       incbin "Sound/SoundCA.bin"
                even
Sound_CB:       incbin "Sound/SoundCB.bin"
                even
Sound_CC:       incbin "Sound/SoundCC.bin"
                even
Sound_CD:       incbin "Sound/SoundCD.bin"
                even
Sound_CE:       incbin "Sound/SoundCE.bin"
                even
Sound_CF:       incbin "Sound/SoundCF.bin"
                even
Sound_D0:       incbin "Sound/SoundD0.bin"
                even
Sound_D1:       incbin "Sound/SoundD1.bin"
                even
Sound_D2:       incbin "Sound/SoundD2.bin"
                even
                if Padding
                dcb.b $7FFFF-*,$FF
                endif
ObjPos_Null2:   dc.b $FF


; end of 'ROM'
EndOfROM:
                END
